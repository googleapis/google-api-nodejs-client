{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud_search": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.debug": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.query": {
          "description": "Search your organization's data in the Cloud Search index"
        },
        "https://www.googleapis.com/auth/cloud_search.settings": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.settings.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.settings.query": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.stats": {
          "description": "Index and serve your organization's data with Cloud Search"
        },
        "https://www.googleapis.com/auth/cloud_search.stats.indexing": {
          "description": "Index and serve your organization's data with Cloud Search"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://cloudsearch.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Cloud Search",
  "description": "Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.",
  "discoveryVersion": "v1",
  "documentationLink": "https://developers.google.com/cloud-search/docs/guides/",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "cloudsearch:v1",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://cloudsearch.mtls.googleapis.com/",
  "name": "cloudsearch",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "debug": {
      "resources": {
        "datasources": {
          "resources": {
            "items": {
              "methods": {
                "checkAccess": {
                  "description": "Checks whether an item is accessible by specified principal. Principal must be a user; groups and domain values aren't supported. **Note:** This API requires an admin account to execute.",
                  "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}:checkAccess",
                  "httpMethod": "POST",
                  "id": "cloudsearch.debug.datasources.items.checkAccess",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Item name, format: datasources/{source_id}/items/{item_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/debug/{+name}:checkAccess",
                  "request": {
                    "$ref": "Principal"
                  },
                  "response": {
                    "$ref": "CheckAccessResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ]
                },
                "searchByViewUrl": {
                  "description": "Fetches the item whose viewUrl exactly matches that of the URL provided in the request. **Note:** This API requires an admin account to execute.",
                  "flatPath": "v1/debug/datasources/{datasourcesId}/items:searchByViewUrl",
                  "httpMethod": "POST",
                  "id": "cloudsearch.debug.datasources.items.searchByViewUrl",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Source name, format: datasources/{source_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/debug/{+name}/items:searchByViewUrl",
                  "request": {
                    "$ref": "SearchItemsByViewUrlRequest"
                  },
                  "response": {
                    "$ref": "SearchItemsByViewUrlResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ]
                }
              },
              "resources": {
                "unmappedids": {
                  "methods": {
                    "list": {
                      "description": "List all unmapped identities for a specific item. **Note:** This API requires an admin account to execute.",
                      "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}/unmappedids",
                      "httpMethod": "GET",
                      "id": "cloudsearch.debug.datasources.items.unmappedids.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "debugOptions.enableDebugging": {
                          "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "pageSize": {
                          "description": "Maximum number of items to fetch in a request. Defaults to 100.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "The name of the item, in the following format: datasources/{source_id}/items/{ID}",
                          "location": "path",
                          "pattern": "^datasources/[^/]+/items/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1/debug/{+parent}/unmappedids",
                      "response": {
                        "$ref": "ListUnmappedIdentitiesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.debug"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "identitysources": {
          "resources": {
            "items": {
              "methods": {
                "listForunmappedidentity": {
                  "description": "Lists names of items associated with an unmapped identity. **Note:** This API requires an admin account to execute.",
                  "flatPath": "v1/debug/identitysources/{identitysourcesId}/items:forunmappedidentity",
                  "httpMethod": "GET",
                  "id": "cloudsearch.debug.identitysources.items.listForunmappedidentity",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "groupResourceName": {
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of items to fetch in a request. Defaults to 100.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The name of the identity source, in the following format: identitysources/{source_id}}",
                      "location": "path",
                      "pattern": "^identitysources/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "userResourceName": {
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/debug/{+parent}/items:forunmappedidentity",
                  "response": {
                    "$ref": "ListItemNamesForUnmappedIdentityResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ]
                }
              }
            },
            "unmappedids": {
              "methods": {
                "list": {
                  "description": "Lists unmapped user identities for an identity source. **Note:** This API requires an admin account to execute.",
                  "flatPath": "v1/debug/identitysources/{identitysourcesId}/unmappedids",
                  "httpMethod": "GET",
                  "id": "cloudsearch.debug.identitysources.unmappedids.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "pageSize": {
                      "description": "Maximum number of items to fetch in a request. Defaults to 100.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The name of the identity source, in the following format: identitysources/{source_id}",
                      "location": "path",
                      "pattern": "^identitysources/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "resolutionStatusCode": {
                      "description": "Limit users selection to this status.",
                      "enum": [
                        "CODE_UNSPECIFIED",
                        "NOT_FOUND",
                        "IDENTITY_SOURCE_NOT_FOUND",
                        "IDENTITY_SOURCE_MISCONFIGURED",
                        "TOO_MANY_MAPPINGS_FOUND",
                        "INTERNAL_ERROR"
                      ],
                      "enumDescriptions": [
                        "Input-only value. Used to list all unmapped identities regardless of status.",
                        "The unmapped identity was not found in IDaaS, and needs to be provided by the user.",
                        "The identity source associated with the identity was either not found or deleted.",
                        "IDaaS does not understand the identity source, probably because the schema was modified in a non compatible way.",
                        "The number of users associated with the external identity is too large.",
                        "Internal error."
                      ],
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/debug/{+parent}/unmappedids",
                  "response": {
                    "$ref": "ListUnmappedIdentitiesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.debug"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "indexing": {
      "resources": {
        "datasources": {
          "methods": {
            "deleteSchema": {
              "description": "Deletes the schema of a data source. **Note:** This API requires an admin or service account to execute.",
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "httpMethod": "DELETE",
              "id": "cloudsearch.indexing.datasources.deleteSchema",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the data source to delete Schema. Format: datasources/{source_id}",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/indexing/{+name}/schema",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "getSchema": {
              "description": "Gets the schema of a data source. **Note:** This API requires an admin or service account to execute.",
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "httpMethod": "GET",
              "id": "cloudsearch.indexing.datasources.getSchema",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the data source to get Schema. Format: datasources/{source_id}",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/indexing/{+name}/schema",
              "response": {
                "$ref": "Schema"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "updateSchema": {
              "description": "Updates the schema of a data source. This method does not perform incremental updates to the schema. Instead, this method updates the schema by overwriting the entire schema. **Note:** This API requires an admin or service account to execute.",
              "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
              "httpMethod": "PUT",
              "id": "cloudsearch.indexing.datasources.updateSchema",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the data source to update Schema. Format: datasources/{source_id}",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/indexing/{+name}/schema",
              "request": {
                "$ref": "UpdateSchemaRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            }
          },
          "resources": {
            "items": {
              "methods": {
                "delete": {
                  "description": "Deletes Item resource for the specified resource name. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}",
                  "httpMethod": "DELETE",
                  "id": "cloudsearch.indexing.datasources.items.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "connectorName": {
                      "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
                      "location": "query",
                      "type": "string"
                    },
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "mode": {
                      "description": "Required. The RequestMode for this request.",
                      "enum": [
                        "UNSPECIFIED",
                        "SYNCHRONOUS",
                        "ASYNCHRONOUS"
                      ],
                      "enumDescriptions": [
                        "The priority is not specified in the update request. Leaving priority unspecified results in an update failure.",
                        "For real-time updates.",
                        "For changes that are executed after the response is sent back to the caller."
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Required. The name of the item to delete. Format: datasources/{source_id}/items/{item_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "version": {
                      "description": "Required. The incremented version of the item to delete from the index. The indexing system stores the version from the datasource as a byte string and compares the Item version in the index to the version of the queued Item using lexical ordering. Cloud Search Indexing won't delete any queued item with a version value that is less than or equal to the version of the currently indexed item. The maximum length for this field is 1024 bytes. For information on how item version affects the deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com/cloud-search/docs/guides/operations).",
                      "format": "byte",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "deleteQueueItems": {
                  "description": "Deletes all items in a queue. This method is useful for deleting stale items. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:deleteQueueItems",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.deleteQueueItems",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the Data Source to delete items in a queue. Format: datasources/{source_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}/items:deleteQueueItems",
                  "request": {
                    "$ref": "DeleteQueueItemsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "get": {
                  "description": "Gets Item resource by item name. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}",
                  "httpMethod": "GET",
                  "id": "cloudsearch.indexing.datasources.items.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "connectorName": {
                      "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
                      "location": "query",
                      "type": "string"
                    },
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the item to get info. Format: datasources/{source_id}/items/{item_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}",
                  "response": {
                    "$ref": "Item"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "index": {
                  "description": "Updates Item ACL, metadata, and content. It will insert the Item if it does not exist. This method does not support partial updates. Fields with no provided values are cleared out in the Cloud Search index. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:index",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.index",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The maximum length is 1536 characters.",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}:index",
                  "request": {
                    "$ref": "IndexItemRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "list": {
                  "description": "Lists all or a subset of Item resources. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items",
                  "httpMethod": "GET",
                  "id": "cloudsearch.indexing.datasources.items.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "brief": {
                      "description": "When set to true, the indexing system only populates the following fields: name, version, queue. metadata.hash, metadata.title, metadata.sourceRepositoryURL, metadata.objectType, metadata.createTime, metadata.updateTime, metadata.contentLanguage, metadata.mimeType, structured_data.hash, content.hash, itemType, itemStatus.code, itemStatus.processingError.code, itemStatus.repositoryError.type, If this value is false, then all the fields are populated in Item.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "connectorName": {
                      "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
                      "location": "query",
                      "type": "string"
                    },
                    "debugOptions.enableDebugging": {
                      "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the Data Source to list Items. Format: datasources/{source_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of items to fetch in a request. The max value is 1000 when brief is true. The max value is 10 if brief is false. The default value is 10",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}/items",
                  "response": {
                    "$ref": "ListItemsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "poll": {
                  "description": "Polls for unreserved items from the indexing queue and marks a set as reserved, starting with items that have the oldest timestamp from the highest priority ItemStatus. The priority order is as follows: ERROR MODIFIED NEW_ITEM ACCEPTED Reserving items ensures that polling from other threads cannot create overlapping sets. After handling the reserved items, the client should put items back into the unreserved state, either by calling index, or by calling push with the type REQUEUE. Items automatically become available (unreserved) after 4 hours even if no update or push method is called. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:poll",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.poll",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the Data Source to poll items. Format: datasources/{source_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}/items:poll",
                  "request": {
                    "$ref": "PollItemsRequest"
                  },
                  "response": {
                    "$ref": "PollItemsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "push": {
                  "description": "Pushes an item onto a queue for later polling and updating. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:push",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.push",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the item to push into the indexing queue. Format: datasources/{source_id}/items/{ID} This is a required field. The maximum length is 1536 characters.",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}:push",
                  "request": {
                    "$ref": "PushItemRequest"
                  },
                  "response": {
                    "$ref": "Item"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "unreserve": {
                  "description": "Unreserves all items from a queue, making them all eligible to be polled. This method is useful for resetting the indexing queue after a connector has been restarted. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items:unreserve",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.unreserve",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the Data Source to unreserve all items. Format: datasources/{source_id}",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}/items:unreserve",
                  "request": {
                    "$ref": "UnreserveItemsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                },
                "upload": {
                  "description": "Creates an upload session for uploading item content. For items smaller than 100 KB, it's easier to embed the content inline within an index request. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
                  "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:upload",
                  "httpMethod": "POST",
                  "id": "cloudsearch.indexing.datasources.items.upload",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the Item to start a resumable upload. Format: datasources/{source_id}/items/{item_id}. The maximum length is 1536 bytes.",
                      "location": "path",
                      "pattern": "^datasources/[^/]+/items/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/indexing/{+name}:upload",
                  "request": {
                    "$ref": "StartUploadItemRequest"
                  },
                  "response": {
                    "$ref": "UploadItemRef"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.indexing"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "upload": {
          "description": "Uploads media for indexing. The upload endpoint supports direct and resumable upload protocols and is intended for large items that can not be [inlined during index requests](https://developers.google.com/cloud-search/docs/reference/rest/v1/indexing.datasources.items#itemcontent). To index large content: 1. Call indexing.datasources.items.upload with the item name to begin an upload session and retrieve the UploadItemRef. 1. Call media.upload to upload the content, as a streaming request, using the same resource name from the UploadItemRef from step 1. 1. Call indexing.datasources.items.index to index the item. Populate the [ItemContent](/cloud-search/docs/reference/rest/v1/indexing.datasources.items#ItemContent) with the UploadItemRef from step 1. For additional information, see [Create a content connector using the REST API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest). **Note:** This API requires a service account to execute.",
          "flatPath": "v1/media/{mediaId}",
          "httpMethod": "POST",
          "id": "cloudsearch.media.upload",
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/v1/media/{+resourceName}"
              }
            }
          },
          "parameterOrder": [
            "resourceName"
          ],
          "parameters": {
            "resourceName": {
              "description": "Name of the media that is being downloaded. See ReadRequest.resource_name.",
              "location": "path",
              "pattern": "^.*$",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/media/{+resourceName}",
          "request": {
            "$ref": "Media"
          },
          "response": {
            "$ref": "Media"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.indexing"
          ],
          "supportsMediaUpload": true
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "GET",
          "id": "cloudsearch.operations.get",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "pattern": "^operations/.*$",
              "required": true,
              "type": "string"
            }
          },
          "path": "v1/{+name}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.debug",
            "https://www.googleapis.com/auth/cloud_search.indexing",
            "https://www.googleapis.com/auth/cloud_search.settings",
            "https://www.googleapis.com/auth/cloud_search.settings.indexing",
            "https://www.googleapis.com/auth/cloud_search.settings.query"
          ]
        }
      },
      "resources": {
        "lro": {
          "methods": {
            "list": {
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
              "flatPath": "v1/operations/{operationsId}/lro",
              "httpMethod": "GET",
              "id": "cloudsearch.operations.lro.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the operation's parent resource.",
                  "location": "path",
                  "pattern": "^operations/.*$",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}/lro",
              "response": {
                "$ref": "ListOperationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.debug",
                "https://www.googleapis.com/auth/cloud_search.indexing",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            }
          }
        }
      }
    },
    "query": {
      "methods": {
        "debugSearch": {
          "description": "Returns Debug information for Cloud Search Query API provides the search method. **Note:** This API requires a standard end user account to execute. A service account can't perform Query API requests directly; to use a service account to perform queries, set up [Google Workspace domain-wide delegation of authority](https://developers.google.com/cloud-search/docs/guides/delegation/).",
          "flatPath": "v1/query:debugSearch",
          "httpMethod": "POST",
          "id": "cloudsearch.query.debugSearch",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/query:debugSearch",
          "request": {
            "$ref": "SearchRequest"
          },
          "response": {
            "$ref": "DebugResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ]
        },
        "removeActivity": {
          "description": "Provides functionality to remove logged activity for a user. Currently to be used only for Chat 1p clients **Note:** This API requires a standard end user account to execute. A service account can't perform Remove Activity requests directly; to use a service account to perform queries, set up [Google Workspace domain-wide delegation of authority](https://developers.google.com/cloud-search/docs/guides/delegation/).",
          "flatPath": "v1/query:removeActivity",
          "httpMethod": "POST",
          "id": "cloudsearch.query.removeActivity",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/query:removeActivity",
          "request": {
            "$ref": "RemoveActivityRequest"
          },
          "response": {
            "$ref": "RemoveActivityResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ]
        },
        "search": {
          "description": "The Cloud Search Query API provides the search method, which returns the most relevant results from a user query. The results can come from Google Workspace apps, such as Gmail or Google Drive, or they can come from data that you have indexed from a third party. **Note:** This API requires a standard end user account to execute. A service account can't perform Query API requests directly; to use a service account to perform queries, set up [Google Workspace domain-wide delegation of authority](https://developers.google.com/cloud-search/docs/guides/delegation/).",
          "flatPath": "v1/query/search",
          "httpMethod": "POST",
          "id": "cloudsearch.query.search",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/query/search",
          "request": {
            "$ref": "SearchRequest"
          },
          "response": {
            "$ref": "SearchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ]
        },
        "suggest": {
          "description": "Provides suggestions for autocompleting the query. **Note:** This API requires a standard end user account to execute. A service account can't perform Query API requests directly; to use a service account to perform queries, set up [Google Workspace domain-wide delegation of authority](https://developers.google.com/cloud-search/docs/guides/delegation/).",
          "flatPath": "v1/query/suggest",
          "httpMethod": "POST",
          "id": "cloudsearch.query.suggest",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/query/suggest",
          "request": {
            "$ref": "SuggestRequest"
          },
          "response": {
            "$ref": "SuggestResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.query"
          ]
        }
      },
      "resources": {
        "sources": {
          "methods": {
            "list": {
              "description": "Returns list of sources that user can use for Search and Suggest APIs. **Note:** This API requires a standard end user account to execute. A service account can't perform Query API requests directly; to use a service account to perform queries, set up [Google Workspace domain-wide delegation of authority](https://developers.google.com/cloud-search/docs/guides/delegation/).",
              "flatPath": "v1/query/sources",
              "httpMethod": "GET",
              "id": "cloudsearch.query.sources.list",
              "parameterOrder": [],
              "parameters": {
                "pageToken": {
                  "description": "Number of sources to return in the response.",
                  "location": "query",
                  "type": "string"
                },
                "requestOptions.debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "requestOptions.languageCode": {
                  "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For translations. Set this field using the language set in browser or for the page. In the event that the user's language preference is known, set this field to the known user language. When specified, the documents in search results are biased towards the specified language. The Suggest API uses this field as a hint to make better third-party autocomplete predictions.",
                  "location": "query",
                  "type": "string"
                },
                "requestOptions.searchApplicationId": {
                  "description": "The ID generated when you create a search application using the [admin console](https://support.google.com/a/answer/9043922).",
                  "location": "query",
                  "type": "string"
                },
                "requestOptions.timeZone": {
                  "description": "Current user's time zone id, such as \"America/Los_Angeles\" or \"Australia/Sydney\". These IDs are defined by [Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/) project, and currently available in the file [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml). This field is used to correctly interpret date and time queries. If this field is not specified, the default time zone (UTC) is used.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/query/sources",
              "response": {
                "$ref": "ListQuerySourcesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.query"
              ]
            }
          }
        }
      }
    },
    "settings": {
      "methods": {
        "getCustomer": {
          "description": "Get customer settings. **Note:** This API requires an admin account to execute.",
          "flatPath": "v1/settings/customer",
          "httpMethod": "GET",
          "id": "cloudsearch.settings.getCustomer",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1/settings/customer",
          "response": {
            "$ref": "CustomerSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.settings",
            "https://www.googleapis.com/auth/cloud_search.settings.indexing"
          ]
        },
        "updateCustomer": {
          "description": "Update customer settings. **Note:** This API requires an admin account to execute.",
          "flatPath": "v1/settings/customer",
          "httpMethod": "PATCH",
          "id": "cloudsearch.settings.updateCustomer",
          "parameterOrder": [],
          "parameters": {
            "updateMask": {
              "description": "Update mask to control which fields get updated. If you specify a field in the update_mask but don't specify its value here, that field will be cleared. If the mask is not present or empty, all fields will be updated. Currently supported field paths: vpc_settings and audit_logging_settings",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            }
          },
          "path": "v1/settings/customer",
          "request": {
            "$ref": "CustomerSettings"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.settings",
            "https://www.googleapis.com/auth/cloud_search.settings.indexing"
          ]
        }
      },
      "resources": {
        "datasources": {
          "methods": {
            "create": {
              "description": "Creates a datasource. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources",
              "httpMethod": "POST",
              "id": "cloudsearch.settings.datasources.create",
              "parameterOrder": [],
              "parameters": {},
              "path": "v1/settings/datasources",
              "request": {
                "$ref": "DataSource"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "delete": {
              "description": "Deletes a datasource. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "httpMethod": "DELETE",
              "id": "cloudsearch.settings.datasources.delete",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the datasource. Format: datasources/{source_id}.",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "get": {
              "description": "Gets a datasource. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "httpMethod": "GET",
              "id": "cloudsearch.settings.datasources.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the datasource resource. Format: datasources/{source_id}.",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "response": {
                "$ref": "DataSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "list": {
              "description": "Lists datasources. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources",
              "httpMethod": "GET",
              "id": "cloudsearch.settings.datasources.list",
              "parameterOrder": [],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "Maximum number of datasources to fetch in a request. The max value is 1000. The default value is 1000.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "Starting index of the results.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/settings/datasources",
              "response": {
                "$ref": "ListDataSourceResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "patch": {
              "description": "Updates a datasource. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "httpMethod": "PATCH",
              "id": "cloudsearch.settings.datasources.patch",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which fields to update. Example field paths: `name`, `displayName`. * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`, but don't specify its value in the source, that field is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all fields are updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "request": {
                "$ref": "DataSource"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            },
            "update": {
              "description": "Updates a datasource. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/datasources/{datasourcesId}",
              "httpMethod": "PUT",
              "id": "cloudsearch.settings.datasources.update",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.",
                  "location": "path",
                  "pattern": "^datasources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "request": {
                "$ref": "UpdateDataSourceRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
              ]
            }
          }
        },
        "searchapplications": {
          "methods": {
            "create": {
              "description": "Creates a search application. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications",
              "httpMethod": "POST",
              "id": "cloudsearch.settings.searchapplications.create",
              "parameterOrder": [],
              "parameters": {},
              "path": "v1/settings/searchapplications",
              "request": {
                "$ref": "SearchApplication"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "delete": {
              "description": "Deletes a search application. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "httpMethod": "DELETE",
              "id": "cloudsearch.settings.searchapplications.delete",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the search application to be deleted. Format: applications/{application_id}.",
                  "location": "path",
                  "pattern": "^searchapplications/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "get": {
              "description": "Gets the specified search application. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "httpMethod": "GET",
              "id": "cloudsearch.settings.searchapplications.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the search application. Format: searchapplications/{application_id}.",
                  "location": "path",
                  "pattern": "^searchapplications/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "response": {
                "$ref": "SearchApplication"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "list": {
              "description": "Lists all search applications. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications",
              "httpMethod": "GET",
              "id": "cloudsearch.settings.searchapplications.list",
              "parameterOrder": [],
              "parameters": {
                "debugOptions.enableDebugging": {
                  "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The maximum number of items to return.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any. The default value is 10",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/settings/searchapplications",
              "response": {
                "$ref": "ListSearchApplicationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "patch": {
              "description": "Updates a search application. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "httpMethod": "PATCH",
              "id": "cloudsearch.settings.searchapplications.patch",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the Search Application. Format: searchapplications/{application_id}.",
                  "location": "path",
                  "pattern": "^searchapplications/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Only applies to [`settings.searchapplications.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to control which fields to update. Example field paths: `search_application.name`, `search_application.displayName`. * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`, but don't specify its value in the `search_application`, then that field is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all fields are updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "request": {
                "$ref": "SearchApplication"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "reset": {
              "description": "Resets a search application to default settings. This will return an empty response. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}:reset",
              "httpMethod": "POST",
              "id": "cloudsearch.settings.searchapplications.reset",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the search application to be reset. Format: applications/{application_id}.",
                  "location": "path",
                  "pattern": "^searchapplications/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}:reset",
              "request": {
                "$ref": "ResetSearchApplicationRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            },
            "update": {
              "description": "Updates a search application. **Note:** This API requires an admin account to execute.",
              "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
              "httpMethod": "PUT",
              "id": "cloudsearch.settings.searchapplications.update",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the Search Application. Format: searchapplications/{application_id}.",
                  "location": "path",
                  "pattern": "^searchapplications/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Only applies to [`settings.searchapplications.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.searchapplications/patch). Update mask to control which fields to update. Example field paths: `search_application.name`, `search_application.displayName`. * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`, but don't specify its value in the `search_application`, then that field is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all fields are updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/settings/{+name}",
              "request": {
                "$ref": "SearchApplication"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud_search",
                "https://www.googleapis.com/auth/cloud_search.settings",
                "https://www.googleapis.com/auth/cloud_search.settings.query"
              ]
            }
          }
        }
      }
    },
    "stats": {
      "methods": {
        "getIndex": {
          "description": "Gets indexed item statistics aggreggated across all data sources. This API only returns statistics for previous dates; it doesn't return statistics for the current day. **Note:** This API requires a standard end user account to execute.",
          "flatPath": "v1/stats/index",
          "httpMethod": "GET",
          "id": "cloudsearch.stats.getIndex",
          "parameterOrder": [],
          "parameters": {
            "fromDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "path": "v1/stats/index",
          "response": {
            "$ref": "GetCustomerIndexStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ]
        },
        "getQuery": {
          "description": "Get the query statistics for customer. **Note:** This API requires a standard end user account to execute.",
          "flatPath": "v1/stats/query",
          "httpMethod": "GET",
          "id": "cloudsearch.stats.getQuery",
          "parameterOrder": [],
          "parameters": {
            "fromDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "path": "v1/stats/query",
          "response": {
            "$ref": "GetCustomerQueryStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ]
        },
        "getSearchapplication": {
          "description": "Get search application stats for customer. **Note:** This API requires a standard end user account to execute.",
          "flatPath": "v1/stats/searchapplication",
          "httpMethod": "GET",
          "id": "cloudsearch.stats.getSearchapplication",
          "parameterOrder": [],
          "parameters": {
            "endDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "endDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "endDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "startDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "startDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "startDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "path": "v1/stats/searchapplication",
          "response": {
            "$ref": "GetCustomerSearchApplicationStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ]
        },
        "getSession": {
          "description": "Get the # of search sessions, % of successful sessions with a click query statistics for customer. **Note:** This API requires a standard end user account to execute.",
          "flatPath": "v1/stats/session",
          "httpMethod": "GET",
          "id": "cloudsearch.stats.getSession",
          "parameterOrder": [],
          "parameters": {
            "fromDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "path": "v1/stats/session",
          "response": {
            "$ref": "GetCustomerSessionStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ]
        },
        "getUser": {
          "description": "Get the users statistics for customer. **Note:** This API requires a standard end user account to execute.",
          "flatPath": "v1/stats/user",
          "httpMethod": "GET",
          "id": "cloudsearch.stats.getUser",
          "parameterOrder": [],
          "parameters": {
            "fromDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "fromDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.day": {
              "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.month": {
              "description": "Month of date. Must be from 1 to 12.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "toDate.year": {
              "description": "Year of date. Must be from 1 to 9999.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "path": "v1/stats/user",
          "response": {
            "$ref": "GetCustomerUserStatsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.stats",
            "https://www.googleapis.com/auth/cloud_search.stats.indexing"
          ]
        }
      },
      "resources": {
        "index": {
          "resources": {
            "datasources": {
              "methods": {
                "get": {
                  "description": "Gets indexed item statistics for a single data source. **Note:** This API requires a standard end user account to execute.",
                  "flatPath": "v1/stats/index/datasources/{datasourcesId}",
                  "httpMethod": "GET",
                  "id": "cloudsearch.stats.index.datasources.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "fromDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The resource id of the data source to retrieve statistics for, in the following format: \"datasources/{source_id}\"",
                      "location": "path",
                      "pattern": "^datasources/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "toDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/stats/index/{+name}",
                  "response": {
                    "$ref": "GetDataSourceIndexStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ]
                }
              }
            }
          }
        },
        "query": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "description": "Get the query statistics for search application. **Note:** This API requires a standard end user account to execute.",
                  "flatPath": "v1/stats/query/searchapplications/{searchapplicationsId}",
                  "httpMethod": "GET",
                  "id": "cloudsearch.stats.query.searchapplications.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "fromDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The resource id of the search application query stats, in the following format: searchapplications/{application_id}",
                      "location": "path",
                      "pattern": "^searchapplications/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "toDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/stats/query/{+name}",
                  "response": {
                    "$ref": "GetSearchApplicationQueryStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ]
                }
              }
            }
          }
        },
        "session": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "description": "Get the # of search sessions, % of successful sessions with a click query statistics for search application. **Note:** This API requires a standard end user account to execute.",
                  "flatPath": "v1/stats/session/searchapplications/{searchapplicationsId}",
                  "httpMethod": "GET",
                  "id": "cloudsearch.stats.session.searchapplications.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "fromDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The resource id of the search application session stats, in the following format: searchapplications/{application_id}",
                      "location": "path",
                      "pattern": "^searchapplications/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "toDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/stats/session/{+name}",
                  "response": {
                    "$ref": "GetSearchApplicationSessionStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ]
                }
              }
            }
          }
        },
        "user": {
          "resources": {
            "searchapplications": {
              "methods": {
                "get": {
                  "description": "Get the users statistics for search application. **Note:** This API requires a standard end user account to execute.",
                  "flatPath": "v1/stats/user/searchapplications/{searchapplicationsId}",
                  "httpMethod": "GET",
                  "id": "cloudsearch.stats.user.searchapplications.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "fromDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "fromDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The resource id of the search application session stats, in the following format: searchapplications/{application_id}",
                      "location": "path",
                      "pattern": "^searchapplications/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "toDate.day": {
                      "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.month": {
                      "description": "Month of date. Must be from 1 to 12.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "toDate.year": {
                      "description": "Year of date. Must be from 1 to 9999.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/stats/user/{+name}",
                  "response": {
                    "$ref": "GetSearchApplicationUserStatsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud_search",
                    "https://www.googleapis.com/auth/cloud_search.stats",
                    "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "v1": {
      "methods": {
        "initializeCustomer": {
          "description": "Enables `third party` support in Google Cloud Search. **Note:** This API requires an admin account to execute.",
          "flatPath": "v1:initializeCustomer",
          "httpMethod": "POST",
          "id": "cloudsearch.initializeCustomer",
          "parameterOrder": [],
          "parameters": {},
          "path": "v1:initializeCustomer",
          "request": {
            "$ref": "InitializeCustomerRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud_search",
            "https://www.googleapis.com/auth/cloud_search.settings",
            "https://www.googleapis.com/auth/cloud_search.settings.indexing"
          ]
        }
      }
    }
  },
  "revision": "20240710",
  "rootUrl": "https://cloudsearch.googleapis.com/",
  "schemas": {
    "Action": {
      "id": "Action",
      "properties": {
        "title": {
          "description": "[Required] Title of the action.",
          "type": "string"
        },
        "url": {
          "description": "[Optional] Url of the action.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuditLoggingSettings": {
      "description": "Represents the settings for Cloud audit logging",
      "id": "AuditLoggingSettings",
      "properties": {
        "logAdminReadActions": {
          "description": "Indicates whether audit logging is on/off for admin activity read APIs i.e. Get/List DataSources, Get/List SearchApplications etc.",
          "type": "boolean"
        },
        "logDataReadActions": {
          "description": "Indicates whether audit logging is on/off for data access read APIs i.e. ListItems, GetItem etc.",
          "type": "boolean"
        },
        "logDataWriteActions": {
          "description": "Indicates whether audit logging is on/off for data access write APIs i.e. IndexItem etc.",
          "type": "boolean"
        },
        "project": {
          "description": "The resource name of the GCP Project to store audit logs. Cloud audit logging will be enabled after project_name has been updated through CustomerService. Format: projects/{project_id}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackgroundColoredText": {
      "id": "BackgroundColoredText",
      "properties": {
        "backgroundColor": {
          "description": "[Optional] Color of the background. The text color can change depending on the selected background color, and the client does not have control over this. If missing, the background will be WHITE.",
          "enum": [
            "UNKNOWN_COLOR",
            "WHITE",
            "YELLOW",
            "ORANGE",
            "GREEN",
            "BLUE",
            "GREY"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "text": {
          "description": "[Required] The text to display.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BandWidthRangeKbps": {
      "id": "BandWidthRangeKbps",
      "properties": {
        "percentile10": {
          "format": "int32",
          "type": "integer"
        },
        "percentile50": {
          "format": "int32",
          "type": "integer"
        },
        "percentile90": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BooleanOperatorOptions": {
      "description": "Used to provide a search operator for boolean properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "BooleanOperatorOptions",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the boolean property. For example, if operatorName is *closed* and the property's name is *isClosed*, then queries like *closed:<value>* show results only where the value of the property named *isClosed* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any String properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BooleanPropertyOptions": {
      "description": "The options for boolean properties.",
      "id": "BooleanPropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "BooleanOperatorOptions",
          "description": "If set, describes how the boolean should be used as a search operator."
        }
      },
      "type": "object"
    },
    "CheckAccessResponse": {
      "id": "CheckAccessResponse",
      "properties": {
        "hasAccess": {
          "description": "Returns true if principal has access. Returns false otherwise.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ClientOptInContext": {
      "description": "Represents the user's current opt-in status on the current device related to features such as Google Now, App and Web History, Device State and Content. Each opt-in status includes an eligibility status, which depends on the type of account (Dasher, etc.), country, language, and device specifics. Next id: 38 Note: if the proto is changed, please also update the code that converts it to corresponding logs proto (they are in the same name but incompatible so manual conversion is needed). LINT.IfChange",
      "id": "ClientOptInContext",
      "properties": {
        "ambientEnrollmentStatus": {
          "description": "Enrollment status for Ambient Mode feature go/assistant-ambient-mode",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "ambientPhotoEnrollmentStatus": {
          "description": "Enrollment status for PhotoFrame feature in Ambient Mode. This is different from PhotoFrame enrollment in other features such as Dreamliner. go/assistant-ambient-mode",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "assistantOnLockscreenStatus": {
          "description": "Whether the user has opted into enabling Assistant on Lockscreen. go/iris-newperm-prd",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "audioHistoryStatus": {
          "$ref": "OptInStatus",
          "description": "Audio History. Used to improve speech recognition and hotword triggering. https://sites.google.com/a/google.com/android-speech/projects/audio-history"
        },
        "bluetoothAudioRecordingStatus": {
          "description": "Whether the user has opted into bluetooth audio recording setting.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "chromeSyncStatus": {
          "$ref": "OptInStatus",
          "description": "Set to true iff the user is signed into Chrome with the same account as GSA and has Chrome sync enabled (as reported by Chrome to GSA). This can be used to serve personalized suggestions based on the user's browsing history."
        },
        "deviceAppsStatus": {
          "$ref": "OptInStatus",
          "description": "Allows Google to upload device app information."
        },
        "deviceContactsStatus": {
          "$ref": "OptInStatus",
          "description": "Allows Google to upload contact information from device."
        },
        "deviceStateAndContentStatus": {
          "$ref": "OptInStatus",
          "description": "User allows Google to upload state (aka settings) and content (documents and media) from their device. See https://goto.google.com/device-consents"
        },
        "disabledIcingSourceApps": {
          "description": "List of Android package names the user disabled from appearing in the autocomplete suggestions on their device. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "disabledIcingSources": {
          "description": "List of Android packages and corpora that the user disabled. This replaces disabled_icing_source_apps and allows disabling a single corpus for a particular package.",
          "items": {
            "$ref": "DisabledIcingPackageCorpus"
          },
          "type": "array"
        },
        "headphonePersonalResultsStatus": {
          "description": "Whether the user has opted into headphone personal results setting. go/enable-pr-with-headset",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "hotwordEnrollmentStatus": {
          "$ref": "OptInStatus",
          "description": "Enrollment status for Hotword any-screen/always-on. This information is sent to the server-side to know that the user can run Hotword. For example, in go/gsa-voice-feature-tips using this information, the user will be shown Voice Tips that will take the user directly to the enrollment and guide them to move to the next level of Voice Features experience."
        },
        "locationHistoryStatus": {
          "$ref": "OptInStatus",
          "description": "User allows Google to upload location history from their device. See https://goto.google.com/gcore-ulr"
        },
        "lockscreenPersonalResponseStatus": {
          "description": "Whether the user has opted into showing personal response on Lockscreen.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "lockscreenSearchBluetoothStatus": {
          "description": "Whether the user has opted into lockscreen queries via bluetooth headsets setting.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "lockscreenSearchWiredHeadsetStatus": {
          "description": "Whether the user has opted into lockscreen queries via wired headsets setting.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "nowNotificationStatus": {
          "$ref": "OptInStatus",
          "description": "Google Now push notifications."
        },
        "nowStatus": {
          "$ref": "OptInStatus",
          "description": "Google Now activation."
        },
        "nowTosVersion": {
          "description": "Google Now marks each release with a TOS version, so it can ask users to opt in again if the terms change from release to release.",
          "format": "int32",
          "type": "integer"
        },
        "opaEligibility": {
          "description": "User's eligibility to use the Assistant.",
          "enum": [
            "NOT_ELIGIBLE",
            "ELIGIBLE_PREBUILT",
            "ELIGIBLE_FOR_UPGRADE",
            "ELIGIBLE_UPGRADING",
            "ELIGIBLE_UPGRADED",
            "ELIGIBLE_UPGRADED_BYPASS"
          ],
          "enumDescriptions": [
            "User is not eligible for OPA",
            "User is eligible for OPA because their device came with OPA.",
            "User is eligible to upgrade to OPA after their formerly-ineligible device received an update to AGSA >= 6.13 and received the proper config flags.",
            "User is eligible to upgrade, AND has started the upgrade, but NOT finished it. By definition, a user who is ELIGIBLE_UPGRADING was ELIGIBLE_FOR_UPGRADE at some point prior.",
            "User is eligible for OPA after completing the upgrade flow. By definition, a user who is ELIGIBLE_UPGRADED was ELIGIBLE_UPGRADING at some point prior.",
            "User is eligible for OPA and bypassed some screens in onboarding to complete the upgrade flow. By definition, a user who is ELIGIBLE_UPGRADED_BYPASS is an OPA upgraded user and was ELIGIBLE_UPGRADING at some point prior."
          ],
          "type": "string"
        },
        "opaEmailOptInStatus": {
          "description": "Has the user opted-in to receiving emails for OPA? This is set when the user opts-in during the OPA upgrade flow. It has an UNKNOWN value otherwise. Note that this bit isn't updated if the user changes their email opt-in status through settings or unsubscribing in the email.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "opaExperienceType": {
          "description": "The Opa experience type. As of Feb 2019, it is only used to check whether the user is in the Try Before You Buy experience.",
          "enum": [
            "OPA_EXPERIENCE_TYPE_UNKNOWN",
            "OPA_EXPERIENCE_INELIGIBLE",
            "OPA_EXPERIENCE_NOT_STARTED",
            "OPA_EXPERIENCE_TRY_BEFORE_YOU_BUY",
            "OPA_EXPERIENCE_COMPLETED_ONBOARDING"
          ],
          "enumDescriptions": [
            "Default value. AGSA 9.27-: all users AGSA 9.27+ 9.66-: all users but TBYB users AGSA 9.66+: not used",
            "OPA-ineligible users (AGSA 9.66+ only)",
            "The initial state of OPA-eligible users (AGSA 9.66+ only)",
            "TBYB users (AGSA 9.27+ only)",
            "OOBE-completed users (AGSA 9.66+ only)"
          ],
          "type": "string"
        },
        "opaPartialExperienceReason": {
          "description": "The reason why user enters the OPA \"signed-out mode\" partial experience (go/opa-signed-out-everywhere). Note that the value only means how the user entered the partial experience. For example, if a user enters TBYB and becomes a full-experience user, this value will remain as TBYB. To check the current experience type, you should read opa_experience_type instead.",
          "enum": [
            "OPA_PARTIAL_EXPERIENCE_REASON_UNKNOWN",
            "OPA_TRY_BEFORE_YOU_BUY",
            "OPA_UDC_OPT_OUT_FLOW"
          ],
          "enumDescriptions": [
            "Default value",
            "User enters OPA \"siged-out mode\" partial experience due to the try-before-you-buy (TBYB) experiment go/opa-tbyb-experiment-plan",
            "User enters OPA \"siged-out mode\" partial experience due to the \"UDC opt-out flow\" experiment (go/opa-udc-opt-out-ux-flow)"
          ],
          "type": "string"
        },
        "opaUdcConsentStatus": {
          "description": "Has the user opted in to OPA's UDC requirements? \"OPA UDC consent\" is a one-time opt-in to the set of required UDC opt-in bits. If the user has already granted all required UDC opt-ins, then we automatically mark them as consented. We require that users grant OPA UDC consent before using OPA for the first time. Note: The user does not revoke OPA UDC consent if they turn off one of the UDC opt-in bits from Settings; for such users, the server either offers a degraded experience, or prompts the user to re-grant missing opt-ins.)",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "opaUserEnabledStatus": {
          "description": "A user-configurable global on/off switch for the Assistant; the user can completely disable the assistant (go/opa-enabled-ss). Defaults to enabled. This setting is completely independent from the user's opa_eligibility; they can be eligible, but OPA disabled. There users are by definition not making Assistant queries, so this value is a signal of the population size.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "proactivePersonalResponseStatus": {
          "description": "Whether the user has opted into showing proactive personal suggestions on lock screen before asking. This is the proactive sub-bit for lockscreen_personal_response_status.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "screenContextOptInStatus": {
          "description": "Has the user granted permission for Google to read the contents of their screen. Note that in OPA, training hotword automatically opts the user into screen context.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "skipVoiceRecognitionStatus": {
          "description": "Whether the user has opted into skipping voice recognition. go/iris-newperm-prd",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "speakerModelStatus": {
          "description": "Whether the user has enrolled the Speaker ID model.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "thirdPartyDisclosureStatus": {
          "description": "Whether the user has acknowledged the third party disclosure.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "warmActionsAlarmsTimersEnrollmentStatus": {
          "description": "Whether the user has opted into alarms/timers context for Quick phrases.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "warmActionsCallsEnrollmentStatus": {
          "description": "Whether the user has opted into calls context for Quick phrases.",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "warmActionsEnrollmentStatus": {
          "description": "Whether the user has opted into at least one Mobile Warm Words/Quick Phrases context. go/mww-prd",
          "enum": [
            "OPA_OPT_IN_STATUS_UNKNOWN",
            "OPA_OPT_IN_STATUS_DISABLED",
            "OPA_OPT_IN_STATUS_ENABLED"
          ],
          "enumDescriptions": [
            "The user has never been prompted with this opt-in.",
            "The user has rejected the opt-in.",
            "The user has accepted the opt-in."
          ],
          "type": "string"
        },
        "webAndAppHistoryStatus": {
          "$ref": "OptInStatus",
          "description": "User allows Google to upload usage history from their device. This field can be set to true iff web_history_status is set to true. Historically, this used to be called \"Supplemental Search History\". See https://goto.google.com/device-consents"
        },
        "webHistoryStatus": {
          "$ref": "OptInStatus",
          "description": "User allows Google to log interactions with Search from their device. Historically, this used to be called \"Search History\". See https://goto.google.com/device-consents"
        }
      },
      "type": "object"
    },
    "CloudsearchEmailAddress": {
      "description": "A person's email address.",
      "id": "CloudsearchEmailAddress",
      "properties": {
        "emailAddress": {
          "description": "The email address.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates if this is the user's primary email. Only one entry can be marked as primary.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CloudsearchFilter": {
      "description": "Generic way of expessing filters. It support two ways. 1. Setting name and the value. The name has to be an operator_name defined in schema. 2. Setting the operator and filters. The sub filters will be evaluated using the operator.",
      "id": "CloudsearchFilter",
      "properties": {
        "filters": {
          "description": "Sub filters. If present, the operator must be set.",
          "items": {
            "$ref": "CloudsearchFilter"
          },
          "type": "array"
        },
        "name": {
          "description": "The operator_name that we apply to the query, e.g. price_greater_than. It can be either case, 1. operator_name in schema. We will filter the results with the property that matches the value. 2. greater_than_operator_name or less_than_operator_name in schema. We will filter the results that property is greater than or less than the given value.",
          "type": "string"
        },
        "operator": {
          "description": "The operator of the filter.",
          "enum": [
            "AND",
            "OR",
            "NOT"
          ],
          "enumDescriptions": [
            "Logical operators, can only be applied to a sub filters.",
            "",
            "NOT can only be appiled on a single sub filters."
          ],
          "type": "string"
        },
        "value": {
          "$ref": "CloudsearchValue",
          "description": "The value to check. If present, the name must be set."
        }
      },
      "type": "object"
    },
    "CloudsearchFilterSuggestion": {
      "description": "A filter suggestion.",
      "id": "CloudsearchFilterSuggestion",
      "properties": {
        "filter": {
          "$ref": "CloudsearchFilter",
          "description": "The filter suggestion. It can be 1. A value filter, e.g. type:documents 2. A composite filter before:today and after:yesterday"
        },
        "suggestionMatchInfo": {
          "$ref": "CloudsearchSnippet",
          "description": "This field contains the suggestion match information returned by the backend after escaping the HTML in the suggestion string. The areas that we might like to extract from the suggestion string returned by the backend are marked using the match_ranges field inside Snippet. For example, if the snippet string inside suggestion_match_info is: \"google search\", and the keyword \"goog\" is supposed to be bolded, the match_ranges is the list of range of indexes in the snippet string where it is bolded: [[0, 4)]."
        },
        "type": {
          "enum": [
            "NONE",
            "OPERATOR",
            "LABEL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchGroup": {
      "description": "Object to represent a group.",
      "id": "CloudsearchGroup",
      "properties": {
        "emailAddresses": {
          "description": "The group's email addresses",
          "items": {
            "$ref": "CloudsearchEmailAddress"
          },
          "type": "array"
        },
        "groupNames": {
          "description": "Group's names",
          "items": {
            "$ref": "CloudsearchName"
          },
          "type": "array"
        },
        "name": {
          "description": "The resource name of the group to provide information about. See People.get from Google People API.",
          "type": "string"
        },
        "obfuscatedId": {
          "description": "Obfuscated GAIA ID of a google group. Used by first party Cloud Search clients.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchImage": {
      "description": "Image returned with suggestion; eg: person's photo or document thumbnail.",
      "id": "CloudsearchImage",
      "properties": {
        "source": {
          "description": "Specifies the source from where the photo is fetched.",
          "enum": [
            "CONTACT_DATA_SOURCE_UNSPECIFIED",
            "CONTACT_DATA_SOURCE_PROFILE",
            "CONTACT_DATA_SOURCE_DOMAIN_PROFILE",
            "CONTACT_DATA_SOURCE_CONTACT",
            "CONTACT_DATA_SOURCE_DOMAIN_CONTACT",
            "CONTACT_DATA_SOURCE_AFFINITY"
          ],
          "enumDescriptions": [
            "Data source for the contact is not specified.",
            "This is where a Google user keeps and edits information about themself. They can decide who (what other Google users) can view which parts of it. Since it is information a user is managing about themselves, it is considered to be the most up-to-date.",
            "Google-For-Work Profile. The domain profile data source describes Google profile data that is populated/edited by the admin of a Google Workspace organization.",
            "Where a Google user keeps contact information about others, like phone numbers, emails and more. The user owns and edits this information. It could be out of date or incorrect. Users are generally only allowed to read their own contacts. Contacts are typically synced to mobile devices and used in apps like Gmail and Hangouts.",
            "Domain shared contact. An entity that is owned by a domain and represents a person, but is not a user in the domain. For more details see https://support.google.com/a/answer/9281635.",
            "Device contacts that are used in interaction ranking, but have not been uploaded to Google. These are synthesized people from interaction data."
          ],
          "type": "string"
        },
        "url": {
          "description": "The URL of the photo.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchMatchRange": {
      "description": "Matched range of a snippet [start, end). The \"start\" and \"end\" positions are 0 indexed. For example, if the snippet string is \"google search\" and the string to be matched is \"goog\", the MatchRange is [0, 4).",
      "id": "CloudsearchMatchRange",
      "properties": {
        "end": {
          "description": "1 + index of the ending position of the match in the snippet.",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "Index of the starting position of the match in the snippet.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CloudsearchName": {
      "description": "A person or group's name.",
      "id": "CloudsearchName",
      "properties": {
        "displayName": {
          "description": "The read-only display name formatted according to the locale specified by the viewer's account or the Accept-Language HTTP header.",
          "type": "string"
        },
        "source": {
          "description": "Specifies the source from where the name is fetched.",
          "enum": [
            "CONTACT_DATA_SOURCE_UNSPECIFIED",
            "CONTACT_DATA_SOURCE_PROFILE",
            "CONTACT_DATA_SOURCE_DOMAIN_PROFILE",
            "CONTACT_DATA_SOURCE_CONTACT",
            "CONTACT_DATA_SOURCE_DOMAIN_CONTACT",
            "CONTACT_DATA_SOURCE_AFFINITY"
          ],
          "enumDescriptions": [
            "Data source for the contact is not specified.",
            "This is where a Google user keeps and edits information about themself. They can decide who (what other Google users) can view which parts of it. Since it is information a user is managing about themselves, it is considered to be the most up-to-date.",
            "Google-For-Work Profile. The domain profile data source describes Google profile data that is populated/edited by the admin of a Google Workspace organization.",
            "Where a Google user keeps contact information about others, like phone numbers, emails and more. The user owns and edits this information. It could be out of date or incorrect. Users are generally only allowed to read their own contacts. Contacts are typically synced to mobile devices and used in apps like Gmail and Hangouts.",
            "Domain shared contact. An entity that is owned by a domain and represents a person, but is not a user in the domain. For more details see https://support.google.com/a/answer/9281635.",
            "Device contacts that are used in interaction ranking, but have not been uploaded to Google. These are synthesized people from interaction data."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchPeopleSuggestion": {
      "description": "A person suggestion.",
      "id": "CloudsearchPeopleSuggestion",
      "properties": {
        "emailNameMatchInfo": {
          "$ref": "CloudsearchSnippet",
          "description": "This field contains the suggestion information returned by the backend after escaping the HTML in the suggestion string. The areas that we might like to extract from the suggestion string returned by the backend are marked using the match_ranges field inside Snippet. For example, if the snippet string inside email_name_match_info is: \"John Doe - johndoe@google.com\", and the keyword \"doe\" should be matched, the match_ranges is: [[5, 8), [15, 18)]."
        },
        "googleGroup": {
          "$ref": "CloudsearchGroup"
        },
        "person": {
          "$ref": "CloudsearchPerson"
        }
      },
      "type": "object"
    },
    "CloudsearchPerson": {
      "description": "Object to represent a person.",
      "id": "CloudsearchPerson",
      "properties": {
        "emailAddresses": {
          "description": "The person's email addresses",
          "items": {
            "$ref": "CloudsearchEmailAddress"
          },
          "type": "array"
        },
        "name": {
          "description": "The resource name of the person to provide information about. See People.get from Google People API.",
          "type": "string"
        },
        "obfuscatedId": {
          "description": "Obfuscated GAIA ID of a person. Used by first party Cloud Search client, to build a hangout link.",
          "type": "string"
        },
        "personNames": {
          "description": "The person's names",
          "items": {
            "$ref": "CloudsearchName"
          },
          "type": "array"
        },
        "photos": {
          "description": "A person's read-only photo. A picture shown next to the person's name to help others recognize the person in search results.",
          "items": {
            "$ref": "CloudsearchImage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CloudsearchQuerySuggestion": {
      "id": "CloudsearchQuerySuggestion",
      "properties": {
        "suggestionMatchInfo": {
          "$ref": "CloudsearchSnippet",
          "description": "This field contains the suggestion match information returned by the backend after escaping the HTML in the suggestion string. The areas that we might like to extract from the suggestion string returned by the backend are marked using the match_ranges field inside Snippet. For example, if the snippet string inside suggestion_match_info is: \"google search\", and the keyword \"goog\" is supposed to be bolded, the match_ranges is the list of range of indexes in the snippet string where it is bolded: [[0, 4)]."
        }
      },
      "type": "object"
    },
    "CloudsearchSnippet": {
      "description": "Snippet of the suggestion, which summarizes the content of the resulting page.",
      "id": "CloudsearchSnippet",
      "properties": {
        "matchRanges": {
          "description": "The matched ranges in the snippet.",
          "items": {
            "$ref": "CloudsearchMatchRange"
          },
          "type": "array"
        },
        "snippet": {
          "description": "The snippet of the document.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchSource": {
      "description": "Define a source to query suggest/search APIs. Source is set in the STMixer request params.",
      "id": "CloudsearchSource",
      "properties": {
        "anyThirdPartySource": {
          "description": "If set to true, all 3p sources will be considered",
          "type": "boolean"
        },
        "name": {
          "description": "Source name of contents that indexed by Index API",
          "type": "string"
        },
        "predefinedSource": {
          "description": "Predefined source for Google Apps.",
          "enum": [
            "GENERIC",
            "GROUPS",
            "QUERY_HISTORY",
            "PEOPLE",
            "GOOGLE_DRIVE",
            "GOOGLE_GMAIL",
            "GOOGLE_SITES",
            "GOOGLE_GROUPS",
            "GOOGLE_CALENDAR",
            "GOOGLE_CHAT",
            "GOOGLE_KEEP",
            "ENGDOC",
            "GOOGLE_ATARI",
            "GOOGLE_JOTSPOT",
            "GOOWIKI",
            "MOMA_GLOSSARY",
            "MOMA_UAR",
            "ENGDOC_RESTRICTED",
            "GKMS",
            "X20",
            "YAQS",
            "ENTERPRISE_ASSIST",
            "FILTER"
          ],
          "enumDescriptions": [
            "Default source.",
            "",
            "People API source. Used for suggest API only. Ignored in search API.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestResponseDebugInfo": {
      "id": "CloudsearchSuggestResponseDebugInfo",
      "properties": {
        "completeServerInfo": {
          "$ref": "CloudsearchSuggestResponseDebugInfoCompleteServerInfo"
        },
        "starlightInfo": {
          "$ref": "CloudsearchSuggestResponseDebugInfoStarlightInfo"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestResponseDebugInfoCompleteServerInfo": {
      "id": "CloudsearchSuggestResponseDebugInfoCompleteServerInfo",
      "properties": {
        "completeserverHostname": {
          "type": "string"
        },
        "psuggestDoNotCache": {
          "type": "boolean"
        },
        "request": {
          "$ref": "SuggestSuggestRequest"
        },
        "results": {
          "items": {
            "$ref": "CloudsearchSuggestResponseDebugInfoCompleteServerInfoSuggestResult"
          },
          "type": "array"
        },
        "starlightHostname": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestResponseDebugInfoCompleteServerInfoSuggestResult": {
      "id": "CloudsearchSuggestResponseDebugInfoCompleteServerInfoSuggestResult",
      "properties": {
        "suggestedQuery": {
          "type": "string"
        },
        "suggestionType": {
          "enum": [
            "UNKNOWN",
            "GMAIL_SUBJECT",
            "CONTACT",
            "PERSON",
            "GMAIL_LABEL",
            "DRIVE_TITLE",
            "GMAIL_OPERATOR",
            "QUERY_PREFIX",
            "GMAIL_QUERY",
            "WEB_QUERY",
            "YOUTUBE_QUERY",
            "MAPS_QUERY",
            "MAPS_FEATURE",
            "MAPS_PLACE_LIST",
            "PHOTO_PERSON",
            "PHOTO_PLACE",
            "PHOTO_THING",
            "PHOTO_ALBUM",
            "PHOTO_DATE",
            "PHOTO_APP_PAGE",
            "PHOTO_OTHER",
            "PHOTO_MEDIA_TYPE",
            "GENERIC_QUERY",
            "PHOTO_CAMERA",
            "CHROME_HISTORY",
            "DEVICE_CONTACT",
            "CONTACT_GROUP",
            "IMAGE_QUERY",
            "LAST_URL",
            "SERP_CLICK",
            "PLAY_STORE_QUERY",
            "PODCASTS_QUERY",
            "CHAT_QUERY",
            "DRIVE_QUERY",
            "CALENDAR_QUERY",
            "TOPAZ_QUERY",
            "SHOPPING_QUERY",
            "WEB_MAPS_FEATURE",
            "LENS_QUERY",
            "IGA_HISTORY",
            "EXPERIMENTAL_QUERY"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "The original query prefix.",
            "",
            "Personalized web query.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Contact label.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestResponseDebugInfoStarlightInfo": {
      "id": "CloudsearchSuggestResponseDebugInfoStarlightInfo",
      "properties": {
        "compareRankingsScore": {
          "description": "Position-weighted measurement of the difference between the two result sets. See go/search-experiments-glossary - CR Score.",
          "format": "double",
          "type": "number"
        },
        "starlightHostname": {
          "type": "string"
        },
        "suggestResults": {
          "description": "List of suggestion results returned from Starlight for dark launch.",
          "items": {
            "$ref": "CloudsearchSuggestResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestResult": {
      "description": "One suggestion result. next_id: 16",
      "id": "CloudsearchSuggestResult",
      "properties": {
        "encryptedResultDebugId": {
          "type": "string"
        },
        "extension": {
          "$ref": "MessageSet"
        },
        "filterSuggestion": {
          "$ref": "CloudsearchFilterSuggestion"
        },
        "matchedTextInQueryInfo": {
          "description": "Indicates the matches between the suggestion and the user's query. For example, if the user types \"isac xx\" and the returned suggestion is \"Isaac Elias\" then the match is on the token \"isaac\" after spell correction. Note that \"isac\" in user's query matched with \"isaac\" in the suggestion because of spell correction. Also note that spell correction may or may not happen. In this example, matched_text_in_query_info.size() is 1, matched_text_in_query_info(0).snippet() is \"isaac\", matched_text_in_query_info(0).match_ranges().start() is 0 and matched_text_in_query_info(0).match_ranges().end() is 5.",
          "items": {
            "$ref": "CloudsearchSnippet"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the suggestion. This is unique identifier of the suggestion.",
          "type": "string"
        },
        "peopleSuggestion": {
          "$ref": "CloudsearchPeopleSuggestion"
        },
        "querySuggestion": {
          "$ref": "CloudsearchQuerySuggestion"
        },
        "score": {
          "description": "Final score returned by superroot for this suggestion.",
          "format": "double",
          "type": "number"
        },
        "source": {
          "$ref": "CloudsearchSource"
        },
        "subScores": {
          "$ref": "CloudsearchSuggestionScores"
        },
        "subType": {
          "enum": [
            "NONE",
            "CONTENT_TEXT_SUGGESTION",
            "OPERATOR_NAME_SUGGESTION",
            "OPERATOR_VALUE_SUGGESTION",
            "NL_ENTITY_SUGGESTION",
            "PEOPLE_SUGGESTION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "suggestedQuery": {
          "description": "The suggested query that will be used for search, when the user clicks on the suggestion",
          "type": "string"
        },
        "suggestionOrigin": {
          "enum": [
            "DEFAULT",
            "HISTORY",
            "SEARCH_OPERATOR"
          ],
          "enumDescriptions": [
            "Suggestion with default type.",
            "Personal query history.",
            "Suggestion is from search operator index."
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "UNKNOWN",
            "QUERY_HISTORY",
            "SOURCE_CONTENT",
            "PEOPLE",
            "FILTER",
            "GROUP",
            "USER_QUERY"
          ],
          "enumDescriptions": [
            "Type is not known.",
            "Suggestion from user search history.",
            "Suggestion from content/source.",
            "Suggestion is a person.",
            "Suggestion is a filter.",
            "Suggestion is a group.",
            "User's own query returned as a suggestion"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestionScores": {
      "description": "Signals that contribute to the final score.",
      "id": "CloudsearchSuggestionScores",
      "properties": {
        "completeServerInternalScores": {
          "$ref": "CloudsearchSuggestionScoresCompleteServerInternalScores"
        },
        "completeserverInternalScores": {
          "$ref": "CloudsearchSuggestionScoresInternalScores"
        },
        "personalizedBoost": {
          "description": "How frequent is the suggestion within this user.",
          "format": "float",
          "type": "number"
        },
        "popularity": {
          "description": "How popular is the suggestion among all users.",
          "format": "float",
          "type": "number"
        },
        "sectionBoost": {
          "description": "Amount by which a section is boosted based on heuristics.",
          "format": "float",
          "type": "number"
        },
        "sourceScaleFactor": {
          "description": "Scale factor of the datasource its coming from.",
          "format": "float",
          "type": "number"
        },
        "starlightInternalScores": {
          "$ref": "CloudsearchSuggestionScoresInternalScores"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestionScoresCompleteServerInternalScores": {
      "id": "CloudsearchSuggestionScoresCompleteServerInternalScores",
      "properties": {
        "contactsGroup": {
          "description": "Contacts group score (i.e. if the string is a name of a group).",
          "format": "float",
          "type": "number"
        },
        "emailAutocompleteScore": {
          "description": "Score for email autocomplete. Corresponds to DAS affinity PERSONAL_SUGGEST_EMAIL_AUTOCOMPLETE_SCORE.",
          "format": "float",
          "type": "number"
        },
        "focusOutboundEmailCount": {
          "description": "Outbound email count as read from FBS.",
          "format": "float",
          "type": "number"
        },
        "gmailHistory": {
          "description": "Frequency based score of a query from the user's gmail search history",
          "format": "float",
          "type": "number"
        },
        "gmailHistoryMediumTermQueryTime": {
          "format": "float",
          "type": "number"
        },
        "gmailHistoryShortTermQueryTime": {
          "description": "Both the gmail query_time scores below are based on the time of the last query event. Basically the score is (query_time - (model_time - PERIOD)) / PERIOD Where PERIOD is 1 & 14 days for short and medium term.",
          "format": "float",
          "type": "number"
        },
        "gmailLabel": {
          "description": "Gmail label score, as received from Gmail through PbUI.",
          "format": "float",
          "type": "number"
        },
        "gmailOperator": {
          "description": "Score for gmail operators.",
          "format": "float",
          "type": "number"
        },
        "gmailText": {
          "description": "Score for text entities extracted from gmail subjects.",
          "format": "float",
          "type": "number"
        },
        "matchScore": {
          "description": "The score of the match. The score is in the range [0, num_matching_tokens]. This means that a query with many tokens can have matches with higher score.",
          "format": "double",
          "type": "number"
        },
        "score": {
          "description": "Final score from CompleteServer. This either corresponds to Starlight score or Muppet score (for Generic Suggest suggestions) based on the CompleteServer backend. This is a combination of query dependent and independent components. The scores related to suggestion types like email_autocomplete_score & gmail_text are query independent whereas the match_score is query dependent.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CloudsearchSuggestionScoresInternalScores": {
      "description": "Internal scores from CompleteServer/Starlight. NOTE: This proto message is also being used for storing scores from calling Starlight directly instead from CompleteServer.",
      "id": "CloudsearchSuggestionScoresInternalScores",
      "properties": {
        "contactsGroup": {
          "description": "Contacts group score (i.e. if the string is a name of a group).",
          "format": "float",
          "type": "number"
        },
        "emailAutocompleteScore": {
          "description": "Score for email autocomplete. Corresponds to DAS affinity PERSONAL_SUGGEST_EMAIL_AUTOCOMPLETE_SCORE.",
          "format": "float",
          "type": "number"
        },
        "focusOutboundEmailCount": {
          "description": "Outbound email count as read from FBS.",
          "format": "float",
          "type": "number"
        },
        "gmailHistory": {
          "description": "Frequency based score of a query from the user's gmail search history",
          "format": "float",
          "type": "number"
        },
        "gmailHistoryMediumTermQueryTime": {
          "format": "float",
          "type": "number"
        },
        "gmailHistoryShortTermQueryTime": {
          "description": "Both the gmail query_time scores below are based on the time of the last query event. Basically the score is (query_time - (model_time - PERIOD)) / PERIOD Where PERIOD is 1 & 14 days for short and medium term.",
          "format": "float",
          "type": "number"
        },
        "gmailLabel": {
          "description": "Gmail label score, as received from Gmail through PbUI.",
          "format": "float",
          "type": "number"
        },
        "gmailOperator": {
          "description": "Score for gmail operators.",
          "format": "float",
          "type": "number"
        },
        "gmailText": {
          "description": "Score for text entities extracted from gmail subjects.",
          "format": "float",
          "type": "number"
        },
        "matchScore": {
          "description": "The score of the match. The score is in the range [0, num_matching_tokens]. This means that a query with many tokens can have matches with higher score.",
          "format": "double",
          "type": "number"
        },
        "score": {
          "description": "Final score from CompleteServe / Starlight. This either corresponds to Starlight score or Muppet score (for Generic Suggest suggestions) based on the CompleteServer backend. This is a combination of query dependent and independent components. The scores related to suggestion types like email_autocomplete_score & gmail_text are query independent whereas the match_score is query dependent.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CloudsearchValue": {
      "description": "Definition of a single value with generic type. LINT.IfChange",
      "id": "CloudsearchValue",
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "dateValue": {
          "$ref": "Date"
        },
        "doubleValue": {
          "format": "double",
          "type": "number"
        },
        "integerValue": {
          "format": "int64",
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompositeFilter": {
      "id": "CompositeFilter",
      "properties": {
        "logicOperator": {
          "description": "The logic operator of the sub filter.",
          "enum": [
            "AND",
            "OR",
            "NOT"
          ],
          "enumDescriptions": [
            "Logical operators, which can only be applied to sub filters.",
            "",
            "NOT can only be applied on a single sub filter."
          ],
          "type": "string"
        },
        "subFilters": {
          "description": "Sub filters.",
          "items": {
            "$ref": "Filter"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Content": {
      "id": "Content",
      "properties": {
        "actions": {
          "description": "[Optional] Actions for this card.",
          "items": {
            "$ref": "Action"
          },
          "type": "array"
        },
        "description": {
          "$ref": "SafeHtmlProto",
          "description": "[Optional] Description of the card."
        },
        "subtitle": {
          "$ref": "BackgroundColoredText",
          "description": "[Optional] Subtitle of the card."
        },
        "title": {
          "$ref": "BackgroundColoredText",
          "description": "[Optional] Title of the card."
        }
      },
      "type": "object"
    },
    "Context": {
      "id": "Context",
      "properties": {
        "app": {
          "description": "[Optional] App where the card should be shown. If missing, the card will be shown in TOPAZ.",
          "items": {
            "enum": [
              "UNKNOWN_APP",
              "TOPAZ",
              "MOMA"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "type": "array"
        },
        "dayOfWeek": {
          "description": "[Optional] Day of week when the card should be shown, where 0 is Monday.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "endDateSec": {
          "description": "[Optional] Date (in seconds since epoch) when the card should stop being shown. If missing, end_date_sec will be set to Jan 1st, 2100.",
          "format": "int64",
          "type": "string"
        },
        "endDayOffsetSec": {
          "description": "[Optional] End time in seconds, within a day, when the card should stop being shown if it's within [start_date_sec, end_date_sec]. If missing, this is set to 86400 (24 hours x 3600 sec/hour), i.e., midnight next day.",
          "format": "int64",
          "type": "string"
        },
        "locale": {
          "description": "[Optional] The locales for which the card should be triggered (e.g., en_US and en_CA). If missing, the card is going to show to clients regardless of their locale.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "location": {
          "description": "[Optional] Text-free locations where the card should be shown. This is expected to match the user's location in focus. If no location is specified, the card will be shown for any location.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "query": {
          "description": "[Required only for Answer and RHS cards - will be ignored for Homepage] cards. It's the exact case-insensitive queries that will trigger the Answer or RHS card.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "startDateSec": {
          "description": "[Optional] Date (in seconds since epoch) when the card should start being shown. If missing, start_date_sec will be Jan 1st, 1970 UTC.",
          "format": "int64",
          "type": "string"
        },
        "startDayOffsetSec": {
          "description": "[Optional] Start time in seconds, within a day, when the card should be shown if it's within [start_date_sec, end_date_sec]. If 0, the card will be shown from 12:00am on.",
          "format": "int64",
          "type": "string"
        },
        "surface": {
          "description": "[Optional] Surface where the card should be shown in. If missing, the card will be shown in any surface.",
          "items": {
            "enum": [
              "UNKNOWN_SURFACE",
              "DESKTOP",
              "ANDROID",
              "IOS",
              "MOBILE",
              "ANY"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "Any mobile device.",
              ""
            ],
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "[Required] Type of the card (homepage, Answer or RHS).",
          "items": {
            "enum": [
              "UNKNOWN_CARD_TYPE",
              "HOMEPAGE_CARD",
              "ANSWER_CARD",
              "RHS_CARD"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContextAttribute": {
      "description": "A named attribute associated with an item which can be used for influencing the ranking of the item based on the context in the request.",
      "id": "ContextAttribute",
      "properties": {
        "name": {
          "description": "The name of the attribute. It should not be empty. The maximum length is 32 characters. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The name will be normalized (lower-cased) before being matched.",
          "type": "string"
        },
        "values": {
          "description": "Text values of the attribute. The maximum number of elements is 10. The maximum length of an element in the array is 32 characters. The value will be normalized (lower-cased) before being matched.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomerIndexStats": {
      "description": "Aggregation of items by status code as of the specified date.",
      "id": "CustomerIndexStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which statistics were calculated."
        },
        "itemCountByStatus": {
          "description": "Number of items aggregrated by status code.",
          "items": {
            "$ref": "ItemCountByStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomerQueryStats": {
      "id": "CustomerQueryStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which query stats were calculated. Stats calculated on the next day close to midnight are returned."
        },
        "queryCountByStatus": {
          "items": {
            "$ref": "QueryCountByStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomerSearchApplicationStats": {
      "description": "Search application stats for a customer for the given date.",
      "id": "CustomerSearchApplicationStats",
      "properties": {
        "count": {
          "description": "The count of search applications for the date.",
          "format": "int64",
          "type": "string"
        },
        "date": {
          "$ref": "Date",
          "description": "The date for which search application stats were calculated."
        }
      },
      "type": "object"
    },
    "CustomerSessionStats": {
      "id": "CustomerSessionStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which session stats were calculated. Stats are calculated on the following day, close to midnight PST, and then returned."
        },
        "searchSessionsCount": {
          "description": "The count of search sessions on the day",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerSettings": {
      "description": "Represents settings at a customer level.",
      "id": "CustomerSettings",
      "properties": {
        "auditLoggingSettings": {
          "$ref": "AuditLoggingSettings",
          "description": "Audit Logging settings for the customer. If update_mask is empty then this field will be updated based on UpdateCustomerSettings request."
        },
        "vpcSettings": {
          "$ref": "VPCSettings",
          "description": "VPC SC settings for the customer. If update_mask is empty then this field will be updated based on UpdateCustomerSettings request."
        }
      },
      "type": "object"
    },
    "CustomerUserStats": {
      "id": "CustomerUserStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which session stats were calculated. Stats calculated on the next day close to midnight are returned."
        },
        "oneDayActiveUsersCount": {
          "description": "The count of unique active users in the past one day",
          "format": "int64",
          "type": "string"
        },
        "sevenDaysActiveUsersCount": {
          "description": "The count of unique active users in the past seven days",
          "format": "int64",
          "type": "string"
        },
        "thirtyDaysActiveUsersCount": {
          "description": "The count of unique active users in the past thirty days",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataSource": {
      "description": "Datasource is a logical namespace for items to be indexed. All items must belong to a datasource. This is the prerequisite before items can be indexed into Cloud Search. ",
      "id": "DataSource",
      "properties": {
        "disableModifications": {
          "description": "If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.",
          "type": "boolean"
        },
        "disableServing": {
          "description": "Disable serving any search or assist results.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Required. Display name of the datasource The maximum length is 300 characters.",
          "type": "string"
        },
        "indexingServiceAccounts": {
          "description": "List of service accounts that have indexing access.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "itemsVisibility": {
          "description": "This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.",
          "items": {
            "$ref": "GSuitePrincipal"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.",
          "type": "string"
        },
        "operationIds": {
          "description": "IDs of the Long Running Operations (LROs) currently running for this schema.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "returnThumbnailUrls": {
          "description": "Can a user request to get thumbnail URI for Items indexed in this data source.",
          "type": "boolean"
        },
        "shortName": {
          "description": "A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataSourceIndexStats": {
      "description": "Aggregation of items by status code as of the specified date.",
      "id": "DataSourceIndexStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which index stats were calculated. If the date of request is not the current date then stats calculated on the next day are returned. Stats are calculated close to mid night in this case. If date of request is current date, then real time stats are returned."
        },
        "itemCountByStatus": {
          "description": "Number of items aggregrated by status code.",
          "items": {
            "$ref": "ItemCountByStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DataSourceRestriction": {
      "description": "Restriction on Datasource.",
      "id": "DataSourceRestriction",
      "properties": {
        "filterOptions": {
          "description": "Filter options restricting the results. If multiple filters are present, they are grouped by object type before joining. Filters with the same object type are joined conjunctively, then the resulting expressions are joined disjunctively. The maximum number of elements is 20. NOTE: Suggest API supports only few filters at the moment: \"objecttype\", \"type\" and \"mimetype\". For now, schema specific filters cannot be used to filter suggestions.",
          "items": {
            "$ref": "FilterOptions"
          },
          "type": "array"
        },
        "source": {
          "$ref": "Source",
          "description": "The source of restriction."
        }
      },
      "type": "object"
    },
    "Date": {
      "description": "Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The date must be a valid calendar date between the year 1 and 9999.",
      "id": "Date",
      "properties": {
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Month of date. Must be from 1 to 12.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "description": "Year of date. Must be from 1 to 9999.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DateOperatorOptions": {
      "description": "Optional. Provides a search operator for date properties. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "DateOperatorOptions",
      "properties": {
        "greaterThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the date property using the greater-than operator. For example, if greaterThanOperatorName is *closedafter* and the property's name is *closeDate*, then queries like *closedafter:<value>* show results only where the value of the property named *closeDate* is later than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the date property using the less-than operator. For example, if lessThanOperatorName is *closedbefore* and the property's name is *closeDate*, then queries like *closedbefore:<value>* show results only where the value of the property named *closeDate* is earlier than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "operatorName": {
          "description": "Indicates the actual string required in the query in order to isolate the date property. For example, suppose an issue tracking schema object has a property named *closeDate* that specifies an operator with an operatorName of *closedon*. For searches on that data, queries like *closedon:<value>* show results only where the value of the *closeDate* property matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any String properties or text within the content field for the indexed datasource. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatePropertyOptions": {
      "description": "The options for date properties.",
      "id": "DatePropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "DateOperatorOptions",
          "description": "If set, describes how the date should be used as a search operator."
        }
      },
      "type": "object"
    },
    "DateValues": {
      "description": "List of date values.",
      "id": "DateValues",
      "properties": {
        "values": {
          "items": {
            "$ref": "Date"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DebugOptions": {
      "description": "Shared request debug options for all cloudsearch RPC methods.",
      "id": "DebugOptions",
      "properties": {
        "enableDebugging": {
          "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DebugResponse": {
      "description": "Debug Search Response.",
      "id": "DebugResponse",
      "properties": {
        "gsrRequest": {
          "description": "Serialized string of GenericSearchRequest.",
          "format": "byte",
          "type": "string"
        },
        "gsrResponse": {
          "description": "Serialized string of GenericSearchResponse.",
          "format": "byte",
          "type": "string"
        },
        "searchResponse": {
          "$ref": "SearchResponse",
          "description": "Search response."
        }
      },
      "type": "object"
    },
    "DefaultBlockingDataProto": {
      "description": "Next ID: 3",
      "id": "DefaultBlockingDataProto",
      "properties": {
        "types": {
          "items": {
            "enum": [
              "BLOCKING_TYPE_UNSPECIFIED",
              "BLOCKING_TYPE_DEFAULT_BLOCKED",
              "BLOCKING_TYPE_DEFAULT_BLOCKED_NON_TYPE_COUNTRY"
            ],
            "enumDescriptions": [
              "The default value. Not actually used by IPGeo/Oolong.",
              "Under go/embargo.",
              "A feature that is not a TYPE_COUNTRY and is under go/embargo. Discouraged."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "Version ID of the current list of blocked countries and sanctions areas, based on which the types field was computed.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DeleteQueueItemsRequest": {
      "id": "DeleteQueueItemsRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "queue": {
          "description": "The name of a queue to delete items from.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DisabledIcingPackageCorpus": {
      "id": "DisabledIcingPackageCorpus",
      "properties": {
        "corpusName": {
          "description": "The name of an individual corpus within the given app. When unset, this means that all corpora for the given package are disabled.",
          "type": "string"
        },
        "packageName": {
          "description": "The package name of an app that the user disabled. This is required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DisplayedProperty": {
      "description": "A reference to a top-level property within the object that should be displayed in search results. The values of the chosen properties is displayed in the search results along with the display label for that property if one is specified. If a display label is not specified, only the values is shown.",
      "id": "DisplayedProperty",
      "properties": {
        "propertyName": {
          "description": "The name of the top-level property as defined in a property definition for the object. If the name is not a defined property in the schema, an error is given when attempting to update the schema.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DoubleOperatorOptions": {
      "description": "Used to provide a search operator for double properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "DoubleOperatorOptions",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to use the double property in sorting or as a facet. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DoublePropertyOptions": {
      "description": "The options for double properties.",
      "id": "DoublePropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "DoubleOperatorOptions",
          "description": "If set, describes how the double should be used as a search operator."
        }
      },
      "type": "object"
    },
    "DoubleValues": {
      "description": "List of double values.",
      "id": "DoubleValues",
      "properties": {
        "values": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DriveFollowUpRestrict": {
      "description": "Drive follow-up search restricts (e.g. \"followup:suggestions\").",
      "id": "DriveFollowUpRestrict",
      "properties": {
        "type": {
          "enum": [
            "UNSPECIFIED",
            "FOLLOWUP_SUGGESTIONS",
            "FOLLOWUP_ACTION_ITEMS"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DriveLocationRestrict": {
      "description": "Drive location search restricts (e.g. \"is:starred\").",
      "id": "DriveLocationRestrict",
      "properties": {
        "type": {
          "enum": [
            "UNSPECIFIED",
            "TRASHED",
            "STARRED"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DriveMimeTypeRestrict": {
      "description": "Drive mime-type search restricts (e.g. \"type:pdf\").",
      "id": "DriveMimeTypeRestrict",
      "properties": {
        "type": {
          "enum": [
            "UNSPECIFIED",
            "PDF",
            "DOCUMENT",
            "PRESENTATION",
            "SPREADSHEET",
            "FORM",
            "DRAWING",
            "SCRIPT",
            "MAP",
            "IMAGE",
            "AUDIO",
            "VIDEO",
            "FOLDER",
            "ARCHIVE",
            "SITE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DriveTimeSpanRestrict": {
      "description": "The time span search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").",
      "id": "DriveTimeSpanRestrict",
      "properties": {
        "type": {
          "enum": [
            "UNSPECIFIED",
            "TODAY",
            "YESTERDAY",
            "LAST_7_DAYS",
            "LAST_30_DAYS",
            "LAST_90_DAYS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "Not Enabled",
            "Not Enabled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmailAddress": {
      "description": "A person's email address.",
      "id": "EmailAddress",
      "properties": {
        "customType": {
          "description": "If the value of type is custom, this property contains the custom type string.",
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address.",
          "type": "string"
        },
        "emailUrl": {
          "description": "The URL to send email.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates if this is the user's primary email. Only one entry can be marked as primary.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of the email account. Acceptable values are: \"custom\", \"home\", \"other\", \"work\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazFrontendTeamsLink": {
      "id": "EnterpriseTopazFrontendTeamsLink",
      "properties": {
        "type": {
          "description": "The identifying link type",
          "type": "string"
        },
        "url": {
          "$ref": "SafeUrlProto"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazFrontendTeamsPersonCorePhoneNumber": {
      "id": "EnterpriseTopazFrontendTeamsPersonCorePhoneNumber",
      "properties": {
        "phoneNumber": {
          "description": "Phone number in no particular format (as comes from the Focus profile).",
          "type": "string"
        },
        "phoneUrl": {
          "$ref": "SafeUrlProto",
          "description": "Phone number URL"
        },
        "type": {
          "enum": [
            "UNKNOWN",
            "MOBILE",
            "OFFICE",
            "OTHER"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAgendaEntry": {
      "description": "An AgendaEntry, e.g., a Calendar Event.",
      "id": "EnterpriseTopazSidekickAgendaEntry",
      "properties": {
        "agendaItemUrl": {
          "description": "URL of the agenda item.",
          "type": "string"
        },
        "chronology": {
          "description": "The chronology from the present.",
          "enum": [
            "STALE",
            "ALL_DAY",
            "PAST",
            "RECENTLY_PAST",
            "PRESENT",
            "NEAR_FUTURE",
            "FUTURE"
          ],
          "enumDescriptions": [
            "Stale.",
            "All day.",
            "Past.",
            "Recently past.",
            "Present.",
            "Near future.",
            "Future."
          ],
          "type": "string"
        },
        "creator": {
          "$ref": "EnterpriseTopazSidekickPerson",
          "description": "Person who created the event."
        },
        "currentUserAttendingStatus": {
          "description": "Attendance status for the current user making the request. This is a convenience data member in order to avoid figuring out the same by iterating the invitee list above on the caller side.",
          "enum": [
            "AWAITING",
            "YES",
            "NO",
            "MAYBE"
          ],
          "enumDescriptions": [
            "Awaiting for the user to set the status.",
            "Attending.",
            "Not attending.",
            "Tentatively attending."
          ],
          "type": "string"
        },
        "description": {
          "description": "Description of the agenda item (i.e., typically, summary in calendar event).",
          "type": "string"
        },
        "document": {
          "description": "Items related to the current AgendaEntry. E.g., related drive/mail/groups documents.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonDocument"
          },
          "type": "array"
        },
        "endDate": {
          "description": "End date \"Friday, August 26\" in the user's timezone.",
          "type": "string"
        },
        "endTime": {
          "description": "End time (HH:mm) in the user's timezone.",
          "type": "string"
        },
        "endTimeMs": {
          "description": "End time in milliseconds",
          "format": "int64",
          "type": "string"
        },
        "eventId": {
          "description": "Event id provided by Calendar API.",
          "type": "string"
        },
        "guestsCanInviteOthers": {
          "description": "Whether the guests can invite other guests.",
          "type": "boolean"
        },
        "guestsCanModify": {
          "description": "Whether the guests can modify the event.",
          "type": "boolean"
        },
        "guestsCanSeeGuests": {
          "description": "Whether the guests of the event can be seen. If false, the user is going to be reported as the only attendee to the meeting, even though there may be more attendees.",
          "type": "boolean"
        },
        "hangoutId": {
          "description": "Hangout meeting identifier.",
          "type": "string"
        },
        "hangoutUrl": {
          "description": "Absolute URL for the Hangout meeting.",
          "type": "string"
        },
        "invitee": {
          "description": "People attending the meeting.",
          "items": {
            "$ref": "EnterpriseTopazSidekickPerson"
          },
          "type": "array"
        },
        "isAllDay": {
          "description": "Whether the entry lasts all day.",
          "type": "boolean"
        },
        "lastModificationTimeMs": {
          "description": "Last time the event was modified.",
          "format": "int64",
          "type": "string"
        },
        "location": {
          "description": "Agenda item location.",
          "type": "string"
        },
        "notifyToUser": {
          "description": "Whether this should be notified to the user.",
          "type": "boolean"
        },
        "otherAttendeesExcluded": {
          "description": "Whether guest list is not returned because number of attendees is too large.",
          "type": "boolean"
        },
        "requesterIsOwner": {
          "description": "Whether the requester is the owner of the agenda entry.",
          "type": "boolean"
        },
        "showFullEventDetailsToUse": {
          "description": "Whether the details of this entry should be displayed to the user.",
          "type": "boolean"
        },
        "startDate": {
          "description": "Start date \"Friday, August 26\" in the user's timezone.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time (HH:mm) in the user's timezone.",
          "type": "string"
        },
        "startTimeMs": {
          "description": "Start time in milliseconds.",
          "format": "int64",
          "type": "string"
        },
        "timeZone": {
          "description": "User's calendar timezone;",
          "type": "string"
        },
        "title": {
          "description": "Title of the agenda item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAgendaGroupCardProto": {
      "id": "EnterpriseTopazSidekickAgendaGroupCardProto",
      "properties": {
        "agendaItem": {
          "items": {
            "$ref": "EnterpriseTopazSidekickAgendaItem"
          },
          "type": "array"
        },
        "context": {
          "$ref": "EnterpriseTopazSidekickAgendaGroupCardProtoContext"
        },
        "currentAgendaItem": {
          "$ref": "EnterpriseTopazSidekickAgendaItem"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAgendaGroupCardProtoContext": {
      "description": "The context that resulted in the generation of the card.",
      "id": "EnterpriseTopazSidekickAgendaGroupCardProtoContext",
      "properties": {
        "context": {
          "description": "User friendly free text that describes the context of the card (e.g. \"Next meeting with Bob\"). This is largely only applicable when the card is generated from a query.",
          "type": "string"
        },
        "date": {
          "description": "Localized free text that describes the dates represented by the card. Currently, the card will only represent a single day.",
          "type": "string"
        },
        "eventsRestrict": {
          "description": "Represents restrictions applied to the events requested in the user's query.",
          "enum": [
            "NONE",
            "NEXT_MEETING"
          ],
          "enumDescriptions": [
            "No specific event was requested.",
            "The next meeting was requested."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAgendaItem": {
      "id": "EnterpriseTopazSidekickAgendaItem",
      "properties": {
        "conflictedGroup": {
          "$ref": "EnterpriseTopazSidekickConflictingEventsCardProto"
        },
        "gapBefore": {
          "$ref": "EnterpriseTopazSidekickGap"
        },
        "meeting": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAnswerAnswerList": {
      "description": "A list of answers represented as free text.",
      "id": "EnterpriseTopazSidekickAnswerAnswerList",
      "properties": {
        "labeledAnswer": {
          "description": "Answers that have a corresponding label.",
          "items": {
            "$ref": "EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer"
          },
          "type": "array"
        },
        "type": {
          "description": "Answer type.",
          "enum": [
            "UNKNOWN",
            "PERSON_ADDRESS",
            "PERSON_BIRTHDAY",
            "PERSON_DEPARTMENT",
            "PERSON_DESK_LOCATION",
            "PERSON_EMAIL",
            "PERSON_JOB_TITLE",
            "PERSON_PHONE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer": {
      "description": "An answer with a corresponding label.",
      "id": "EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer",
      "properties": {
        "answer": {
          "description": "The free text answer.",
          "type": "string"
        },
        "label": {
          "description": "A localized label for the answer (e.g. \"Cell phone\" vs \"Desk phone\").",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard": {
      "description": "Contains a list of suggested queries. Allows the user to determine what natural language queries they can ask Cloud Search (e.g. \"what can I search for?\").",
      "id": "EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard",
      "properties": {
        "suggestedQueryCategory": {
          "description": "A list of queries to suggest.",
          "items": {
            "$ref": "EnterpriseTopazSidekickAnswerSuggestedQueryCategory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAnswerSuggestedQueryCategory": {
      "description": "Contains a list of suggested queries for a single category.",
      "id": "EnterpriseTopazSidekickAnswerSuggestedQueryCategory",
      "properties": {
        "category": {
          "description": "The query list category.",
          "enum": [
            "UNKNOWN",
            "CALENDAR",
            "DOCUMENT",
            "PEOPLE"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Calendar based queries (e.g. \"my agenda for tomorrow\").",
            "Document based queries (e.g. \"files shared with me\").",
            "People based queries (e.g. \"what is x's email address?\")."
          ],
          "type": "string"
        },
        "isEnabled": {
          "description": "Whether this category is enabled.",
          "type": "boolean"
        },
        "query": {
          "description": "List of suggested queries to show the user.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickAssistCardProto": {
      "description": "Wrapper proto for the Assist cards.",
      "id": "EnterpriseTopazSidekickAssistCardProto",
      "properties": {
        "agendaGroupCardProto": {
          "$ref": "EnterpriseTopazSidekickAgendaGroupCardProto",
          "description": "Agenda group card."
        },
        "cardMetadata": {
          "$ref": "EnterpriseTopazSidekickCardMetadata",
          "description": "Card metadata such as chronology and render mode of the card."
        },
        "cardType": {
          "description": "Card type.",
          "enum": [
            "UNKNOWN_TYPE",
            "AGENDA",
            "CHANGELISTS",
            "CONFLICTING_MEETINGS",
            "CREATE_NOTES_FOR_MEETING",
            "CREATE_NOTES_FOR_MEETING_REQUEST",
            "CUSTOMER_NEWS",
            "FIND_MEETING_TIME",
            "NEXT_MEETING",
            "PERSONALIZED_DOCS",
            "TRENDING_DOCS",
            "UPCOMING_TRIP",
            "SUMMARY",
            "MEETINGS",
            "HOMEPAGE",
            "SHARE_MEETING_DOCS",
            "DISCOVER_PEOPLE",
            "HOMEPAGE_V3",
            "AGENDA_GROUP",
            "WORK_IN_PROGRESS",
            "GET_AND_KEEP_AHEAD",
            "GENERIC_ANSWER_CARD",
            "THIRD_PARTY_ANSWER_CARD",
            "DOMAIN_TRENDING_DOCS",
            "TEAM_TRENDING_DOCS",
            "DOCUMENT_LIST_ANSWER_CARD",
            "SUGGESTED_QUERY_ANSWER_CARD",
            "PERSON_ANSWER_CARD",
            "RELATED_PEOPLE_ANSWER_CARD",
            "PERSON_KNOWLEDGE_CARD",
            "PEOPLE_SEARCH_PROMOTION_CARD"
          ],
          "enumDeprecated": [
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "The default type, an unknown card type.",
            "The user's agenda for the day.",
            "Changelists.",
            "Any group of meetings for the day that are overlapping.",
            "Create notes for a meeting specified in the request.",
            "Create notes for meeting query.",
            "News about your SFDC customers.",
            "Find a time for two people to meet.",
            "The user's next non-declined meeting.",
            "Important documents for you since you have viewed them in the last month and there's some action going on.",
            "Documents that are trending in your company. A TRENDING_DOCS card can be of two types: TRENDING_IN_COLLABORATORS (i.e., Stay in the Loop) and TRENDING_IN_DOMAIN (i.e., Popular Content). Use DOMAIN_TRENDING_DOCS/TEAM_TRENDING_DOCS instead.",
            "An upcoming trip with all trip information along with calendar events in the destination timezone.",
            "The Morning/Evening Summary Card for the next working day.",
            "A meeting. When requesting meetings, the service will return a MEETING card for each meeting the user has in his agenda.",
            "All cards related to the homepage (agenda, conflicting-meetings, summary, etc...). This type should no longer be used. Use HOMEPAGE_V3 instead.",
            "A card to with specifics to share meeting documents with all attendees.",
            "Represents a set of users that the requesting user has low affinity with.",
            "All cards related to the homepage-v3 (agenda-group, WIP, etc...)",
            "A group of agenda-events (meeting, conflicts)",
            "The documents that you were recently working on.",
            "(v3) The \"get and keep ahead\" card for today and tomorrow",
            "Generic answer card.",
            "Third party answer card.",
            "Documents that are trending in your company/domain (i.e., Popular Content).",
            "Documents that are trending in your team (i.e., Stay in the Loop).",
            "Documents that match the user's query (e.g. sheets shared with me).",
            "A help card that provides examples of queries the user can ask.",
            "Answer card for a single person (e.g. what is x's phone number).",
            "Answer card for a list of people related to the person that is the subject of the query (e.g. who reports to x).",
            "Knowledge card for a single person and their related people.",
            "People Search promotion card."
          ],
          "type": "string"
        },
        "conflictingMeetingsCard": {
          "$ref": "EnterpriseTopazSidekickConflictingEventsCardProto",
          "deprecated": true,
          "description": "Conflicting events card."
        },
        "documentListCard": {
          "$ref": "EnterpriseTopazSidekickDocumentPerCategoryList",
          "description": "Answer card for documents that are applicable to the current query."
        },
        "documentsWithMentions": {
          "$ref": "EnterpriseTopazSidekickDocumentPerCategoryList",
          "deprecated": true,
          "description": "Documents with mentions."
        },
        "findMeetingTimeCard": {
          "$ref": "EnterpriseTopazSidekickFindMeetingTimeCardProto",
          "description": "Find meeting time card."
        },
        "genericAnswerCard": {
          "$ref": "EnterpriseTopazSidekickGenericAnswerCard",
          "description": "Generic answer card."
        },
        "getAndKeepAheadCard": {
          "$ref": "EnterpriseTopazSidekickGetAndKeepAheadCardProto",
          "description": "Get and keep ahead card."
        },
        "meeting": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "deprecated": true,
          "description": "Meeting card."
        },
        "meetingNotesCard": {
          "$ref": "EnterpriseTopazSidekickMeetingNotesCardProto",
          "description": "Meeting notes card."
        },
        "meetingNotesCardRequest": {
          "$ref": "EnterpriseTopazSidekickMeetingNotesCardRequest",
          "description": "Request for meeting notes card."
        },
        "peopleDisambiguationCard": {
          "$ref": "EnterpriseTopazSidekickPeopleDisambiguationCard",
          "description": "The people disambiguation card."
        },
        "peoplePromotionCard": {
          "$ref": "PeoplePromotionCard",
          "description": "People Search promotion card."
        },
        "personAnswerCard": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard",
          "description": "Answer card that represents a single person."
        },
        "personProfileCard": {
          "$ref": "EnterpriseTopazSidekickPersonProfileCard",
          "description": "Full profile card."
        },
        "personalizedDocsCard": {
          "$ref": "EnterpriseTopazSidekickPersonalizedDocsCardProto",
          "deprecated": true,
          "description": "Card with recommended documents for the user."
        },
        "relatedPeopleAnswerCard": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard",
          "description": "Answer card that represents a list of people related to a person."
        },
        "shareMeetingDocsCard": {
          "$ref": "EnterpriseTopazSidekickShareMeetingDocsCardProto",
          "deprecated": true,
          "description": "Sahre meeting docs card."
        },
        "sharedDocuments": {
          "$ref": "EnterpriseTopazSidekickDocumentPerCategoryList",
          "deprecated": true,
          "description": "Shared documents."
        },
        "suggestedQueryAnswerCard": {
          "$ref": "EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard",
          "description": "Answer card for what natural language queries the user can ask."
        },
        "thirdPartyAnswerCard": {
          "$ref": "ThirdPartyGenericCard",
          "description": "Third party answer cards."
        },
        "workInProgressCardProto": {
          "$ref": "EnterpriseTopazSidekickRecentDocumentsCardProto",
          "description": "Work In Progress card."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCardMetadata": {
      "description": "Card metadata.",
      "id": "EnterpriseTopazSidekickCardMetadata",
      "properties": {
        "cardCategory": {
          "description": "Declares a preference for how this card should be packed in MSCR. All cards in a response must correspond to a single category. As a result, cards may be dropped from the response if this field is set. Any card that does not match the category of the card with the highest priority in the response will be dropped.",
          "enum": [
            "DEFAULT",
            "ANSWER",
            "KNOWLEDGE",
            "HOMEPAGE"
          ],
          "enumDescriptions": [
            "Let MSCR decide how this card should be packed. Most cards should choose this type. This type should largely be considered equivalent to ANSWER. However, this is not guaranteed to be the case as the request to MSCR may override the static configuration.",
            "This card should be rendered as an answer card.",
            "This card should be rendered as a knowledge card (a non-organic result).",
            "This card should be rendered in the Homepage."
          ],
          "type": "string"
        },
        "cardId": {
          "description": "An ID to identify the card and match actions to it. Be thoughtful of new card IDs since actions will be associated to that ID. E.g., if two card IDs collide, the system will think that the actions have been applied to the same card. Similarly, if EAS can return multiple cards of the same type (e.g., Meetings), ensure that the card_id identifies a given instance of the card so that, e.g., dismissals only affect the dismissed card as opposed to affecting all meeting cards.",
          "type": "string"
        },
        "chronology": {
          "description": "Chronology.",
          "enum": [
            "UNKNOWN",
            "PAST",
            "RECENTLY_PAST",
            "PRESENT",
            "NEAR_FUTURE",
            "FUTURE"
          ],
          "enumDescriptions": [
            "Unknown chronology (default).",
            "Past.",
            "Recently past.",
            "Present.",
            "Near future.",
            "Future."
          ],
          "type": "string"
        },
        "debugInfo": {
          "description": "Debug info (only reported if request's debug_level > 0).",
          "type": "string"
        },
        "nlpMetadata": {
          "$ref": "EnterpriseTopazSidekickNlpMetadata",
          "description": "Information about the NLP done to get the card."
        },
        "rankingParams": {
          "$ref": "EnterpriseTopazSidekickRankingParams",
          "description": "Ranking params."
        },
        "renderMode": {
          "description": "Render mode.",
          "enum": [
            "UNKNOWN_RENDER",
            "COLLAPSED",
            "EXPANDED"
          ],
          "enumDescriptions": [
            "Unknown mode (default).",
            "Collapsed.",
            "Expanded."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonDebugInfo": {
      "description": "Container of debugging information in all object levels. Extend as needed.",
      "id": "EnterpriseTopazSidekickCommonDebugInfo",
      "properties": {
        "message": {
          "description": "Debug message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonDocument": {
      "description": "Representation of a document. NEXT_TAG: 15",
      "id": "EnterpriseTopazSidekickCommonDocument",
      "properties": {
        "accessType": {
          "description": "Access type, i.e., whether the user has access to the document or not.",
          "enum": [
            "UNKNOWN_ACCESS",
            "ALLOWED",
            "NOT_ALLOWED"
          ],
          "enumDescriptions": [
            "Unknown access type.",
            "Access allowed.",
            "Access not allowed."
          ],
          "type": "string"
        },
        "debugInfo": {
          "$ref": "EnterpriseTopazSidekickCommonDebugInfo",
          "description": "Information for debugging."
        },
        "documentId": {
          "description": "Document id.",
          "type": "string"
        },
        "driveDocumentMetadata": {
          "$ref": "EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata",
          "description": "Drive document metadata."
        },
        "genericUrl": {
          "description": "Generic Drive-based url in the format of drive.google.com/open to be used for deeplink",
          "type": "string"
        },
        "justification": {
          "$ref": "EnterpriseTopazSidekickCommonDocumentJustification",
          "description": "Justification on why the document is selected."
        },
        "mimeType": {
          "description": "MIME type",
          "type": "string"
        },
        "provenance": {
          "deprecated": true,
          "description": "Document provenance.",
          "enum": [
            "UNKNOWN_PROVENANCE",
            "CALENDAR_DESCRIPTION",
            "CALENDAR_ATTACHMENT",
            "MINED",
            "CALENDAR_ASSIST_ATTACHMENT"
          ],
          "enumDescriptions": [
            "Unknown provenance.",
            "Calendar event description.",
            "Calendar event attachment.",
            "Mined (extracted by some offline/online analysis).",
            "Attachment created by enterprise assist."
          ],
          "type": "string"
        },
        "reason": {
          "deprecated": true,
          "description": "Justification of why this document is being returned.",
          "enum": [
            "UNKNOWN",
            "TRENDING_IN_COLLABORATORS",
            "TRENDING_IN_DOMAIN",
            "FREQUENTLY_VIEWED",
            "FREQUENTLY_EDITED",
            "NEW_UPDATES",
            "NEW_COMMENTS",
            "EVENT_DESCRIPTION",
            "EVENT_ATTACHMENT",
            "EVENT_METADATA_ATTACHMENT",
            "MINED_DOCUMENT",
            "NEW_MENTIONS",
            "NEW_SHARES"
          ],
          "enumDescriptions": [
            "Unknown justification.",
            "Popular documents within collaborators.",
            "Popular documents within the domain.",
            "Documents being reviewed frequently by the current user .",
            "Documents being edited frequently by the current user .",
            "Documents updated since user's last visit.",
            "Documents that receive comments since user's last visit.",
            "Documents in the calendar event description.",
            "Documents in the calendar event attachments section.",
            "Documents attached in calendar event metadata instead of the attachment section. Event metadata is not visible to the final user. Enterprise assist uses this metadata to store auto-generated documents such as meeting notes.",
            "Documents mined, and so, probably related to the request context. For example, this category includes documents related to a meeting.",
            "Documents that contains mentions of the user.",
            "Documents that are shared with the user."
          ],
          "type": "string"
        },
        "snippet": {
          "description": "A sampling of the text from the document.",
          "type": "string"
        },
        "thumbnailUrl": {
          "description": "Thumbnail URL.",
          "type": "string"
        },
        "title": {
          "description": "Title of the document.",
          "type": "string"
        },
        "type": {
          "description": "Type of the document.",
          "enum": [
            "UNKNOWN",
            "DOCUMENT",
            "PRESENTATION",
            "SPREADSHEET",
            "PDF",
            "IMAGE",
            "BINARY_BLOB",
            "FUSION_TABLE",
            "FOLDER",
            "DRAWING",
            "VIDEO",
            "FORM",
            "LINK_URL",
            "LINK_GO",
            "LINK_GOO_GL",
            "LINK_BIT_LY",
            "LINK_GMAIL",
            "LINK_MAILTO",
            "VIDEO_YOUTUBE",
            "VIDEO_LIVE",
            "GROUPS",
            "NEWS",
            "SITES",
            "HANGOUT",
            "AUDIO",
            "MS_WORD",
            "MS_POWERPOINT",
            "MS_EXCEL",
            "MS_OUTLOOK"
          ],
          "enumDescriptions": [
            "If the type is unknown or not represented in this enum.",
            "Drive document types Writely, Word, etc.",
            "Presently, PowerPoint, etc.",
            "Trix, Excel, etc.",
            "File types for Gdrive objects are below. PDF.",
            "Image.",
            "Fall-back for unknown Gdrive types.",
            "Fusion table.",
            "Folder.",
            "Drawing.",
            "Video.",
            "Form.",
            "Link formats uncategorized URL links",
            "meaningful links that should be renderred specifically",
            "Link to goo.gl.",
            "Link to bit_ly.",
            "Link to Gmail.",
            "Mailto link.",
            "Videos Youtube videos.",
            "Live streams (e.g., liveplayer.googleplex.com)",
            "Other types. Google Groups.",
            "Google News.",
            "Google Sites.",
            "Google Hangout.",
            "Audio files.",
            "Microsoft-specific file types.",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "url": {
          "description": "Absolute URL of the document.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata": {
      "description": "Meta data for drive documents.",
      "id": "EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata",
      "properties": {
        "documentId": {
          "deprecated": true,
          "description": "The drive document cosmo id. Client could use the id to build a URL to open a document. Please use Document.document_id.",
          "type": "string"
        },
        "isPrivate": {
          "description": "Additional field to identify whether a document is private since scope set to LIMITED can mean both that the doc is private or that it's shared with others. is_private indicates whether the doc is not shared with anyone except for the owner.",
          "type": "boolean"
        },
        "lastCommentTimeMs": {
          "description": "Timestamp of the most recent comment added to the document in milliseconds since epoch.",
          "format": "uint64",
          "type": "string"
        },
        "lastEditTimeMs": {
          "description": "Timestamp of the most recent edit from the current user in milliseconds since epoch.",
          "format": "uint64",
          "type": "string"
        },
        "lastModificationTimeMillis": {
          "description": "Last modification time of the document (independent of the user that modified it).",
          "format": "int64",
          "type": "string"
        },
        "lastUpdatedTimeMs": {
          "description": "Timestamp of the last updated time of the document in milliseconds since epoch.",
          "format": "uint64",
          "type": "string"
        },
        "lastViewTimeMs": {
          "description": "Timestamp of the most recent view from the current user in milliseconds since epoch.",
          "format": "uint64",
          "type": "string"
        },
        "owner": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The owner of the document."
        },
        "scope": {
          "description": "ACL scope of the document which identifies the sharing status of the doc (e.g., limited, shared with link, team drive, ...).",
          "enum": [
            "UNKNOWN_DOCUMENT_SCOPE",
            "LIMITED",
            "DASHER_DOMAIN_WITH_LINK",
            "DASHER_DOMAIN",
            "PUBLIC_WITH_LINK",
            "PUBLIC",
            "TEAM_DRIVE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonDocumentJustification": {
      "description": "Justification of why we are reporting the document.",
      "id": "EnterpriseTopazSidekickCommonDocumentJustification",
      "properties": {
        "justification": {
          "description": "A locale aware message that explains why this document was selected.",
          "type": "string"
        },
        "reason": {
          "description": "Reason on why the document is selected. Populate for trending documents.",
          "enum": [
            "UNKNOWN",
            "TRENDING_IN_COLLABORATORS",
            "TRENDING_IN_DOMAIN",
            "FREQUENTLY_VIEWED",
            "FREQUENTLY_EDITED",
            "NEW_UPDATES",
            "NEW_COMMENTS",
            "EVENT_DESCRIPTION",
            "EVENT_ATTACHMENT",
            "EVENT_METADATA_ATTACHMENT",
            "MINED_DOCUMENT",
            "NEW_MENTIONS",
            "NEW_SHARES"
          ],
          "enumDescriptions": [
            "Unknown justification.",
            "Popular documents within collaborators.",
            "Popular documents within the domain.",
            "Documents being reviewed frequently by the current user .",
            "Documents being edited frequently by the current user .",
            "Documents updated since user's last visit.",
            "Documents that receive comments since user's last visit.",
            "Documents in the calendar event description.",
            "Documents in the calendar event attachments section.",
            "Documents attached in calendar event metadata instead of the attachment section. Event metadata is not visible to the final user. Enterprise assist uses this metadata to store auto-generated documents such as meeting notes.",
            "Documents mined, and so, probably related to the request context. For example, this category includes documents related to a meeting.",
            "Documents that contains mentions of the user.",
            "Documents that are shared with the user."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonPerson": {
      "description": "Common representation of a person.",
      "id": "EnterpriseTopazSidekickCommonPerson",
      "properties": {
        "birthday": {
          "$ref": "EnterpriseTopazSidekickCommonPersonBirthday",
          "description": "The birthday."
        },
        "cellPhone": {
          "description": "Cell phone number.",
          "type": "string"
        },
        "department": {
          "description": "The department the person works in (e.g. Engineering).",
          "type": "string"
        },
        "deskLocation": {
          "description": "Desk location (e.g. US-MTV-PR55-5-5B1I).",
          "type": "string"
        },
        "deskPhone": {
          "description": "Work desk phone number.",
          "type": "string"
        },
        "displayName": {
          "description": "The full name.",
          "type": "string"
        },
        "email": {
          "description": "Email.",
          "type": "string"
        },
        "familyName": {
          "description": "The last name.",
          "type": "string"
        },
        "fullAddress": {
          "description": "The fully formatted address (e.g. 1255 Pear Avenue, Mountain View 94043, United States).",
          "type": "string"
        },
        "gaiaId": {
          "deprecated": true,
          "description": "This field is deprecated. The obfuscated_id should be used instead.",
          "format": "int64",
          "type": "string"
        },
        "givenName": {
          "description": "The first name.",
          "type": "string"
        },
        "jobTitle": {
          "description": "The person's job title (e.g. Software Engineer).",
          "type": "string"
        },
        "manager": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The manager."
        },
        "obfuscatedId": {
          "description": "The obfuscated GAIA ID.",
          "type": "string"
        },
        "photoUrl": {
          "description": "The URL for the Focus profile picture.",
          "type": "string"
        },
        "streetAddress": {
          "description": "The street address (e.g. 1255 Pear Avenue).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickCommonPersonBirthday": {
      "id": "EnterpriseTopazSidekickCommonPersonBirthday",
      "properties": {
        "value": {
          "description": "Unstructured birthday.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickConflictingEventsCardProto": {
      "description": "Conflicting meetings card proto.",
      "id": "EnterpriseTopazSidekickConflictingEventsCardProto",
      "properties": {
        "conflictingEvent": {
          "description": "All the events that conflict with main_event.",
          "items": {
            "$ref": "EnterpriseTopazSidekickAgendaEntry"
          },
          "type": "array"
        },
        "mainEvent": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "description": "The event identified as being the most important."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickDocumentGroup": {
      "description": "Represents a mapping between a document type and its corresponding documents. Use for Work in Progress card in v1 homepage.",
      "id": "EnterpriseTopazSidekickDocumentGroup",
      "properties": {
        "groupType": {
          "deprecated": true,
          "description": "Document group type",
          "enum": [
            "UNKNOWN_TYPE",
            "ALL"
          ],
          "enumDescriptions": [
            "Unknown type.",
            "A mix of all the document types."
          ],
          "type": "string"
        },
        "personalizedDocument": {
          "description": "The list of corresponding documents.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonDocument"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickDocumentPerCategoryList": {
      "id": "EnterpriseTopazSidekickDocumentPerCategoryList",
      "properties": {
        "documents": {
          "items": {
            "$ref": "EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry"
          },
          "type": "array"
        },
        "helpMessage": {
          "description": "Localized message explaining how the documents were derived (e.g. from the last 30 days activity). This field is optional.",
          "type": "string"
        },
        "listType": {
          "enum": [
            "UNKNOWN_LIST_TYPE",
            "MENTIONS",
            "SHARES",
            "NEEDS_ATTENTION",
            "VIEWS",
            "EDITS"
          ],
          "enumDescriptions": [
            "",
            "All documents in the list correspond to one of the mention categories.",
            "All documents in the list correspond to one of the share categories.",
            "A mixture of document categories that correspond to documents that need the users attention (e.g. documents that have been explicitly shared with the user but have not been viewed and documents where the user was mentioned but has not replied).",
            "All documents in the list correspond to one of the view categories.",
            "All documents in the list correspond to one of the edit categories."
          ],
          "type": "string"
        },
        "listTypeDescription": {
          "description": "Description of the types of documents present in the list.",
          "type": "string"
        },
        "responseMessage": {
          "description": "Response message in case no documents are present in the card.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry": {
      "id": "EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry",
      "properties": {
        "category": {
          "enum": [
            "UNKNOWN_DOCUMENT",
            "ACTIONABLE",
            "VIEWED",
            "REPLIED",
            "MENTION_VIEWED",
            "MENTION_REPLIED",
            "MENTION_NOT_VIEWED",
            "SHARED_AND_VIEWED",
            "SHARED_NOT_VIEWED",
            "EDITED"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "Mention categories. The mention has been viewed by the user, but the user has not replied.",
            "The user has replied to the mention.",
            "The mention has not been viewed by the user.",
            "Share categories. Consists of documents that have been explicitly shared with the user. Document has been viewed.",
            "Document has not been viewed.",
            "Document has been edited."
          ],
          "type": "string"
        },
        "document": {
          "$ref": "EnterpriseTopazSidekickCommonDocument"
        },
        "rationale": {
          "description": "Reason this document was selected.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickFindMeetingTimeCardProto": {
      "description": "Response to find meeting time among a set of people.",
      "id": "EnterpriseTopazSidekickFindMeetingTimeCardProto",
      "properties": {
        "commonAvailableTimeSlots": {
          "description": "Slots when all attendees have availability.",
          "items": {
            "$ref": "EnterpriseTopazSidekickTimeSlot"
          },
          "type": "array"
        },
        "invitees": {
          "description": "Invitees to the event.",
          "items": {
            "$ref": "EnterpriseTopazSidekickPerson"
          },
          "type": "array"
        },
        "requester": {
          "$ref": "EnterpriseTopazSidekickPerson",
          "description": "Requester."
        },
        "scheduledMeeting": {
          "$ref": "EnterpriseTopazSidekickScheduledMeeting",
          "description": "Details about the scheduled meeting, if one exists."
        },
        "skippedInvitees": {
          "description": "Invitees that have been skipped in the computation, most likely because they are groups.",
          "items": {
            "$ref": "EnterpriseTopazSidekickPerson"
          },
          "type": "array"
        },
        "timeBoundaries": {
          "$ref": "EnterpriseTopazSidekickTimeSlot",
          "description": "Min and max timestamp used to find a common available timeslot."
        },
        "timezoneId": {
          "description": "Timezone ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickGap": {
      "id": "EnterpriseTopazSidekickGap",
      "properties": {
        "displayRemainingTime": {
          "description": "Localized time string in the format: 1 hour 15 minutes",
          "type": "string"
        },
        "endTime": {
          "description": "Localized time string in the format:(Locale CZ) 8:30 odp.",
          "type": "string"
        },
        "endTimeMs": {
          "format": "uint64",
          "type": "string"
        },
        "remainingTime": {
          "format": "google-duration",
          "type": "string"
        },
        "startTime": {
          "description": "Localized time string in the format:(Locale CZ) 8:30 odp.",
          "type": "string"
        },
        "startTimeMs": {
          "format": "uint64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickGenericAnswerCard": {
      "id": "EnterpriseTopazSidekickGenericAnswerCard",
      "properties": {
        "answer": {
          "description": "The answer.",
          "type": "string"
        },
        "title": {
          "description": "Title or header of the card.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickGetAndKeepAheadCardProto": {
      "description": "Get and keep ahead card",
      "id": "EnterpriseTopazSidekickGetAndKeepAheadCardProto",
      "properties": {
        "declinedEvents": {
          "$ref": "EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents"
        },
        "mentionedDocuments": {
          "$ref": "EnterpriseTopazSidekickDocumentPerCategoryList"
        },
        "sharedDocuments": {
          "$ref": "EnterpriseTopazSidekickDocumentPerCategoryList"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents": {
      "description": "A list of events where all guests declined.",
      "id": "EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents",
      "properties": {
        "events": {
          "items": {
            "$ref": "EnterpriseTopazSidekickAgendaEntry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickMeetingNotesCardError": {
      "description": "Errors in the creation of meeting notes.",
      "id": "EnterpriseTopazSidekickMeetingNotesCardError",
      "properties": {
        "description": {
          "description": "The description of the reason why create-meeting-notes failed.",
          "type": "string"
        },
        "event": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "description": "The event to request meeting notes creation"
        },
        "reason": {
          "description": "The reason why create-meeting-notes failed.",
          "enum": [
            "NONE",
            "NOT_OWNER",
            "UNKNOWN"
          ],
          "enumDescriptions": [
            "No reason (default value).",
            "The user is not an owner.",
            "Unknown reason."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickMeetingNotesCardProto": {
      "description": "Information about the meeting notes created.",
      "id": "EnterpriseTopazSidekickMeetingNotesCardProto",
      "properties": {
        "event": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "description": "The event to request meeting notes creation."
        },
        "fileId": {
          "description": "Google Drive ID (a.k.a. resource ID) of the file.",
          "type": "string"
        },
        "title": {
          "description": "Title we want to show for meeting notes in the answer card",
          "type": "string"
        },
        "url": {
          "description": "New URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickMeetingNotesCardRequest": {
      "description": "Meeting notes card request.",
      "id": "EnterpriseTopazSidekickMeetingNotesCardRequest",
      "properties": {
        "canCreateFor": {
          "description": "Who are the meeting notes created for.",
          "items": {
            "enum": [
              "UNKNOWN",
              "MYSELF",
              "ALL_ATTENDEES"
            ],
            "enumDescriptions": [
              "Unknown (default).",
              "For the requester.",
              "For all the meeting attendees."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "error": {
          "$ref": "EnterpriseTopazSidekickMeetingNotesCardError",
          "description": "The error and reason if known error occured."
        },
        "event": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "description": "The event to request meeting notes creation"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickNlpMetadata": {
      "description": "Metadata about the NLP interpretation of the query.",
      "id": "EnterpriseTopazSidekickNlpMetadata",
      "properties": {
        "confidence": {
          "description": "Confidence of the interpretation that generated this card.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo": {
      "description": "Metadata for disambiguation.",
      "id": "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo",
      "properties": {
        "disambiguation": {
          "description": "A list of people that also matched the query. This list is not complete.",
          "items": {
            "$ref": "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson"
          },
          "type": "array"
        },
        "name": {
          "description": "The name that was extracted from the query. This may be in the form of the given name, last name, full name, LDAP, or email address. This name can be considered suitable for displaying to the user and can largely be considered to be normalized (e.g. \"Bob's\" -> \"Bob\").",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson": {
      "description": "A person that also matches the query, but was not selected due to a lower affinity with the requesting user.",
      "id": "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson",
      "properties": {
        "person": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The profile of this person."
        },
        "query": {
          "description": "The query that can be used to produce an answer card with the same attribute, but for this person.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader": {
      "description": "Recommended header to display for the card.",
      "id": "EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader",
      "properties": {
        "title": {
          "description": "The suggested title to display. This defaults to the user's query.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard": {
      "description": "An answer card for a single person.",
      "id": "EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard",
      "properties": {
        "answer": {
          "deprecated": true,
          "description": "List of answers.",
          "items": {
            "$ref": "SafeHtmlProto"
          },
          "type": "array"
        },
        "answerText": {
          "$ref": "EnterpriseTopazSidekickAnswerAnswerList",
          "description": "List of answers."
        },
        "disambiguationInfo": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo",
          "description": "Disambiguation information."
        },
        "header": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader",
          "description": "The header to display for the card."
        },
        "responseStatus": {
          "description": "The response status.",
          "enum": [
            "UNKNOWN",
            "SUCCESS",
            "MISSING_PERSON",
            "MISSING_DATA"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Success.",
            "No such person was found in the user's domain.",
            "A person was found to match the query, but an answer could not be obtained."
          ],
          "type": "string"
        },
        "statusMessage": {
          "description": "Localized user friendly message to display to the user in the case of missing data or an error.",
          "type": "string"
        },
        "subject": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The profile of the person that was the subject of the query."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard": {
      "description": "An answer card for a list of people that are related to the subject of the query.",
      "id": "EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard",
      "properties": {
        "disambiguationInfo": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo",
          "description": "Disambiguation information."
        },
        "header": {
          "$ref": "EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader",
          "description": "The header to display for the card."
        },
        "relatedPeople": {
          "description": "A list of people that are related to the query subject.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonPerson"
          },
          "type": "array"
        },
        "relationType": {
          "description": "Defines the type of relation the list of people have with the subject of the card.",
          "enum": [
            "UNKNOWN",
            "DIRECT_REPORTS",
            "MANAGER",
            "PEERS"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Direct reports.",
            "The manager.",
            "The teammates/peers of the subject."
          ],
          "type": "string"
        },
        "responseStatus": {
          "description": "The response status.",
          "enum": [
            "UNKNOWN",
            "SUCCESS",
            "MISSING_PERSON",
            "MISSING_DATA"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Success.",
            "No such person was found in the user's domain.",
            "A person was found to match the query, but an answer could not be obtained."
          ],
          "type": "string"
        },
        "statusMessage": {
          "description": "Localized user friendly message to display to the user in the case of missing data or an error.",
          "type": "string"
        },
        "subject": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The profile of the person that was the subject of the query."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPeopleDisambiguationCard": {
      "id": "EnterpriseTopazSidekickPeopleDisambiguationCard",
      "properties": {
        "person": {
          "description": "Candidate persons for the query.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonPerson"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPerson": {
      "description": "Person.",
      "id": "EnterpriseTopazSidekickPerson",
      "properties": {
        "affinityLevel": {
          "description": "The level of affinity this person has with the requesting user.",
          "enum": [
            "UNKNOWN",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "attendingStatus": {
          "description": "Attendance status of the person when included in a meeting event.",
          "enum": [
            "AWAITING",
            "YES",
            "NO",
            "MAYBE"
          ],
          "enumDescriptions": [
            "Awaiting for the user to set the status.",
            "Attending.",
            "Not attending.",
            "Tentatively attending."
          ],
          "type": "string"
        },
        "email": {
          "description": "Email.",
          "type": "string"
        },
        "gaiaId": {
          "deprecated": true,
          "description": "Gaia id.",
          "format": "int64",
          "type": "string"
        },
        "isGroup": {
          "description": "Whether the invitee is a group.",
          "type": "boolean"
        },
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "obfuscatedGaiaId": {
          "description": "Obfuscated Gaia id.",
          "type": "string"
        },
        "photoUrl": {
          "description": "Absolute URL to the profile photo of the person.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPersonProfileCard": {
      "id": "EnterpriseTopazSidekickPersonProfileCard",
      "properties": {
        "relatedPeople": {
          "items": {
            "$ref": "EnterpriseTopazSidekickPersonProfileCardRelatedPeople"
          },
          "type": "array"
        },
        "subject": {
          "$ref": "EnterpriseTopazSidekickCommonPerson",
          "description": "The subject of the card."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPersonProfileCardRelatedPeople": {
      "id": "EnterpriseTopazSidekickPersonProfileCardRelatedPeople",
      "properties": {
        "relatedPerson": {
          "description": "Related people.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonPerson"
          },
          "type": "array"
        },
        "relation": {
          "description": "Relation type.",
          "enum": [
            "UNKNOWN",
            "MANAGER",
            "DIRECT_REPORT"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickPersonalizedDocsCardProto": {
      "description": "Personalized docs card proto.",
      "id": "EnterpriseTopazSidekickPersonalizedDocsCardProto",
      "properties": {
        "documentGroup": {
          "description": "Document group.",
          "items": {
            "$ref": "EnterpriseTopazSidekickDocumentGroup"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickRankingParams": {
      "description": "Ranking params.",
      "id": "EnterpriseTopazSidekickRankingParams",
      "properties": {
        "endTimeMs": {
          "description": "The end-time that this object will expect to occur. If the type is marked as FIXED, then this end-time will persist after bidding. If the type is marked as FLEXIBLE, this field is NOT expected to be filled and will be filled in after it has won a bid. Expected to be set when type is set to FIXED.",
          "format": "uint64",
          "type": "string"
        },
        "priority": {
          "description": "The priority to determine between objects that have the same start_time_ms The lower-value of priority == ranked higher. Max-priority = 0. Expected to be set for all types.",
          "enum": [
            "UNKNOWN",
            "CRITICAL",
            "IMPORTANT",
            "HIGH",
            "NORMAL",
            "BEST_EFFORT"
          ],
          "enumDescriptions": [
            "Unknown (default).",
            "Critical.",
            "Important.",
            "High.",
            "Normal.",
            "Best effort."
          ],
          "type": "string"
        },
        "score": {
          "description": "The score of the card to be used to break priority-ties",
          "format": "float",
          "type": "number"
        },
        "spanMs": {
          "description": "The span that this card will take in the stream Expected to be set when type is set to FLEXIBLE.",
          "format": "uint64",
          "type": "string"
        },
        "startTimeMs": {
          "description": "The start-time that this object will bid-for If the type is marked as FIXED, then this start-time will persist after bidding. If the type is marked as FLEXIBLE, then it will occur at the given time or sometime after the requested time. Expected to be set for all types.",
          "format": "uint64",
          "type": "string"
        },
        "type": {
          "description": "The packing type of this object.",
          "enum": [
            "FIXED",
            "FLEXIBLE"
          ],
          "enumDescriptions": [
            "Fixed, i.e., the card is time sensitive.",
            "Flexible, i.e., the card is not time sensitive."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickRecentDocumentsCardProto": {
      "id": "EnterpriseTopazSidekickRecentDocumentsCardProto",
      "properties": {
        "document": {
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonDocument"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickScheduledMeeting": {
      "description": "Details about scheduled meetings.",
      "id": "EnterpriseTopazSidekickScheduledMeeting",
      "properties": {
        "meetingLocation": {
          "description": "The meeting location.",
          "type": "string"
        },
        "meetingTime": {
          "$ref": "EnterpriseTopazSidekickTimeSlot",
          "description": "The meeting time slot."
        },
        "meetingTitle": {
          "description": "The meeting title.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickShareMeetingDocsCardProto": {
      "description": "Share meeting docs card proto.",
      "id": "EnterpriseTopazSidekickShareMeetingDocsCardProto",
      "properties": {
        "document": {
          "description": "Documents to share for the given meeting.",
          "items": {
            "$ref": "EnterpriseTopazSidekickCommonDocument"
          },
          "type": "array"
        },
        "event": {
          "$ref": "EnterpriseTopazSidekickAgendaEntry",
          "description": "Event."
        }
      },
      "type": "object"
    },
    "EnterpriseTopazSidekickTimeSlot": {
      "description": "Slot of time.",
      "id": "EnterpriseTopazSidekickTimeSlot",
      "properties": {
        "endTimeDay": {
          "description": "Day end time at the user's timezone.",
          "type": "string"
        },
        "endTimeHourAndMinute": {
          "description": "Hour and minute of the end time at the user's timezone.",
          "type": "string"
        },
        "endTimeInMillis": {
          "description": "End time in milliseconds.",
          "format": "int64",
          "type": "string"
        },
        "startTimeDay": {
          "description": "Day start time at user's timezone.",
          "type": "string"
        },
        "startTimeHourAndMinute": {
          "description": "Hour and minute of the start time at the user's timezone.",
          "type": "string"
        },
        "startTimeInMillis": {
          "description": "Start time in milliseconds.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnumOperatorOptions": {
      "description": "Used to provide a search operator for enum properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched. For example, if you provide no operator for a *priority* enum property with possible values *p0* and *p1*, a query that contains the term *p0* returns items that have *p0* as the value of the *priority* property, as well as any items that contain the string *p0* in other fields. If you provide an operator name for the enum, such as *priority*, then search users can use that operator to refine results to only items that have *p0* as this property's value, with the query *priority:p0*.",
      "id": "EnumOperatorOptions",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the enum property. For example, if operatorName is *priority* and the property's name is *priorityVal*, then queries like *priority:<value>* show results only where the value of the property named *priorityVal* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any String properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnumPropertyOptions": {
      "description": "The options for enum properties, which allow you to define a restricted set of strings to match user queries, set rankings for those string values, and define an operator name to be paired with those strings so that users can narrow results to only items with a specific value. For example, for items in a request tracking system with priority information, you could define *p0* as an allowable enum value and tie this enum to the operator name *priority* so that search users could add *priority:p0* to their query to restrict the set of results to only those items indexed with the value *p0*.",
      "id": "EnumPropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "EnumOperatorOptions",
          "description": "If set, describes how the enum should be used as a search operator."
        },
        "orderedRanking": {
          "description": "Used to specify the ordered ranking for the enumeration that determines how the integer values provided in the possible EnumValuePairs are used to rank results. If specified, integer values must be provided for all possible EnumValuePair values given for this property. Can only be used if isRepeatable is false.",
          "enum": [
            "NO_ORDER",
            "ASCENDING",
            "DESCENDING"
          ],
          "enumDescriptions": [
            "There is no ranking order for the property. Results aren't adjusted by this property's value.",
            "This property is ranked in ascending order. Lower values indicate lower ranking.",
            "This property is ranked in descending order. Lower values indicate higher ranking."
          ],
          "type": "string"
        },
        "possibleValues": {
          "description": "The list of possible values for the enumeration property. All EnumValuePairs must provide a string value. If you specify an integer value for one EnumValuePair, then all possible EnumValuePairs must provide an integer value. Both the string value and integer value must be unique over all possible values. Once set, possible values cannot be removed or modified. If you supply an ordered ranking and think you might insert additional enum values in the future, leave gaps in the initial integer values to allow adding a value in between previously registered values. The maximum number of elements is 100.",
          "items": {
            "$ref": "EnumValuePair"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnumValuePair": {
      "description": "The enumeration value pair defines two things: a required string value and an optional integer value. The string value defines the necessary query term required to retrieve that item, such as *p0* for a priority item. The integer value determines the ranking of that string value relative to other enumerated values for the same property. For example, you might associate *p0* with *0* and define another enum pair such as *p1* and *1*. You must use the integer value in combination with ordered ranking to set the ranking of a given value relative to other enumerated values for the same property name. Here, a ranking order of DESCENDING for *priority* properties results in a ranking boost for items indexed with a value of *p0* compared to items indexed with a value of *p1*. Without a specified ranking order, the integer value has no effect on item ranking.",
      "id": "EnumValuePair",
      "properties": {
        "integerValue": {
          "description": "The integer value of the EnumValuePair which must be non-negative. Optional.",
          "format": "int32",
          "type": "integer"
        },
        "stringValue": {
          "description": "The string value of the EnumValuePair. The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnumValues": {
      "description": "List of enum values.",
      "id": "EnumValues",
      "properties": {
        "values": {
          "description": "The maximum allowable length for string values is 32 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ErrorInfo": {
      "description": "Error information about the response.",
      "id": "ErrorInfo",
      "properties": {
        "errorMessages": {
          "items": {
            "$ref": "ErrorMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ErrorMessage": {
      "description": "Error message per source response.",
      "id": "ErrorMessage",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "source": {
          "$ref": "Source"
        }
      },
      "type": "object"
    },
    "FacetBucket": {
      "description": "A bucket in a facet is the basic unit of operation. A bucket can comprise either a single value OR a contiguous range of values, depending on the type of the field bucketed. FacetBucket is currently used only for returning the response object.",
      "id": "FacetBucket",
      "properties": {
        "count": {
          "description": "Number of results that match the bucket value. Counts are only returned for searches when count accuracy is ensured. Cloud Search does not guarantee facet counts for any query and facet counts might be present only intermittently, even for identical queries. Do not build dependencies on facet count existence; instead use facet ount percentages which are always returned.",
          "format": "int32",
          "type": "integer"
        },
        "filter": {
          "$ref": "Filter",
          "description": "Filter to be passed in the search request if the corresponding bucket is selected."
        },
        "percentage": {
          "description": "Percent of results that match the bucket value. The returned value is between (0-100], and is rounded down to an integer if fractional. If the value is not explicitly returned, it represents a percentage value that rounds to 0. Percentages are returned for all searches, but are an estimate. Because percentages are always returned, you should render percentages instead of counts.",
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "$ref": "Value"
        }
      },
      "type": "object"
    },
    "FacetOptions": {
      "description": "Specifies operators to return facet results for. There will be one FacetResult for every source_name/object_type/operator_name combination.",
      "id": "FacetOptions",
      "properties": {
        "integerFacetingOptions": {
          "$ref": "IntegerFacetingOptions",
          "description": "If set, describes integer faceting options for the given integer property. The corresponding integer property in the schema should be marked isFacetable. The number of buckets returned would be minimum of this and num_facet_buckets."
        },
        "numFacetBuckets": {
          "description": "Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.",
          "format": "int32",
          "type": "integer"
        },
        "objectType": {
          "description": "If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.",
          "type": "string"
        },
        "operatorName": {
          "description": "The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions",
          "type": "string"
        },
        "sourceName": {
          "description": "Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FacetResult": {
      "description": "Source specific facet response",
      "id": "FacetResult",
      "properties": {
        "buckets": {
          "description": "FacetBuckets for values in response containing at least a single result with the corresponding filter.",
          "items": {
            "$ref": "FacetBucket"
          },
          "type": "array"
        },
        "objectType": {
          "description": "Object type for which facet results are returned. Can be empty.",
          "type": "string"
        },
        "operatorName": {
          "description": "The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions",
          "type": "string"
        },
        "sourceName": {
          "description": "Source name for which facet results are returned. Will not be empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldViolation": {
      "id": "FieldViolation",
      "properties": {
        "description": {
          "description": "The description of the error.",
          "type": "string"
        },
        "field": {
          "description": "Path of field with violation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Filter": {
      "description": "A generic way of expressing filters in a query, which supports two approaches: **1. Setting a ValueFilter.** The name must match an operator_name defined in the schema for your data source. **2. Setting a CompositeFilter.** The filters are evaluated using the logical operator. The top-level operators can only be either an AND or a NOT. AND can appear only at the top-most level. OR can appear only under a top-level AND.",
      "id": "Filter",
      "properties": {
        "compositeFilter": {
          "$ref": "CompositeFilter"
        },
        "valueFilter": {
          "$ref": "ValueFilter"
        }
      },
      "type": "object"
    },
    "FilterOptions": {
      "description": "Filter options to be applied on query.",
      "id": "FilterOptions",
      "properties": {
        "filter": {
          "$ref": "Filter",
          "description": "Generic filter to restrict the search, such as `lang:en`, `site:xyz`."
        },
        "objectType": {
          "description": "If object_type is set, only objects of that type are returned. This should correspond to the name of the object that was registered within the definition of schema. The maximum length is 256 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FreshnessOptions": {
      "description": "Indicates which freshness property to use when adjusting search ranking for an item. Fresher, more recent dates indicate higher quality. Use the freshness option property that best works with your data. For fileshare documents, last modified time is most relevant. For calendar event data, the time when the event occurs is a more relevant freshness indicator. In this way, calendar events that occur closer to the time of the search query are considered higher quality and ranked accordingly.",
      "id": "FreshnessOptions",
      "properties": {
        "freshnessDuration": {
          "description": "The duration after which an object should be considered stale. The default value is 180 days (in seconds).",
          "format": "google-duration",
          "type": "string"
        },
        "freshnessProperty": {
          "description": "This property indicates the freshness level of the object in the index. If set, this property must be a top-level property within the property definitions and it must be a timestamp type or date type. Otherwise, the Indexing API uses updateTime as the freshness indicator. The maximum length is 256 characters. When a property is used to calculate freshness, the value defaults to 2 years from the current time.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GSuitePrincipal": {
      "id": "GSuitePrincipal",
      "properties": {
        "gsuiteDomain": {
          "description": "This principal represents all users of the Google Workspace domain of the customer.",
          "type": "boolean"
        },
        "gsuiteGroupEmail": {
          "description": "This principal references a Google Workspace group name.",
          "type": "string"
        },
        "gsuiteUserEmail": {
          "description": "This principal references a Google Workspace user account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeostoreFeatureIdProto": {
      "description": "A globally unique identifier associated with each feature. We use 128-bit identifiers so that we have lots of bits available to distinguish between features. The feature id currently consists of a 64-bit \"cell id\" that **sometimes** corresponds to the approximate centroid of the feature, plus a 64-bit fingerprint of other identifying information. See more on each respective field in its comments. Feature ids are first assigned when the data is created in MapFacts. After initial creation of the feature, they are immutable. This means that the only properties that you should rely on are that they are unique, and that cell_ids often - but not always - preserve spatial locality. The degree of locality varies as the feature undergoes geometry changes, and should not in general be considered a firm guarantee of the location of any particular feature. In fact, some locationless features have randomized cell IDs! Consumers of FeatureProtos from Mapfacts are guaranteed that fprints in the id field of features will be globally unique. Using the fprint allows consumers who don't need the spatial benefit of cell ids to uniquely identify features in a 64-bit address space. This property is not guaranteed for other sources of FeatureProtos.",
      "id": "GeostoreFeatureIdProto",
      "properties": {
        "cellId": {
          "description": "The S2CellId corresponding to the approximate location of this feature as of when it was first created. This can be of variable accuracy, ranging from the exact centroid of the feature at creation, a very large S2 Cell, or even being completely randomized for locationless features. Cell ids have the nice property that they follow a space-filling curve over the surface of the earth. (See s2cellid.h for details.) WARNING: Clients should only use cell IDs to perform spatial locality optimizations. There is no strict guarantee that the cell ID of a feature is related to the current geometry of the feature in any way.",
          "format": "uint64",
          "type": "string"
        },
        "fprint": {
          "description": "A 64-bit fingerprint used to identify features. Most clients should rely on MapFacts or OneRing to choose fingerprints. If creating new fprints, the strategy should be chosen so that the chance of collision is remote or non-existent, and the distribution should be reasonably uniform. For example, if the source data assigns unique ids to features, then a fingerprint of the provider name, version, and source id is sufficient.",
          "format": "uint64",
          "type": "string"
        },
        "temporaryData": {
          "$ref": "MessageSet",
          "description": "A place for clients to attach arbitrary data to a feature ID. Never set in MapFacts."
        }
      },
      "type": "object"
    },
    "GeostoreFieldMetadataProto": {
      "description": "Internal field metadata. This part is not exposed to downstream consumers of the repository (read-only clients) but is available to upstream providers to the repository (read-write clients).",
      "id": "GeostoreFieldMetadataProto",
      "properties": {
        "internal": {
          "$ref": "GeostoreInternalFieldMetadataProto"
        }
      },
      "type": "object"
    },
    "GeostoreInternalFieldMetadataProto": {
      "id": "GeostoreInternalFieldMetadataProto",
      "properties": {
        "isAuto": {
          "description": "Whether or not the piece of data has been generated automatically (i.e., by a bot/automated process based on heuristics/algorithms rather than coming as a fact set by some human user or data provider based on their knowledge). Note that this does NOT imply that the value was set as a result of a bot operation on the repository, since it is conceivable to use a bot/automated process simply as a way of convenience to ingest large amount of canonical/ground truth data.",
          "type": "boolean"
        },
        "sourceSummary": {
          "$ref": "GeostoreInternalSourceSummaryProto",
          "description": "Information about the source providing the piece of data this metadata is attached to."
        }
      },
      "type": "object"
    },
    "GeostoreInternalSourceSummaryProto": {
      "id": "GeostoreInternalSourceSummaryProto",
      "properties": {
        "dataset": {
          "description": "Within the above provider, the dataset from which this piece of data was generated. For fields that are auto-generated the \"dataset\" is likely to be some algorithm's or program's name. Similar to SourceInfoProto.dataset but with the difference that it is required to always be set. Providers that don't have a concept of dataset may use \"default\".",
          "type": "string"
        },
        "provider": {
          "description": "The data provider from which this piece of data was generated. Equivalent to SourceInfoProto.provider in the public schema.",
          "enum": [
            "PROVIDER_ANY",
            "PROVIDER_UNKNOWN",
            "PROVIDER_NAVTEQ",
            "PROVIDER_TELE_ATLAS",
            "PROVIDER_TELE_ATLAS_MULTINET",
            "PROVIDER_TELE_ATLAS_CODEPOINT",
            "PROVIDER_TELE_ATLAS_GEOPOST",
            "PROVIDER_TELE_ATLAS_DATAGEO",
            "PROVIDER_TELE_ATLAS_ADDRESS_POINTS",
            "PROVIDER_TELCONTAR",
            "PROVIDER_EUROPA",
            "PROVIDER_ROYAL_MAIL",
            "PROVIDER_GOOGLE",
            "PROVIDER_GOOGLE_HAND_EDIT",
            "PROVIDER_GOOGLE_BORDERS",
            "PROVIDER_GOOGLE_SUBRANGE",
            "PROVIDER_GOOGLE_GT_FUSION",
            "PROVIDER_GOOGLE_ZAGAT_CMS",
            "PROVIDER_GOOGLE_PLACE_NAVBOOST",
            "PROVIDER_GOOGLE_FOOTPRINT",
            "PROVIDER_GOOGLE_PRODUCT_TERMS",
            "PROVIDER_GOOGLE_POINTCARDS",
            "PROVIDER_GOOGLE_BUSINESS_CHAINS",
            "PROVIDER_GOOGLE_LOCAL_SUMMARIZATION",
            "PROVIDER_GOOGLE_PRONUNCIATIONS",
            "PROVIDER_GOOGLE_DUMPLING",
            "PROVIDER_GOOGLE_DISTILLERY",
            "PROVIDER_GOOGLE_LOCAL_ATTRIBUTE_SUMMARIZATION",
            "PROVIDER_GOOGLE_RELATION_MINER",
            "PROVIDER_GOOGLE_MAPSPAM",
            "PROVIDER_GOOGLE_ROSE",
            "PROVIDER_GOOGLE_LOCAL_PLACE_RATINGS",
            "PROVIDER_GOOGLE_WIPEOUT",
            "PROVIDER_GOOGLE_KNOWLEDGE_GRAPH",
            "PROVIDER_GOOGLE_BEEGEES",
            "PROVIDER_GOOGLE_REVIEW_SUMMARIZATION",
            "PROVIDER_GOOGLE_OFFLINE_NON_CORE_ATTRIBUTE_SUMMARIZATION",
            "PROVIDER_GOOGLE_GEO_WORLDMAPS",
            "PROVIDER_GOOGLE_GEO_MODERATION",
            "PROVIDER_GOOGLE_OYSTER_AUTO_EDITS",
            "PROVIDER_GOOGLE_LOCAL_ALCHEMY",
            "PROVIDER_GOOGLE_KEROUAC",
            "PROVIDER_GOOGLE_MOBRANK",
            "PROVIDER_GOOGLE_RAPTURE",
            "PROVIDER_GOOGLE_CULTURAL_INSTITUTE",
            "PROVIDER_GOOGLE_GEOCODES_FROM_LOCAL_FEEDS",
            "PROVIDER_GOOGLE_ATTRIBUTES_FROM_CRAWLED_CHAINS",
            "PROVIDER_GOOGLE_TACTILE_MAPS",
            "PROVIDER_GOOGLE_MAPS_FOR_MOBILE",
            "PROVIDER_GOOGLE_GEO_REALTIME",
            "PROVIDER_GOOGLE_PROMINENT_PLACES",
            "PROVIDER_GOOGLE_PLACE_ACTIONS",
            "PROVIDER_GOOGLE_GT_AUTO_EDITS",
            "PROVIDER_GOOGLE_WAZE",
            "PROVIDER_GOOGLE_ONTHEGO",
            "PROVIDER_GOOGLE_GT_IMPORT",
            "PROVIDER_GOOGLE_STRUCTURED_DATA",
            "PROVIDER_GOOGLE_HELICOPTER",
            "PROVIDER_GOOGLE_ROLLBACK",
            "PROVIDER_GOOGLE_RIGHTS_REPAIR",
            "PROVIDER_GOOGLE_PERFUME",
            "PROVIDER_GOOGLE_MAPS_TRANSLATION",
            "PROVIDER_GOOGLE_CALL_ME_MAYBE",
            "PROVIDER_GOOGLE_LOCAL_UNIVERSAL",
            "PROVIDER_GOOGLE_CROUPIER",
            "PROVIDER_GOOGLE_SKYSMART",
            "PROVIDER_GOOGLE_RIDDLER",
            "PROVIDER_GOOGLE_ROADCLOSURES",
            "PROVIDER_GOOGLE_SPORE",
            "PROVIDER_GOOGLE_LOCALIZATION",
            "PROVIDER_GOOGLE_CATTERMS",
            "PROVIDER_GOOGLE_GT_FIELD_OPS",
            "PROVIDER_GOOGLE_MATCHMAKER",
            "PROVIDER_GOOGLE_ARBITRATION",
            "PROVIDER_GOOGLE_BIZBUILDER_OPS",
            "PROVIDER_GOOGLE_LOCAL_INVENTORY_ADS",
            "PROVIDER_GOOGLE_GT_DRAFTY",
            "PROVIDER_GOOGLE_HOTELADS_OPS",
            "PROVIDER_GOOGLE_MARKERS",
            "PROVIDER_GOOGLE_STATE_MACHINE",
            "PROVIDER_GOOGLE_ATTRIBUTES_INFERENCE",
            "PROVIDER_GOOGLE_BIKESHARE",
            "PROVIDER_GOOGLE_GHOSTWRITER",
            "PROVIDER_GOOGLE_EDIT_PLATFORM",
            "PROVIDER_GOOGLE_BLUE_GINGER",
            "PROVIDER_GOOGLE_GEO_TIGER",
            "PROVIDER_GOOGLE_HYADES",
            "PROVIDER_GOOGLE_WEBQUARRY",
            "PROVIDER_GOOGLE_GEO_MADDEN",
            "PROVIDER_GOOGLE_ANDROID_PAY",
            "PROVIDER_GOOGLE_OPENING_HOURS_TEAM",
            "PROVIDER_GOOGLE_LOCAL_DISCOVERY",
            "PROVIDER_GOOGLE_LOCAL_HEALTH",
            "PROVIDER_GOOGLE_UGC_MAPS",
            "PROVIDER_GOOGLE_FIBER",
            "PROVIDER_GOOGLE_REVGEO",
            "PROVIDER_GOOGLE_HOTELADS_PARTNER_FRONT_END",
            "PROVIDER_GOOGLE_GEO_UGC_TASKS",
            "PROVIDER_GOOGLE_GEOCODING",
            "PROVIDER_GOOGLE_SPYGLASS",
            "PROVIDER_GOOGLE_PLUS_CODES_AS_ADDRESSES",
            "PROVIDER_GOOGLE_GEO_CHANGES",
            "PROVIDER_GOOGLE_HUME",
            "PROVIDER_GOOGLE_MEGAMIND",
            "PROVIDER_GOOGLE_GT_ROADSYNTH",
            "PROVIDER_GOOGLE_FIREBOLT",
            "PROVIDER_GOOGLE_LOCAL_PLACE_OFFERINGS",
            "PROVIDER_GOOGLE_UGC_SERVICES",
            "PROVIDER_GOOGLE_GEOALIGN",
            "PROVIDER_GOOGLE_GT_COMPOUNDS",
            "PROVIDER_GOOGLE_FOOD_ORDERING",
            "PROVIDER_GOOGLE_HOTEL_KNOWLEDGE_OPS",
            "PROVIDER_GOOGLE_URAW",
            "PROVIDER_GOOGLE_FLYEYE",
            "PROVIDER_GOOGLE_YOUKE",
            "PROVIDER_GOOGLE_GT_ZEPHYR",
            "PROVIDER_GOOGLE_USER_SAFETY",
            "PROVIDER_GOOGLE_ADDRESS_MAKER",
            "PROVIDER_GOOGLE_UGC_PHOTOS",
            "PROVIDER_GOOGLE_GT_WINDCHIME",
            "PROVIDER_GOOGLE_SNAG_FIXER",
            "PROVIDER_GOOGLE_GEO_DEALS",
            "PROVIDER_GOOGLE_LOCAL_PLACE_TOPICS",
            "PROVIDER_GOOGLE_PROPERTY_INSIGHTS",
            "PROVIDER_GOOGLE_GEO_CONSUMER_MERCHANT_EXPERIMENTS",
            "PROVIDER_GOOGLE_GEO_PORTKEY",
            "PROVIDER_GOOGLE_ROAD_MAPPER",
            "PROVIDER_GOOGLE_LOCATION_PLATFORM",
            "PROVIDER_GOOGLE_POSTTRIP",
            "PROVIDER_GOOGLE_TRAVEL_DESTINATION",
            "PROVIDER_GOOGLE_GEO_DATA_UPLOAD",
            "PROVIDER_GOOGLE_BIZBUILDER_CLEANUP",
            "PROVIDER_GOOGLE_USER",
            "PROVIDER_GOOGLE_STATION",
            "PROVIDER_GOOGLE_GEO_FOOD",
            "PROVIDER_GOOGLE_GEO_AR",
            "PROVIDER_GOOGLE_GEO_TEMPORAL",
            "PROVIDER_GOOGLE_SERVICES_MARKETPLACE",
            "PROVIDER_GOOGLE_IMT_CLEANUP",
            "PROVIDER_GOOGLE_GEO_FOOD_MENU",
            "PROVIDER_GOOGLE_CARENAV",
            "PROVIDER_GOOGLE_DRIVING_FEEDS",
            "PROVIDER_GOOGLE_DRIVING_UGC",
            "PROVIDER_GOOGLE_POLAR",
            "PROVIDER_GOOGLE_TRIWILD",
            "PROVIDER_GOOGLE_CROWD_COMPUTE_OPS",
            "PROVIDER_GOOGLE_SA_FROM_WEB",
            "PROVIDER_GOOGLE_POI_ALIGNMENT",
            "PROVIDER_GOOGLE_SA_FROM_HULK",
            "PROVIDER_GOOGLE_SERVICES_INTERACTIONS",
            "PROVIDER_GOOGLE_ROADS_UGC_EDITOR",
            "PROVIDER_GOOGLE_SA_FROM_NG_INFERENCE",
            "PROVIDER_GOOGLE_GEO_DRIVING_VIZ",
            "PROVIDER_GOOGLE_GEO_TASKING",
            "PROVIDER_GOOGLE_CROWDTASK_DATACOMPUTE",
            "PROVIDER_GOOGLE_CROWDTASK_TASKADS",
            "PROVIDER_GOOGLE_CROWDTASK_TASKMATE",
            "PROVIDER_GOOGLE_CROWDTASK_FURBALL",
            "PROVIDER_GOOGLE_CROWDTASK_ADAP",
            "PROVIDER_GOOGLE_GPAY",
            "PROVIDER_GOOGLE_GEO_UGC_TRUSTED_USERS",
            "PROVIDER_GOOGLE_THIRD_PARTY_DATA_PRODUCTION",
            "PROVIDER_GOOGLE_GEOTRACKER",
            "PROVIDER_GOOGLE_LOCAL_LANDMARK_INFERENCE",
            "PROVIDER_GOOGLE_GEO_CLOSED_LOOP",
            "PROVIDER_GOOGLE_SA_FROM_MERCHANT_POSTS",
            "PROVIDER_GOOGLE_CORE_DATA_RIGHTS",
            "PROVIDER_GOOGLE_SA_FROM_USER_REVIEWS",
            "PROVIDER_GOOGLE_GEO_CONTENT_FIXER",
            "PROVIDER_GOOGLE_POLYGON_REFINEMENT",
            "PROVIDER_GOOGLE_HANASU",
            "PROVIDER_GOOGLE_FULLRIGHTS_GEO_DATA_UPLOAD",
            "PROVIDER_GOOGLE_FULLRIGHTS_3P_OUTREACH_UPLOAD",
            "PROVIDER_GOOGLE_ATTRIBUTION_3P_OUTREACH_UPLOAD",
            "PROVIDER_GOOGLE_SA_FROM_FOOD_MENUS",
            "PROVIDER_GOOGLE_GT_CONSISTENCY_EDITS",
            "PROVIDER_GOOGLE_SA_QUALITY",
            "PROVIDER_GOOGLE_GDCE_CLEANUP",
            "PROVIDER_GOOGLE_UGC_QUALITY_CHAINS",
            "PROVIDER_GOOGLE_ATTRIBUTES_DISCOVERY",
            "PROVIDER_GOOGLE_GEO_LDE",
            "PROVIDER_GOOGLE_GEO_SIGNAL_TRACKING",
            "PROVIDER_GOOGLE_UGC_AGGREGATION",
            "PROVIDER_GOOGLE_3D_BASEMAP",
            "PROVIDER_GOOGLE_MAPFACTS_PRIVACY",
            "PROVIDER_GOOGLE_GT_ALF",
            "PROVIDER_GOOGLE_GT_OPERATOR_PROVENANCE",
            "PROVIDER_GOOGLE_LOCAL_SERVICES_ADS",
            "PROVIDER_GOOGLE_GT_LANE_AUTOMATION",
            "PROVIDER_GOOGLE_GEO_NG_LOCAL",
            "PROVIDER_GOOGLE_MAPFACTS_CLEANUP",
            "PROVIDER_GOOGLE_THIRD_PARTY_UGC",
            "PROVIDER_GOOGLE_GEO_ISSUE_ADMIN",
            "PROVIDER_GOOGLE_VACATION_RENTAL_PARTNERS",
            "PROVIDER_GOOGLE_FEED_PROCESSOR_ROAD_INCIDENTS",
            "PROVIDER_GOOGLE_DYNAMIC_BASEMAP",
            "PROVIDER_GOOGLE_LOCAL_SERVICES_ADS_EMEA",
            "PROVIDER_GOOGLE_RWJ_INDIA_FOOD",
            "PROVIDER_GOOGLE_LOCALSEARCH",
            "PROVIDER_GOOGLE_TRANSIT",
            "PROVIDER_GOOGLE_GEOWIKI",
            "PROVIDER_GOOGLE_CHINA_LOCAL_TEAM",
            "PROVIDER_GOOGLE_SYNTHESIZED",
            "PROVIDER_GOOGLE_INTERNAL_TEST",
            "PROVIDER_GOOGLE_DISPUTED_AREAS",
            "PROVIDER_GOOGLE_3DWAREHOUSE",
            "PROVIDER_GOOGLE_GROUNDS_BUILDER",
            "PROVIDER_GOOGLE_SESAME",
            "PROVIDER_GOOGLE_GT",
            "PROVIDER_GOOGLE_GT_BASEMAP_UPLOAD",
            "PROVIDER_GOOGLE_ADSDB",
            "PROVIDER_GOOGLE_MACHINE_TRANSLITERATION",
            "PROVIDER_GOOGLE_TRAVELSEARCH",
            "PROVIDER_GOOGLE_PANORAMIO",
            "PROVIDER_GOOGLE_YOUTUBE",
            "PROVIDER_GOOGLE_OLD",
            "PROVIDER_GOOGLE_STREETVIEW",
            "PROVIDER_GOOGLE_STREETVIEW_BIZVIEW",
            "PROVIDER_GOOGLE_ZIPIT",
            "PROVIDER_GOOGLE_OYSTER_CONNECT_ROUTES",
            "PROVIDER_GOOGLE_GOLDEN",
            "PROVIDER_GOOGLE_INNERSPACE",
            "PROVIDER_GOOGLE_MAPSEARCH",
            "PROVIDER_GOOGLE_CATEGORIES_TEAM",
            "PROVIDER_GOOGLE_CROWDSENSUS",
            "PROVIDER_GOOGLE_LOCAL_ALGORITHMIC_IDENTITY",
            "PROVIDER_GOOGLE_FREEBASE",
            "PROVIDER_GOOGLE_HOTELADS",
            "PROVIDER_GOOGLE_AUTHORITY_PAGES",
            "PROVIDER_GOOGLE_PLACES_API",
            "PROVIDER_GOOGLE_NAMEHEATMAP",
            "PROVIDER_GOOGLE_MAPMAKER",
            "PROVIDER_GOOGLE_MAPMAKER_MOBILE",
            "PROVIDER_GOOGLE_MAPMAKER_PANCAKE",
            "PROVIDER_GOOGLE_MAPMAKER_V2",
            "PROVIDER_GOOGLE_LOCAL_CLUSTERING_OPERATOR_OVERRIDE",
            "PROVIDER_GOOGLE_SERVED_ON_MAPMAKER",
            "PROVIDER_GOOGLE_GT_LOCAL",
            "PROVIDER_GOOGLE_GT_LOCAL_WITH_RIGHTS",
            "PROVIDER_GOOGLE_LOGS_RANKING_SIGNALS",
            "PROVIDER_GOOGLE_ENTITY_NAVBOOST",
            "PROVIDER_GOOGLE_RELATED_PLACES",
            "PROVIDER_GOOGLE_KNOWN_FOR_TERMS",
            "PROVIDER_GOOGLE_SYNTHETIC_AREAS",
            "PROVIDER_GOOGLE_AUTHORITY_PAGE_PHOTOS",
            "PROVIDER_GOOGLE_CROSS_STREETS",
            "PROVIDER_GOOGLE_CORRIDORS",
            "PROVIDER_GOOGLE_BICYCLE_RENTAL",
            "PROVIDER_GOOGLE_CONCRETE_URLS",
            "PROVIDER_GOOGLE_LEANBACK",
            "PROVIDER_GOOGLE_LOCKED_LISTINGS",
            "PROVIDER_GOOGLE_MONITORING",
            "PROVIDER_GOOGLE_SPROUT",
            "PROVIDER_GOOGLE_LOCAL_SEARCH_QUALITY",
            "PROVIDER_GOOGLE_GOBY",
            "PROVIDER_GOOGLE_PROBLEM_REPORT",
            "PROVIDER_GOOGLE_CANDID",
            "PROVIDER_GOOGLE_BIZBUILDER",
            "PROVIDER_AUTOMOTIVE_NAVIGATION_DATA",
            "PROVIDER_MAPDATA_SCIENCES",
            "PROVIDER_MAPONICS",
            "PROVIDER_SKI_RESORTS",
            "PROVIDER_ZENRIN",
            "PROVIDER_SANBORN",
            "PROVIDER_URBAN_MAPPING",
            "PROVIDER_US_GOVERNMENT",
            "PROVIDER_US_CENSUS",
            "PROVIDER_US_POSTAL_SERVICE",
            "PROVIDER_US_GEOLOGICAL_SURVEY",
            "PROVIDER_US_GNIS",
            "PROVIDER_US_LANDSAT",
            "PROVIDER_US_NATIONAL_GEOSPATIAL_INTELLIGENCE_AGENCY",
            "PROVIDER_US_NGA_GNS",
            "PROVIDER_US_SSIBL",
            "PROVIDER_US_BUREAU_OF_TRANSPORTATION_STATISTICS",
            "PROVIDER_US_NATIONAL_OCEANIC_AND_ATMOSPHERIC_ADMINISTRATION",
            "PROVIDER_US_POLAR_GEOSPATIAL_CENTER",
            "PROVIDER_US_DEPARTMENT_OF_AGRICULTURE",
            "PROVIDER_US_NPI_REGISTRY",
            "PROVIDER_US_BUREAU_OF_INDIAN_AFFAIRS",
            "PROVIDER_DMTI_SPATIAL",
            "PROVIDER_INTERNATIONAL_HYDROGRAPHIC_ORGANIZATION",
            "PROVIDER_MAPLINK",
            "PROVIDER_KINGWAY",
            "PROVIDER_GEOCENTRE",
            "PROVIDER_CN_NATIONAL_FOUNDAMENTAL_GIS",
            "PROVIDER_CN_MAPABC",
            "PROVIDER_SMITHSONIAN_INSTITUTE",
            "PROVIDER_TRACKS_FOR_AFRICA",
            "PROVIDER_PPWK",
            "PROVIDER_LEADDOG",
            "PROVIDER_CENTRE_DONNEES_ASTRONOMIQUES_STRASBOURG",
            "PROVIDER_GISRAEL",
            "PROVIDER_BASARSOFT",
            "PROVIDER_MAPINFO",
            "PROVIDER_MAPIT",
            "PROVIDER_GEOBASE",
            "PROVIDER_ORION",
            "PROVIDER_CENTRAL_EUROPEAN_DATA_AGENCY",
            "PROVIDER_ANASAT",
            "PROVIDER_MINED_POSTCODES",
            "PROVIDER_DMAPAS",
            "PROVIDER_COMMON_LOCALE_DATA_REPOSITORY",
            "PROVIDER_CH_SBB",
            "PROVIDER_SKENERGY",
            "PROVIDER_GBRMPA",
            "PROVIDER_KOREA_POST",
            "PROVIDER_CN_AUTONAVI",
            "PROVIDER_MINED_POI",
            "PROVIDER_ML_INFOMAP",
            "PROVIDER_SNOOPER",
            "PROVIDER_GEOSISTEMAS",
            "PROVIDER_AFRIGIS",
            "PROVIDER_TRANSNAVICOM",
            "PROVIDER_EASYCONNECT",
            "PROVIDER_LANTMATERIET",
            "PROVIDER_LOGICA",
            "PROVIDER_MAPKING",
            "PROVIDER_DIANPING",
            "PROVIDER_GEONAV",
            "PROVIDER_HEIBONSHA",
            "PROVIDER_DEUTSCHE_TELEKOM",
            "PROVIDER_LINGUISTIC_DATA_CONSORTIUM",
            "PROVIDER_ACXIOM",
            "PROVIDER_DUN_AND_BRADSTREET",
            "PROVIDER_FEDERAL_AVIATION_ADMINISTRATION",
            "PROVIDER_INFOUSA",
            "PROVIDER_INFOUSA_NIXIE",
            "PROVIDER_THOMSON_LOCAL",
            "PROVIDER_TELEFONICA_PUBLICIDAD_E_INFORMACION",
            "PROVIDER_WIKIPEDIA",
            "PROVIDER_INFOBEL",
            "PROVIDER_MX_GOVERNMENT",
            "PROVIDER_MX_NATIONAL_INSTITUTE_STATISTICS_GEOGRAPHY",
            "PROVIDER_MX_SERVICIO_POSTAL_MEXICANO",
            "PROVIDER_TELEGATE",
            "PROVIDER_TELELISTAS",
            "PROVIDER_MAPCITY",
            "PROVIDER_EXPLAINER_DC",
            "PROVIDER_DAIKEI",
            "PROVIDER_NL_CHAMBER_OF_COMMERCE",
            "PROVIDER_KOREA_INFO_SERVICE",
            "PROVIDER_WIKITRAVEL",
            "PROVIDER_FLICKR",
            "PROVIDER_DIANCO",
            "PROVIDER_VOLT_DELTA",
            "PROVIDER_SG_GOVERNMENT",
            "PROVIDER_SG_LAND_TRANSPORT_AUTHORITY",
            "PROVIDER_MAPBAR",
            "PROVIDER_LONGTU",
            "PROVIDER_SA_GOVERNMENT",
            "PROVIDER_SA_SAUDI_POST",
            "PROVIDER_PEAKLIST",
            "PROVIDER_LOCAL_BUSINESS_CENTER",
            "PROVIDER_LOCAL_FEED_XML",
            "PROVIDER_WEB",
            "PROVIDER_RAILS_TO_TRAILS",
            "PROVIDER_INDIACOM",
            "PROVIDER_INFOMEDIA",
            "PROVIDER_PICASA",
            "PROVIDER_AT_GOVERNMENT",
            "PROVIDER_AT_BUNDESAMT_FUR_EICH_UND_VERMESSUNGSWESEN",
            "PROVIDER_AT_NATIONAL_TOURIST_OFFICE",
            "PROVIDER_AT_AUSTRIA_POST",
            "PROVIDER_NO_GOVERNMENT",
            "PROVIDER_NO_NORSK_EIENDOMSINFORMASJON",
            "PROVIDER_NO_POSTEN_NORGE_AS",
            "PROVIDER_CH_GOVERNMENT",
            "PROVIDER_CH_SWISS_POST",
            "PROVIDER_CH_SWISSTOPO",
            "PROVIDER_CH_SWISS_NATIONAL_PARK",
            "PROVIDER_NAVIT",
            "PROVIDER_GEOSEARCH",
            "PROVIDER_DE_GOVERNMENT",
            "PROVIDER_BUNDESAMT_KARTOGRAPHIE_UND_GEODASIE",
            "PROVIDER_BUNDESNETZAGENTUR",
            "PROVIDER_SCHOBER_GROUP",
            "PROVIDER_MIREO",
            "PROVIDER_PUBLIC_MUNICIPALITY",
            "PROVIDER_US_PUBLIC_MUNICIPALITY",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_WEBSTER_TEXAS",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_AMHERST_MASSACHUSETTS",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_BLOOMINGTON_INDIANA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_PASADENA_CALIFORNIA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_CHULA_VISTA_CALIFORNIA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_TEMPE_ARIZONA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_COLUMBUS_OHIO",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_PORTAGE_MICHIGAN",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_GEORGETOWN_KENTUCKY",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_GREENVILLE_SOUTH_CAROLINA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_NASHVILLE_TENNESSEE",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_WASHINGTON_DISTRICT_OF_COLUMBIA",
            "PROVIDER_US_PUBLIC_MUNICIPALITY_BOULDER_COLORADO",
            "PROVIDER_NZ_PUBLIC_MUNICIPALITY",
            "PROVIDER_NZ_PUBLIC_MUNICIPALITY_ENVIRONMENT_BAY",
            "PROVIDER_PL_PUBLIC_MUNICIPALITY",
            "PROVIDER_PL_PUBLIC_MUNICIPALITY_BIELSKO_BIALA",
            "PROVIDER_DE_PUBLIC_MUNICIPALITY",
            "PROVIDER_DE_PUBLIC_MUNICIPALITY_FRANKFURT",
            "PROVIDER_DE_PUBLIC_MUNICIPALITY_HAMBURG",
            "PROVIDER_DE_PUBLIC_MUNICIPALITY_KARLSRUHE",
            "PROVIDER_PT_PUBLIC_MUNICIPALITY",
            "PROVIDER_PT_PUBLIC_MUNICIPALITY_SANTA_CRUZ",
            "PROVIDER_AT_PUBLIC_MUNICIPALITY",
            "PROVIDER_AT_PUBLIC_MUNICIPALITY_KLAGENFURT",
            "PROVIDER_AT_PUBLIC_MUNICIPALITY_LINZ",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_AZKOITIA",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_BEASAIN",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_GIRONA",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_SAN_SEBASTIAN",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_CATALUNYA",
            "PROVIDER_ES_PUBLIC_MUNICIPALITY_HONDARRIBIA",
            "PROVIDER_AU_PUBLIC_MUNICIPALITY",
            "PROVIDER_AU_PUBLIC_MUNICIPALITY_LAUNCESTON_TASMANIA",
            "PROVIDER_IS_PUBLIC_MUNICIPALITY",
            "PROVIDER_IS_PUBLIC_MUNICIPALITY_REYKJAVIK",
            "PROVIDER_NL_PUBLIC_MUNICIPALITY",
            "PROVIDER_NL_PUBLIC_MUNICIPALITY_AMELSTEVEEN",
            "PROVIDER_BE_PUBLIC_MUNICIPALITY",
            "PROVIDER_BE_PUBLIC_MUNICIPALITY_ANTWERPEN",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_FREDERICTON_NEW_BRUNSWICK",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_KAMLOOPS_BRITISH_COLUMBIA",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_NANAIMO_BRITISH_COLUMBIA",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_BANFF_ALBERTA",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_CALGARY_ALBERTA",
            "PROVIDER_CA_PUBLIC_MUNICIPALITY_TORONTO_ONTARIO",
            "PROVIDER_SE_PUBLIC_MUNICIPALITY",
            "PROVIDER_SE_PUBLIC_MUNICIPALITY_UMEA",
            "PROVIDER_UA_PUBLIC_MUNICIPALITY",
            "PROVIDER_UA_PUBLIC_MUNICIPALITY_KHARKIV",
            "PROVIDER_OTHER_PUBLIC_MUNICIPALITY",
            "PROVIDER_OTHER_PUBLIC_MUNICIPALITY_AQUA_CALIENTE_CAHUILLA_INDIANS",
            "PROVIDER_FR_PUBLIC_MUNICIPALITY",
            "PROVIDER_FR_PUBLIC_MUNICIPALITY_PONT_AUDEMER",
            "PROVIDER_FR_PUBLIC_MUNICIPALITY_BORDEAUX",
            "PROVIDER_SG_PUBLIC_MUNICIPALITY",
            "PROVIDER_BR_PUBLIC_MUNICIPALITY",
            "PROVIDER_BR_PUBLIC_MUNICIPALITY_RIO_DE_JANEIRO",
            "PROVIDER_MAPCUBE",
            "PROVIDER_3D_REALITYMAPS",
            "PROVIDER_DEUTSCHES_ZENTRUM_FUR_LUFT_UND_RAUMFAHRT",
            "PROVIDER_3D_CITIES_SOCIEDADE_ANONIMA",
            "PROVIDER_DISNEY",
            "PROVIDER_CYBERCITY",
            "PROVIDER_PRECISION_LIGHTWORKS_MODELWORKS",
            "PROVIDER_VIRTUAL_HUNGARY_LIMITED",
            "PROVIDER_VIRTUEL_CITY",
            "PROVIDER_SCREAMPOINT_INTERNATIONAL",
            "PROVIDER_AGENTSCHAP_VOOR_GEOGRAFISCHE_INFORMATIE_VLAANDEREN",
            "PROVIDER_FR_GOVERNMENT",
            "PROVIDER_FR_INSTITUT_GEOGRAPHIQUE_NATIONAL",
            "PROVIDER_FR_CADASTRE",
            "PROVIDER_DIADIEM",
            "PROVIDER_THE_WEATHER_CHANNEL",
            "PROVIDER_COWI",
            "PROVIDER_FALKPLAN_ANDES",
            "PROVIDER_NL_GOVERNMENT",
            "PROVIDER_NL_KADASTER",
            "PROVIDER_NL_BOARD_OF_TOURISM_AND_CONVENTIONS",
            "PROVIDER_DIGITAL_MAP_PRODUCTS",
            "PROVIDER_SILICE_DIGITAL",
            "PROVIDER_TYDAC",
            "PROVIDER_ALBRECHT_GOLF",
            "PROVIDER_HEALTH_CH",
            "PROVIDER_VISITDENMARK",
            "PROVIDER_FLYHERE",
            "PROVIDER_DIGITAL_DATA_SERVICES",
            "PROVIDER_MECOMO",
            "PROVIDER_ZA_GOVERNMENT",
            "PROVIDER_ZA_RURAL_DEVELOPMENT_LAND_REFORM",
            "PROVIDER_SENSIS",
            "PROVIDER_JJCONNECT",
            "PROVIDER_OPPLYSNINGEN",
            "PROVIDER_TELLUS",
            "PROVIDER_IQONIA",
            "PROVIDER_BE_GOVERNMENT",
            "PROVIDER_BE_NATIONAAL_GEOGRAFISCH_INSTITUUT",
            "PROVIDER_BE_BRUSSELS_MOBILITY",
            "PROVIDER_YELLOWMAP_AG",
            "PROVIDER_STIFTUNG_GESUNDHEIT",
            "PROVIDER_GIATA",
            "PROVIDER_SANPARKS",
            "PROVIDER_CENTRE_DINFORMATIQUE_POUR_LA_REGION_BRUXELLOISE",
            "PROVIDER_INFOPORTUGAL",
            "PROVIDER_NEGOCIOS_DE_TELECOMUNICACOES_E_SISTEMAS_DE_INFORMACAO",
            "PROVIDER_COLLINS_BARTHOLOMEW",
            "PROVIDER_PROTECT_PLANET_OCEAN",
            "PROVIDER_KARTTAKESKUS",
            "PROVIDER_FI_GOVERNMENT",
            "PROVIDER_FI_NATIONAL_ROAD_ADMINISTRATION",
            "PROVIDER_FI_NATIONAL_LAND_SURVEY",
            "PROVIDER_FI_STATISTICS_FINLAND",
            "PROVIDER_GB_GOVERNMENT",
            "PROVIDER_GB_ORDNANCE_SURVEY",
            "PROVIDER_NATURAL_ENGLAND",
            "PROVIDER_WELSH_GOVERNMENT",
            "PROVIDER_GB_OFFICE_FOR_NATIONAL_STATISTICS",
            "PROVIDER_EPSILON",
            "PROVIDER_PARTNER_FRONT_END",
            "PROVIDER_CARTESIA",
            "PROVIDER_SE_GOVERNMENT",
            "PROVIDER_SE_TRAFIKVERKET",
            "PROVIDER_SE_NATURVARDSVERKET",
            "PROVIDER_IE_GOVERNMENT",
            "PROVIDER_IE_ORDNANCE_SURVEY_IRELAND",
            "PROVIDER_LU_GOVERNMENT",
            "PROVIDER_LU_P_AND_T_LUXEMBOURG",
            "PROVIDER_LU_ADMINISTRATION_DU_CADASTRE_ET_DE_LA_TOPOGRAPHIE",
            "PROVIDER_LU_NATIONAL_TOURIST_OFFICE",
            "PROVIDER_MAPFLOW",
            "PROVIDER_TKARTOR",
            "PROVIDER_JUMPSTART",
            "PROVIDER_EPTISA",
            "PROVIDER_MC_GOVERNMENT",
            "PROVIDER_MC_PRINCIPAUTE_DE_MONACO",
            "PROVIDER_MONOLIT",
            "PROVIDER_ENVIRONMENTAL_SYSTEMS_RESEARCH_INSTITUTE",
            "PROVIDER_MODIS",
            "PROVIDER_GEOX",
            "PROVIDER_GEODIRECTORY",
            "PROVIDER_GEOPLAN",
            "PROVIDER_INFODIREKT",
            "PROVIDER_GEOGLOBAL",
            "PROVIDER_DEUTSCHE_POST",
            "PROVIDER_TRACASA",
            "PROVIDER_CORREOS",
            "PROVIDER_ES_GOVERNMENT",
            "PROVIDER_ES_CENTRO_NACIONAL_DE_INFORMACION_GEOGRAFICA",
            "PROVIDER_EDIMAP",
            "PROVIDER_VERIZON",
            "PROVIDER_NATIONAL_GEOGRAPHIC_MAPS",
            "PROVIDER_PROMAPS",
            "PROVIDER_CONSODATA",
            "PROVIDER_DE_AGOSTINI",
            "PROVIDER_FEDERPARCHI",
            "PROVIDER_NAVIGO",
            "PROVIDER_ITALIAMAPPE",
            "PROVIDER_CZECOT",
            "PROVIDER_NATURAL_EARTH",
            "PROVIDER_REGIO",
            "PROVIDER_SHIPWRECK_CENTRAL",
            "PROVIDER_RUTGERS_STATE_UNIVERSITY",
            "PROVIDER_TWINICE",
            "PROVIDER_NORTHERN_IRELAND_TOURIST_BOARD",
            "PROVIDER_INFOGROUP",
            "PROVIDER_TNET",
            "PROVIDER_CTT_CORREIOS_DE_PORTUGAL",
            "PROVIDER_EUROPARC",
            "PROVIDER_IUPPITER",
            "PROVIDER_MICHAEL_BAUER_INTERNATIONAL",
            "PROVIDER_LEPTON",
            "PROVIDER_MAPPOINT",
            "PROVIDER_GEODATA",
            "PROVIDER_RU_GOVERNMENT",
            "PROVIDER_RU_FNS_KLADR",
            "PROVIDER_BR_GOVERNMENT",
            "PROVIDER_BR_INSTITUTO_BRASILEIRO_DO_MEIO_AMBIENTE_E_DOS_RECURSOS_NATURAIS_RENOVAVEIS",
            "PROVIDER_BR_MINISTERIO_DO_MEIO_AMBIENTE",
            "PROVIDER_BR_AGENCIA_NACIONAL_DE_AGUAS",
            "PROVIDER_BR_INSTITUTO_BRASILEIRO_DE_GEOGRAFIA_E_ESTATISTICA",
            "PROVIDER_BR_FUNDACAO_NACIONAL_DO_INDIO",
            "PROVIDER_BR_DEPARTAMENTO_NACIONAL_DE_INFRAESTRUTURA_DE_TRANSPORTES",
            "PROVIDER_AZAVEA",
            "PROVIDER_NORTHSTAR",
            "PROVIDER_COMMEDI",
            "PROVIDER_NEXUS_GEOGRAFICS",
            "PROVIDER_INFOERA",
            "PROVIDER_AD_GOVERNMENT",
            "PROVIDER_AD_AREA_DE_CARTOGRAFIA",
            "PROVIDER_MAXXIMA",
            "PROVIDER_SI_GOVERNMENT",
            "PROVIDER_SI_AGENCY_FOR_ENVIRONMENT",
            "PROVIDER_TRANSPORT_HI_TECH_CONSULTANTS",
            "PROVIDER_L1_TECHNOLOGIES",
            "PROVIDER_TELEMEDIA",
            "PROVIDER_CDCOM_PROGOROD",
            "PROVIDER_MIT_CITYGUIDE",
            "PROVIDER_SUNCART",
            "PROVIDER_MICROMAPPER",
            "PROVIDER_RICHI",
            "PROVIDER_FORUM44",
            "PROVIDER_SEAT",
            "PROVIDER_VALASSIS",
            "PROVIDER_NAVICOM",
            "PROVIDER_COLTRACK",
            "PROVIDER_PSMA_AUSTRALIA",
            "PROVIDER_PT_DUTA_ASTAKONA_GIRINDA",
            "PROVIDER_CA_GOVERNMENT",
            "PROVIDER_STATISTICS_CANADA",
            "PROVIDER_TOCTOC",
            "PROVIDER_RMSI",
            "PROVIDER_TRUE_TECHNOLOGY",
            "PROVIDER_INCREMENT_P_CORPORATION",
            "PROVIDER_GOJAVAS",
            "PROVIDER_GEOINFORMATION_GROUP",
            "PROVIDER_CYBERSOFT",
            "PROVIDER_TSENTR_EFFEKTIVNYKH_TEKHNOLOGIY",
            "PROVIDER_EE_GOVERNMENT",
            "PROVIDER_EE_MAA_AMET",
            "PROVIDER_GASBUDDY",
            "PROVIDER_DK_GOVERNMENT",
            "PROVIDER_DK_GEODATASTYRELSEN",
            "PROVIDER_MURCIA_REGION_GOVERNMENT",
            "PROVIDER_CORREIOS",
            "PROVIDER_WEST_WORLD_MEDIA",
            "PROVIDER_INTERNATIONAL_MAPPING_ASSOCIATION",
            "PROVIDER_MEDICARE",
            "PROVIDER_POLARIS",
            "PROVIDER_TW_GOVERNMENT",
            "PROVIDER_TW_MINISTRY_OF_THE_INTERIOR_SURVEYING_AND_MAPPING_CENTER",
            "PROVIDER_NORDECA",
            "PROVIDER_AFRIMAPPING",
            "PROVIDER_OVERDRIVE",
            "PROVIDER_PROVIDER_NETWORK_DIRECTORIES",
            "PROVIDER_BR_MINISTERIO_DA_SAUDE",
            "PROVIDER_DIGITAL_EGYPT",
            "PROVIDER_INRIX",
            "PROVIDER_ARPINDO",
            "PROVIDER_IT_GOVERNMENT",
            "PROVIDER_ISTITUTO_GEOGRAFICO_MILITARE",
            "PROVIDER_EAST_END_GROUP",
            "PROVIDER_INGEOLAN",
            "PROVIDER_SEMACONNECT",
            "PROVIDER_BLINK",
            "PROVIDER_EVGO",
            "PROVIDER_CHARGEPOINT",
            "PROVIDER_TPL_TRAKKER",
            "PROVIDER_OI",
            "PROVIDER_MAPARADAR",
            "PROVIDER_SINGAPORE_POST",
            "PROVIDER_CHARGEMASTER",
            "PROVIDER_TESLA",
            "PROVIDER_VISICOM",
            "PROVIDER_GEOLYSIS",
            "PROVIDER_ZEPHEIRA",
            "PROVIDER_HUBJECT",
            "PROVIDER_PODPOINT",
            "PROVIDER_CHARGEFOX",
            "PROVIDER_KR_GOVERNMENT",
            "PROVIDER_KR_MOLIT",
            "PROVIDER_KR_MINISTRY_OF_THE_INTERIOR_AND_SAFETY",
            "PROVIDER_CRITCHLOW",
            "PROVIDER_EIFRIG",
            "PROVIDER_GIREVE",
            "PROVIDER_CN_NAVINFO",
            "PROVIDER_JAPAN_CHARGE_NETWORK",
            "PROVIDER_NOBIL",
            "PROVIDER_INDIA_BANKS",
            "PROVIDER_INDONESIA_ELECTION_KPU",
            "PROVIDER_CAREERS360",
            "PROVIDER_SOURCE_LONDON",
            "PROVIDER_EVBOX",
            "PROVIDER_JP_GOVERNMENT",
            "PROVIDER_JP_MINISTRY_OF_THE_ENVIRONMENT",
            "PROVIDER_YUMYUM",
            "PROVIDER_HWW_AUSTRALIA",
            "PROVIDER_CINERGY",
            "PROVIDER_MTIME",
            "PROVIDER_KULTUNAUT",
            "PROVIDER_BLITZ",
            "PROVIDER_PIA",
            "PROVIDER_INTERPARK",
            "PROVIDER_CINEMA_ONLINE",
            "PROVIDER_BELBIOS",
            "PROVIDER_MOVIESEER",
            "PROVIDER_SODAMEDYA",
            "PROVIDER_ATMOVIES",
            "PROVIDER_HOTELBEDS",
            "PROVIDER_VERICRED",
            "PROVIDER_CIRRANTIC",
            "PROVIDER_GOGO_LABS",
            "PROVIDER_ELECTRIFY_AMERICA",
            "PROVIDER_CMS_MPPUF",
            "PROVIDER_DIGIROAD",
            "PROVIDER_KONTEX_GEOMATICS",
            "PROVIDER_NZ_GOVERNMENT",
            "PROVIDER_NZ_LINZ",
            "PROVIDER_NZ_DOC",
            "PROVIDER_FASTNED",
            "PROVIDER_DESTINY_CS",
            "PROVIDER_IONITY",
            "PROVIDER_EV_CONNECT",
            "PROVIDER_PANPAGES",
            "PROVIDER_ETECNIC",
            "PROVIDER_VOLTA",
            "PROVIDER_NISSAN_MEXICO",
            "PROVIDER_BMW_GROUP_LATIN_AMERICA",
            "PROVIDER_FEDERAL_ELECTRICITY_COMMISSION_MEXICO",
            "PROVIDER_VOLVO_CARS_BRASIL",
            "PROVIDER_CHARGE_AND_PARKING",
            "PROVIDER_DEDUCE_TECHNOLOGIES",
            "PROVIDER_SK_TELECOM",
            "PROVIDER_ECO_MOVEMENT",
            "PROVIDER_GOOGLE_GMS",
            "PROVIDER_EASYWAY",
            "PROVIDER_PHYSICIAN_COMPARE",
            "PROVIDER_HOSPITAL_COMPARE",
            "PROVIDER_ENDOLLA_BARCELONA",
            "PROVIDER_BE_CHARGE",
            "PROVIDER_ONE_NETWORK",
            "PROVIDER_CARENAV_DUPLEX",
            "PROVIDER_CARENAV_POI",
            "PROVIDER_IN_GOVERNMENT",
            "PROVIDER_SURVEY_OF_INDIA",
            "PROVIDER_E_ON",
            "PROVIDER_ELECTRIFY_CANADA",
            "PROVIDER_GRIDCARS",
            "PROVIDER_DRIVECO",
            "PROVIDER_GREEN_ACTION_STUDIOS",
            "PROVIDER_GREEN_ACTION_STUDIO",
            "PROVIDER_EVINY",
            "PROVIDER_MASTERCARD",
            "PROVIDER_VATTENFALL",
            "PROVIDER_VIETGIS",
            "PROVIDER_UNITE",
            "PROVIDER_NEOGY",
            "PROVIDER_AMPUP",
            "PROVIDER_LOOP",
            "PROVIDER_ZEST",
            "PROVIDER_EZVOLT",
            "PROVIDER_JOLT",
            "PROVIDER_CHARGESMITH",
            "PROVIDER_PLUGO",
            "PROVIDER_ELECTRIC_ERA",
            "PROVIDER_FLO",
            "PROVIDER_DIGITAL_CHARGING_SOLUTIONS",
            "PROVIDER_ELECTRIC_PE",
            "PROVIDER_PLUGSURFING",
            "PROVIDER_ATHER"
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "ABSTRACT The root of all provider types. This should never be present on an actual feature, but can be useful when calling InCategory.",
            "not actually a legal value, used as sentinel",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "All new \"Google\" provider entries must be full ints. The next available ID is: 0x111730C2",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "This is an internal *only* provider meant for sending wipeout requests to mapfacts.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Never rely on source infos with this provider to identify whether or not a feature is a Prominent Place! Instead, use the proper API, localsearch_clustering::QualityTierHelper::IsProminentPlace().",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Shopping Attributes Discovery",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "The next new \"Google\" provider entries should be placed above.",
            "UMBRELLA",
            "",
            "",
            "",
            "This is a testing provider for teams that wish to integrate with components of the Geo Data Infrastructure that require a valid provider. No production data should ever be sent using this provider.",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "UMBRELLA",
            "0x1117F must not be used, since its range extends the PROVIDER_GOOGLE hierarchy.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Deprecated in favor of PROVIDER_GOOGLE_STRUCTURED_DATA (for attributes) and PROVIDER_GOOGLE_GEO_TIGER (for categories).",
            "",
            "0x1117FF should not be used, since its range further extends the PROVIDER_GOOGLE hierarchy. aka Local AI.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "No data is obtained from this provider. It is only used to identify features that must be served on MapMaker.",
            "",
            "",
            "",
            "",
            "",
            "",
            "0x1117FFF should not be used, since its range further extends the PROVIDER_GOOGLE hierarchy. Synthetically generated areas (sublocalities/neighborhoods/ postal codes/etc) based on dropped terms from approximate geocoding. More info on go/syntheticareas.",
            "",
            "",
            "",
            "Similar to Google Transit, a provider that aggregates positions of bicycle rental points that we have agreements with to show on maps",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "This range has been depleted. For new Ids see PROVIDER_GOOGLE_SUBRANGE above.",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Small Scale International Boundary Lines",
            "",
            "NOAA",
            "PGC",
            "USDA",
            "National Provider Identifier Registry",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "old name for PROVIDER_NAVIGO",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "See b/33687395",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "UMBRELLA",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "IBAMA",
            "MMA",
            "ANA",
            "IBGE",
            "FUNAI",
            "DNIT",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "Department of Cartography",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "0x12 and 0x120 are not to be used. OOO CET",
            "ABSTRACT",
            "Estonian Land Board",
            "",
            "ABSTRACT",
            "Danish Geodata Agency",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "Ministry of land, infrastructure and transport, 국토교통부, Guktogyotongbu",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Use PROVIDER_FI_NATIONAL_ROAD_ADMINISTRATION.",
            "",
            "ABSTRACT",
            "Land Information New Zealand",
            "NZ Department of Conservation",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "UMBRELLA",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Note: Next available value is 0x1277."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeostoreKnowledgeGraphReferenceProto": {
      "description": "The reference to an entity in the KnowledgeGraph. For details on the KnowledgeGraph see http://goto/kg.",
      "id": "GeostoreKnowledgeGraphReferenceProto",
      "properties": {
        "id": {
          "description": "KG Identifier (MID). For details, see http://go/ke-bg-knowledge-graph#mids.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeostoreNameProto": {
      "description": "A name for a Feature (street name, point of interest, city, building, etc). We currently use NameProto for two essentially disjoint purposes: 1. Common names, which can be language-specific, or have other kinds of variations. 2. Opaque IDs, such as postal codes, which only have the `text` field set, and potentially some flags. This includes internal-only features like template ids. Each NameProto representing a common name corresponds to an assertion that a fluent speaker or writer of a language would recognize NameProto.text to name the given feature in that language. As such, NameProtos are stored in a repeated field, often having: 1. multiple names with the same text and varying languages, and 2. multiple names with the same language and varying texts.",
      "id": "GeostoreNameProto",
      "properties": {
        "flag": {
          "description": "clang-format on The set of flags that apply to this name.",
          "items": {
            "enum": [
              "FLAG_ANY",
              "FLAG_IN_LOCAL_LANGUAGE",
              "FLAG_PREFERRED",
              "FLAG_OFFICIAL",
              "FLAG_OBSCURE",
              "FLAG_ON_SIGNS",
              "FLAG_EXIT_NAME_NUMBER",
              "FLAG_EXIT_NAME",
              "FLAG_INTERCHANGE_NAME",
              "FLAG_EXIT_NUMBER",
              "FLAG_INTERCHANGE_NUMBER",
              "FLAG_TRANSIT_HEADSIGN",
              "FLAG_CONNECTS_DIRECTLY",
              "FLAG_CONNECTS_INDIRECTLY",
              "FLAG_INTERSECTION_NAME",
              "FLAG_VANITY",
              "FLAG_ROUTE_NUMBER",
              "FLAG_COUNTRY_CODE_2",
              "FLAG_ABBREVIATED",
              "FLAG_ID",
              "FLAG_DESIGNATED_MARKET_AREA_ID",
              "FLAG_IATA_ID",
              "FLAG_ICAO_ID",
              "FLAG_ISO_3166_2",
              "FLAG_COUNTRY_SPECIFIC_ID",
              "FLAG_LANGUAGE_CODE",
              "FLAG_TIMEZONE_ID",
              "FLAG_PHONE_NUMBER_PREFIX",
              "FLAG_PHONE_NUMBER_AREA_CODE",
              "FLAG_TRANSLITERATED",
              "FLAG_NOT_ON_SIGNS",
              "FLAG_NOT_IN_LOCAL_LANGUAGE",
              "FLAG_ROUNDABOUT_ROUTE",
              "FLAG_NEVER_DISPLAY",
              "FLAG_BICYCLE_ROUTE",
              "FLAG_MACHINE_GENERATED",
              "FLAG_SUSPICIOUS"
            ],
            "enumDeprecated": [
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              true,
              true,
              false,
              false,
              false,
              false,
              false,
              true
            ],
            "enumDescriptions": [
              "ABSTRACT",
              "This name is in one of the local languages. A local language is one readable by local people, where all language/script/region subtags in the language field are local. E.g. \"ru\" is local in Russia, but \"ru-Latn\" (transliterated in Latin script) is not local. This is the opposite of FLAG_NOT_IN_LOCAL_LANGUAGE. In general, a given name should have either FLAG_IN_LOCAL_LANGUAGE or FLAG_NOT_IN_LOCAL_LANGUAGE specified. Importers that are unsure should not set either flag. It doesn't make sense to set this flag unless you also specify a language. NOTE: unlike most other flags in this enumeration, this flag has to do with the language field, NOT to the text (and {raw,short}_text fields).",
              "This is the most commonly recognized name for this feature (for a given language, when languages apply). This flag is not compatible with the following flags: - FLAG_NEVER_DISPLAY - FLAG_OBSCURE",
              "This name is officially recognized by the government. This flag is not compatible with FLAG_SUSPICIOUS.",
              "This name is not commonly known. This flag is used on names that are not commonly known, or not \"standard\", but which we wish to have so clients can search on them. An example would be \"Philly\" instead of \"Philadelphia\".",
              "ABSTRACT",
              "This name is an exit name/number found on signs.",
              "This flag is used to differentiate exit names from exit numbers on signs that have both.",
              "The highway sign is labeling a highway interchange instead of an exit. In several European countries interchanges are differentiated from highway exits.",
              "This flag is used to differentiate exit numbers from exit names on signs that have both. This flag is not compatible with FLAG_ROUTE_NUMBER.",
              "The highway sign is labeling a highway interchange the same manner as FLAG_INTERCHANGE_NAME.",
              "The headsign of a transit vehicle, often the name of the destination.",
              "The road sign target is directly connected (e.g., at end of ramp).",
              "The road sign target is not directly connected (e.g., must travel some additional distance).",
              "This name is an intersection name found on signs. Usually we can just use the name of a TYPE_INTERSECTION_GROUP feature. However, there are road signs on some intersections in Japan, especially in Hokkaido region where the intersection name is considered \"directional\" (i.e. an intersection could have multiple names depending on directions drivers or pedestrians approach from). Many people think of them as \"intersection names\", but that's not really what they are. We want to model them as road signs, because that's really what they are. This flag is supposed to be used by Pathfinder to generate the appropriate maneuver texts where such a named intersection is involved.",
              "This is a vanity name (usually an alternate name for a section of road in honor of some person).",
              "This name is a route number from an official numbering system for highways or similar routes (like bicycle routes). Street names (even numbered ones like in Manhattan) are excluded. The name (both text and short_text) should follow a strictly-defined format determined by the official numbering system. Route numbers may be assigned to segments on city streets as well as highways. (US-101 passing through San Francisco is an example that has both.) Historic route names that are no longer part of an official numbering system (like the former US-66) are not route numbers. This flag is not compatible with FLAG_EXIT_NUMBER.",
              "This name is a two-letter ISO 3166-1 country code. It has code 0x81 instead of 0x8 for historical reasons (FLAG_COUNTRY_CODE and FLAG_COUNTRY_CODE_3 were removed in the belief that we only want one way to represent a country code in the Geo Schema).",
              "An abbreviated version of the name, for example \"CA\" for California. This flag should be used for postal abbreviations that one would expect to see in an address. It should also be used for names where one of the component words is abbreviated (e.g. \"Mass.\" for Massachusetts, \"NWFP\" for the North-West Frontier Province in Pakistan, or \"L\" for the Lobby level in a building). Shortened forms of names (e.g. \"Kingston\" rather than \"Kingston-upon-Hull\") should be marked obscure rather than abbreviated. This flag should be used for names that are feature specific abbreviations. For shortened name versions based on regular, per-term transformations (ex: '1st Street' -> '1st St'), use the short_text field instead.",
              "ABSTRACT",
              "This name is a Designated Market Area ID number (ex: 501)",
              "This name is a three-letter IATA airport code (ex SFO, ZRH).",
              "This name is a four-letter ICAO airport code (ex KSFO, LSZH).",
              "This name is the ISO 3166-2 country subdivision code.",
              "This name is the country specific ID. For example, China government specifies an admin code for each administrative area (province, city and district).",
              "This name is an IETF BCP 47 language code, for example \"fr-CA\". Previously used for names of locales. See locale.proto for new way of defining this information.",
              "This name is a timezone identifier in the Olson database, for example \"Europe/Zurich\". All timezones have an Olson identifier, understood by POSIX and Google's i18n/identifiers libraries. This flag applies only to features of TYPE_TIMEZONE type.",
              "This name is the prefix for a phone number, starting with + and followed by a country code. This flag applies only to features of TYPE_PHONE_NUMBER_PREFIX type and at most one name should have this flag set.",
              "This name is the commonly used name for the area code of a phone number, including the national prefix if applicable. This flag applies only to features of TYPE_PHONE_NUMBER_AREA_CODE type and at most one name should have this flag set.",
              "The flag used to indicate the name was transliterated from some other character set. For example, this flag would be set on names transliterated from the Cyrillic or Greek alphabets to a Latin alphabet. The correct approach is to use the Google III language code to specify the appropriate language. For example, Greek transliterated into a Latin alphabet should have a language code of \"el-Latn\".",
              "There are two kinds of street signs: \"location signs\" and \"guidance signs\". Location signs are the ones you see that tell you where you are. \"Ah, I'm on 85th Street and I'm crossing 6th Avenue.\" Guidance signs are the ones that give you hints about how to get where you want to go. \"Ah, I should go that way to get on I-5 to Seattle.\" This flag is talking about location signs. You'll find this flag on route names when then name is never posted on location signs. This flag is not compatible with flags in the FLAG_ON_SIGNS category.",
              "This name is not in one of the local languages. A local language is one readable by local people, where all language/script/region subtags in the language field are local. E.g. \"ru\" is local in Russia, but \"ru-Latn\" (transliterated in Latin script) is not local. This is the opposite of FLAG_IN_LOCAL_LANGUAGE. In general, a given name should have either FLAG_IN_LOCAL_LANGUAGE or FLAG_NOT_IN_LOCAL_LANGUAGE specified. Importers that are unsure should not set either flag. It doesn't make sense to set this flag unless you also specify a language. NOTE: unlike most other flags in this enumeration, this flag has to do with the language field, NOT to the text (and {raw,short}_text fields).",
              "This flag is set on routes attached to roundabout segments if and only if this name does not appear on any of the segments incident on the roundabout. This flag can be used by clients to determine which names on roundabouts are more useful than others when displaying to users.",
              "Never display this name to a user. This flag is typically used for politically sensitive names such as \"Taiwan, Province of China\". Any feature which has a name with this flag should have another name without it so we have something to display to the user.",
              "Routes with these names are common bicycle routes. This includes bicycle trails and routes along shared roadways to popular destinations for cyclists. Unnamed bicycle routes along named shared roadways should not have names of this type. This flag exists so that we can avoid showing bicycle route names in driving directions, while still showing them in bicycling directions.",
              "This name is generated automatically by the transliteration pipeline based on an existing name in a different language. Contact Maps Translation team (go/maps-translation) for details.",
              "This name may not be a correct name for a feature. It communicates to clients that the name may not be trustworthy. Examples are names of features that are too general (\"swimming pool\", \"hardware store\" etc) or those that incorrectly match names of prominent political features (businesses, transit stations etc named after sublocalities). This flag is not compatible with FLAG_OFFICIAL."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "language": {
          "description": "The external form of a Google International Identifiers Initiative (III) LanguageCode object. See google3/i18n/identifiers/languagecode.h for details. These strings should be treated as opaque blobs. You can use LanguageCodeConverter::FromOther to convert the string to a LanguageCode reference. You can then call methods on the LanguageCode class to extract language/script/region subtags (if any). See also http://g3doc/i18n/identifiers/g3doc/using-iii. We place extra restrictions on languages in addition to what the III library requires. See go/geo-schema-reference/feature-properties/languages. This field may be missing if the name does not have a concept of language but should be set if the language is unknown.",
          "type": "string"
        },
        "metadata": {
          "$ref": "GeostoreFieldMetadataProto",
          "description": "Field-level metadata for this name. NOTE: there are multiple NameProto fields in the Geo Schema. Metadata here is only expected to be present on FeatureProto.name[]."
        },
        "rawText": {
          "deprecated": true,
          "description": "** DEPRECATED ** The name text provided in the original source data (UTF-8 encoding). This is the text provided in the source data unmodified with the exception of being converted to UTF-8 and stripping extra leading, trailing and duplicate whitespaces (if necessary).",
          "type": "string"
        },
        "shortText": {
          "description": "The short name text (UTF-8 encoding). Acronyms/abbreviations should be consistently used, for example \"NE 57th St\" rather than \"Northeast 57th Street\", \"N.E 57th St.\" or some other variant. This field should be populated with the chosen canonical version of the shortened name, based on per-term transformations. For feature specific abbreviations (such as 'CA' for 'California'), one should define a separate name with FLAG_ABBREVIATED set. For other variants of the shortened name that are not the canonical one, devise client based logic (ex: query rewriting rules).",
          "type": "string"
        },
        "temporaryData": {
          "$ref": "MessageSet",
          "description": "A place for clients to attach arbitrary data to a name. Never set in MapFacts."
        },
        "text": {
          "description": "The name text (UTF-8 encoding). Acronyms/abbreviations should be fully expanded, for example \"Northeast 57th Street\" rather than \"NE 57th St\". They can be shortened at display or geocode time. This decision prevents ambiguity over such issues as whether \"St\" represents \"Street\" or \"Saint\". However, it pushes language-specific knowledge into code. We will have libraries and data files to contract acronyms/abbreviations at run-time.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeostorePointProto": {
      "id": "GeostorePointProto",
      "properties": {
        "latE7": {
          "format": "uint32",
          "type": "integer"
        },
        "lngE7": {
          "format": "uint32",
          "type": "integer"
        },
        "metadata": {
          "$ref": "GeostoreFieldMetadataProto",
          "description": "NOTE: If removing metadata, remove 'option objc_class_prefix = \"GS\";' together. See cl/189921100. Field-level metadata for this point. NOTE: there are multiple PointProto fields in the Geo Schema. Metadata here is only expected to be present on FeatureProto.point[] and FeatureProto.center."
        },
        "temporaryData": {
          "$ref": "MessageSet",
          "description": "A place for clients to attach arbitrary data to a point. Never set in MapFacts."
        }
      },
      "type": "object"
    },
    "GeostoreRectProto": {
      "description": "A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". The rectangle is considered to be a closed region, i.e. it includes its boundary. The latitude bounds must be in the range -90 to 90 degrees inclusive, and the longitude bounds must be in the range -180 to 180 degrees inclusive. Various cases include: - If lo == hi, the rectangle consists of a single point. - If lo.longitude > hi.longitude, the longitude range is \"inverted\" (the rectangle crosses the 180 degree longitude line). - If lo.longitude == -180 degrees and hi.longitude = 180 degrees, the rectangle includes all longitudes. - If lo.longitude = 180 degrees and hi.longitude = -180 degrees, the longitude range is empty. - If lo.latitude > hi.latitude, the latitude range is empty.",
      "id": "GeostoreRectProto",
      "properties": {
        "hi": {
          "$ref": "GeostorePointProto"
        },
        "lo": {
          "$ref": "GeostorePointProto"
        }
      },
      "type": "object"
    },
    "GetCustomerIndexStatsResponse": {
      "id": "GetCustomerIndexStatsResponse",
      "properties": {
        "averageIndexedItemCount": {
          "description": "Average item count for the given date range for which billing is done.",
          "format": "int64",
          "type": "string"
        },
        "stats": {
          "description": "Summary of indexed item counts, one for each day in the requested range.",
          "items": {
            "$ref": "CustomerIndexStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetCustomerQueryStatsResponse": {
      "id": "GetCustomerQueryStatsResponse",
      "properties": {
        "stats": {
          "items": {
            "$ref": "CustomerQueryStats"
          },
          "type": "array"
        },
        "totalQueryCount": {
          "description": "Total successful query count (status code 200) for the given date range.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCustomerSearchApplicationStatsResponse": {
      "description": "Response format for search application stats for a customer.",
      "id": "GetCustomerSearchApplicationStatsResponse",
      "properties": {
        "averageSearchApplicationCount": {
          "description": "Average search application count for the given date range.",
          "format": "int64",
          "type": "string"
        },
        "stats": {
          "description": "Search application stats by date.",
          "items": {
            "$ref": "CustomerSearchApplicationStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetCustomerSessionStatsResponse": {
      "id": "GetCustomerSessionStatsResponse",
      "properties": {
        "stats": {
          "items": {
            "$ref": "CustomerSessionStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetCustomerUserStatsResponse": {
      "id": "GetCustomerUserStatsResponse",
      "properties": {
        "stats": {
          "items": {
            "$ref": "CustomerUserStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetDataSourceIndexStatsResponse": {
      "id": "GetDataSourceIndexStatsResponse",
      "properties": {
        "averageIndexedItemCount": {
          "description": "Average item count for the given date range for which billing is done.",
          "format": "int64",
          "type": "string"
        },
        "stats": {
          "description": "Summary of indexed item counts, one for each day in the requested range.",
          "items": {
            "$ref": "DataSourceIndexStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetSearchApplicationQueryStatsResponse": {
      "description": "Response format for getting query stats for a search application between given dates.",
      "id": "GetSearchApplicationQueryStatsResponse",
      "properties": {
        "stats": {
          "description": "Query stats per date for a search application.",
          "items": {
            "$ref": "SearchApplicationQueryStats"
          },
          "type": "array"
        },
        "totalQueryCount": {
          "description": "Total successful query count (status code 200) for the given date range.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetSearchApplicationSessionStatsResponse": {
      "id": "GetSearchApplicationSessionStatsResponse",
      "properties": {
        "stats": {
          "items": {
            "$ref": "SearchApplicationSessionStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetSearchApplicationUserStatsResponse": {
      "id": "GetSearchApplicationUserStatsResponse",
      "properties": {
        "stats": {
          "items": {
            "$ref": "SearchApplicationUserStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HtmlOperatorOptions": {
      "description": "Used to provide a search operator for html properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "HtmlOperatorOptions",
      "properties": {
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the html property. For example, if operatorName is *subject* and the property's name is *subjectLine*, then queries like *subject:<value>* show results only where the value of the property named *subjectLine* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator return all items where *<value>* matches the value of any html properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HtmlPropertyOptions": {
      "description": "The options for html properties.",
      "id": "HtmlPropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "HtmlOperatorOptions",
          "description": "If set, describes how the property should be used as a search operator."
        },
        "retrievalImportance": {
          "$ref": "RetrievalImportance",
          "description": "Indicates the search quality importance of the tokens within the field when used for retrieval. Can only be set to DEFAULT or NONE."
        }
      },
      "type": "object"
    },
    "HtmlValues": {
      "description": "List of html values.",
      "id": "HtmlValues",
      "properties": {
        "values": {
          "description": "The maximum allowable length for html values is 2048 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IPBlockInfoProto": {
      "id": "IPBlockInfoProto",
      "properties": {
        "asn": {
          "description": "ASN of the block. Only present when return_organisational is set in the request options.",
          "type": "string"
        },
        "carrierName": {
          "type": "string"
        },
        "cookiePopulation": {
          "deprecated": true,
          "format": "float",
          "type": "number"
        },
        "dnsDomain": {
          "description": "DNS and organisational info, only present when return_organisational is set in the request options. Currently (November 2010) this data comes from the raw Quova import.",
          "type": "string"
        },
        "homeIndicator": {
          "description": "True, if it is a home IP. Data is from Neustar.",
          "type": "boolean"
        },
        "ipsEstimate": {
          "description": "Day averages for this block of number of .. Currently (May 2011) not filled in. .. active IPs",
          "format": "float",
          "type": "number"
        },
        "isicCode": {
          "description": "ISIC code, data from Neustar.",
          "type": "string"
        },
        "lastChangedS": {
          "description": "Seconds since epoch any data constituting this block last changed. Currently (May 2011) not filled in.",
          "format": "int32",
          "type": "integer"
        },
        "naicsCode": {
          "description": "NAICS code, data from Neustar.",
          "type": "string"
        },
        "netstats": {
          "$ref": "NetStatsProto",
          "description": "Data from the NetDB project, see net/ipmap/..., only present when return_netstats is set in the request options."
        },
        "organisationName": {
          "type": "string"
        },
        "organizationType": {
          "description": "Neustar's organization_type data.",
          "type": "string"
        },
        "proxyClassification": {
          "$ref": "ProxyClassificationProto",
          "description": "Proxy classification of the block. Only present when return_proxy_classification is set in the request options."
        },
        "ranges": {
          "description": "For historical reasons, the 'ranges' field is repeated, but actually it occurs at most once. If present, the range is a set of consecutive IP addresses to which the IPGeo result (including the information in the IPBlockInfoProto as well as other info in the IPGeoResponseProto / LocationResult) applies. This means that when the netstats are present, this will be the intersection of the range from the ipgeo index with the range from the netstats index; when the proxy classification is present, this will be intersected with the IP range to which the proxy classification applies. Caveat: intersection with HHI (household income) IP range is currently not implemented.",
          "items": {
            "$ref": "IPRangeProto"
          },
          "type": "array"
        },
        "reallocFracEstimate": {
          "description": "Estimate of the fraction of IPs that get reallocated per day. Currently (May 2011) not filled in.",
          "format": "float",
          "type": "number"
        },
        "routingtype": {
          "description": "Routing type, only present if return_organisational is set in the request options. Currently (June 2012) this data is not filled in.",
          "enum": [
            "UNKNOWN",
            "INTERNATIONAL_PROXY",
            "MOBILE_GATEWAY"
          ],
          "enumDescriptions": [
            "",
            "ANONYMIZER = 2; AOLDIALUP = 3; AOLPOP = 4; AOLPROXY = 5; CACHE_PROXY = 6; FIXED = 7;",
            "POP = 10; REGIONAL_PROXY = 11; SATELLITE = 12; SUPERPOP = 13;"
          ],
          "type": "string"
        },
        "trafficEstimate": {
          "description": ".. queries",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "IPRangeProto": {
      "id": "IPRangeProto",
      "properties": {
        "packedIpBegin": {
          "description": "A contiguous range [begin, end] of IPv4 or IPv6 addresses in packed binary form. 4 or 16 bytes, big endian",
          "format": "byte",
          "type": "string"
        },
        "packedIpEnd": {
          "description": "inclusive",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IndexItemOptions": {
      "id": "IndexItemOptions",
      "properties": {
        "allowUnknownGsuitePrincipals": {
          "description": "Specifies if the index request should allow Google Workspace principals that do not exist or are deleted.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IndexItemRequest": {
      "id": "IndexItemRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "indexItemOptions": {
          "$ref": "IndexItemOptions"
        },
        "item": {
          "$ref": "Item",
          "description": "The name of the item. Format: datasources/{source_id}/items/{item_id}"
        },
        "mode": {
          "description": "Required. The RequestMode for this request.",
          "enum": [
            "UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "enumDescriptions": [
            "The priority is not specified in the update request. Leaving priority unspecified results in an update failure.",
            "For real-time updates.",
            "For changes that are executed after the response is sent back to the caller."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InitializeCustomerRequest": {
      "description": "Request message for `InitializeCustomer` method.",
      "id": "InitializeCustomerRequest",
      "properties": {},
      "type": "object"
    },
    "IntegerFacetingOptions": {
      "description": "Used to specify integer faceting options.",
      "id": "IntegerFacetingOptions",
      "properties": {
        "integerBuckets": {
          "description": "Buckets for given integer values should be in strictly ascending order. For example, if values supplied are (1,5,10,100), the following facet buckets will be formed {<1, [1,5), [5-10), [10-100), >=100}.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegerOperatorOptions": {
      "description": "Used to provide a search operator for integer properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "IntegerOperatorOptions",
      "properties": {
        "greaterThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the integer property using the greater-than operator. For example, if greaterThanOperatorName is *priorityabove* and the property's name is *priorityVal*, then queries like *priorityabove:<value>* show results only where the value of the property named *priorityVal* is greater than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the integer property using the less-than operator. For example, if lessThanOperatorName is *prioritybelow* and the property's name is *priorityVal*, then queries like *prioritybelow:<value>* show results only where the value of the property named *priorityVal* is less than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the integer property. For example, if operatorName is *priority* and the property's name is *priorityVal*, then queries like *priority:<value>* show results only where the value of the property named *priorityVal* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any String properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegerPropertyOptions": {
      "description": "The options for integer properties.",
      "id": "IntegerPropertyOptions",
      "properties": {
        "integerFacetingOptions": {
          "$ref": "IntegerFacetingOptions",
          "description": "If set, describes integer faceting options for the given integer property. The corresponding integer property should be marked isFacetable."
        },
        "maximumValue": {
          "description": "The maximum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values greater than the maximum are accepted and ranked with the same weight as items indexed with the maximum value.",
          "format": "int64",
          "type": "string"
        },
        "minimumValue": {
          "description": "The minimum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values less than the minimum are accepted and ranked with the same weight as items indexed with the minimum value.",
          "format": "int64",
          "type": "string"
        },
        "operatorOptions": {
          "$ref": "IntegerOperatorOptions",
          "description": "If set, describes how the integer should be used as a search operator."
        },
        "orderedRanking": {
          "description": "Used to specify the ordered ranking for the integer. Can only be used if isRepeatable is false.",
          "enum": [
            "NO_ORDER",
            "ASCENDING",
            "DESCENDING"
          ],
          "enumDescriptions": [
            "There is no ranking order for the property. Results are not adjusted by this property's value.",
            "This property is ranked in ascending order. Lower values indicate lower ranking.",
            "This property is ranked in descending order. Lower values indicate higher ranking."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegerValues": {
      "description": "List of integer values.",
      "id": "IntegerValues",
      "properties": {
        "values": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Interaction": {
      "description": "Represents an interaction between a user and an item.",
      "id": "Interaction",
      "properties": {
        "interactionTime": {
          "description": "The time when the user acted on the item. If multiple actions of the same type exist for a single user, only the most recent action is recorded.",
          "format": "google-datetime",
          "type": "string"
        },
        "principal": {
          "$ref": "Principal",
          "description": "The user that acted on the item."
        },
        "type": {
          "enum": [
            "UNSPECIFIED",
            "VIEW",
            "EDIT"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "This interaction indicates the user viewed the item.",
            "This interaction indicates the user edited the item."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Item": {
      "description": "Represents a single object that is an item in the search index, such as a file, folder, or a database record.",
      "id": "Item",
      "properties": {
        "acl": {
          "$ref": "ItemAcl",
          "description": "Access control list for this item."
        },
        "content": {
          "$ref": "ItemContent",
          "description": "Item content to be indexed and made text searchable."
        },
        "itemType": {
          "description": "The type for this item.",
          "enum": [
            "UNSPECIFIED",
            "CONTENT_ITEM",
            "CONTAINER_ITEM",
            "VIRTUAL_CONTAINER_ITEM"
          ],
          "enumDescriptions": [
            "",
            "An item that is indexed for the only purpose of serving information. These items cannot be referred in containerName or inheritAclFrom fields.",
            "An item that gets indexed and whose purpose is to supply other items with ACLs and/or contain other items.",
            "An item that does not get indexed, but otherwise has the same purpose as CONTAINER_ITEM."
          ],
          "type": "string"
        },
        "metadata": {
          "$ref": "ItemMetadata",
          "description": "The metadata information."
        },
        "name": {
          "description": "The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The maximum length is 1536 characters.",
          "type": "string"
        },
        "payload": {
          "description": "Additional state connector can store for this item. The maximum length is 10000 bytes.",
          "format": "byte",
          "type": "string"
        },
        "queue": {
          "description": "Queue this item belongs to. The maximum length is 100 characters.",
          "type": "string"
        },
        "status": {
          "$ref": "ItemStatus",
          "description": "Status of the item. Output only field."
        },
        "structuredData": {
          "$ref": "ItemStructuredData",
          "description": "The structured data for the item that should conform to a registered object definition in the schema for the data source."
        },
        "version": {
          "description": "Required. The indexing system stores the version from the datasource as a byte string and compares the Item version in the index to the version of the queued Item using lexical ordering. Cloud Search Indexing won't index or delete any queued item with a version value that is less than or equal to the version of the currently indexed item. The maximum length for this field is 1024 bytes. For information on how item version affects the deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com/cloud-search/docs/guides/operations).",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ItemAcl": {
      "description": "Access control list information for the item. For more information see [Map ACLs](https://developers.google.com/cloud-search/docs/guides/acls).",
      "id": "ItemAcl",
      "properties": {
        "aclInheritanceType": {
          "description": "Sets the type of access rules to apply when an item inherits its ACL from a parent. This should always be set in tandem with the inheritAclFrom field. Also, when the inheritAclFrom field is set, this field should be set to a valid AclInheritanceType.",
          "enum": [
            "NOT_APPLICABLE",
            "CHILD_OVERRIDE",
            "PARENT_OVERRIDE",
            "BOTH_PERMIT"
          ],
          "enumDescriptions": [
            "The default value when this item does not inherit an ACL. Use NOT_APPLICABLE when inheritAclFrom is empty. An item without ACL inheritance can still have ACLs supplied by its own readers and deniedReaders fields.",
            "During an authorization conflict, the ACL of the child item determines its read access.",
            "During an authorization conflict, the ACL of the parent item specified in the inheritAclFrom field determines read access.",
            "Access is granted only if this item and the parent item specified in the inheritAclFrom field both permit read access."
          ],
          "type": "string"
        },
        "deniedReaders": {
          "description": "List of principals who are explicitly denied access to the item in search results. While principals are denied access by default, use denied readers to handle exceptions and override the list allowed readers. The maximum number of elements is 100.",
          "items": {
            "$ref": "Principal"
          },
          "type": "array"
        },
        "inheritAclFrom": {
          "description": "The name of the item to inherit the Access Permission List (ACL) from. Note: ACL inheritance *only* provides access permissions to child items and does not define structural relationships, nor does it provide convenient ways to delete large groups of items. Deleting an ACL parent from the index only alters the access permissions of child items that reference the parent in the inheritAclFrom field. The item is still in the index, but may not visible in search results. By contrast, deletion of a container item also deletes all items that reference the container via the containerName field. The maximum length for this field is 1536 characters.",
          "type": "string"
        },
        "owners": {
          "description": "Optional. List of owners for the item. This field has no bearing on document access permissions. It does, however, offer a slight ranking boosts items where the querying user is an owner. The maximum number of elements is 5.",
          "items": {
            "$ref": "Principal"
          },
          "type": "array"
        },
        "readers": {
          "description": "List of principals who are allowed to see the item in search results. Optional if inheriting permissions from another item or if the item is not intended to be visible, such as virtual containers. The maximum number of elements is 1000.",
          "items": {
            "$ref": "Principal"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ItemContent": {
      "description": "Content of an item to be indexed and surfaced by Cloud Search. Only UTF-8 encoded strings are allowed as inlineContent. If the content is uploaded and not binary, it must be UTF-8 encoded.",
      "id": "ItemContent",
      "properties": {
        "contentDataRef": {
          "$ref": "UploadItemRef",
          "description": "Upload reference ID of a previously uploaded content via write method."
        },
        "contentFormat": {
          "enum": [
            "UNSPECIFIED",
            "HTML",
            "TEXT",
            "RAW"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "contentFormat is HTML.",
            "contentFormat is free text.",
            "contentFormat is raw bytes."
          ],
          "type": "string"
        },
        "hash": {
          "description": "Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
          "type": "string"
        },
        "inlineContent": {
          "description": "Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB).",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ItemCountByStatus": {
      "id": "ItemCountByStatus",
      "properties": {
        "count": {
          "description": "Number of items matching the status code.",
          "format": "int64",
          "type": "string"
        },
        "indexedItemsCount": {
          "description": "Number of items matching the status code for which billing is done. This excludes virtual container items from the total count. This count would not be applicable for items with ERROR or NEW_ITEM status code.",
          "format": "int64",
          "type": "string"
        },
        "statusCode": {
          "description": "Status of the items.",
          "enum": [
            "CODE_UNSPECIFIED",
            "ERROR",
            "MODIFIED",
            "NEW_ITEM",
            "ACCEPTED"
          ],
          "enumDescriptions": [
            "Input-only value. Used with Items.list to list all items in the queue, regardless of status.",
            "Error encountered by Cloud Search while processing this item. Details of the error are in repositoryError.",
            "Item has been modified in the repository, and is out of date with the version previously accepted into Cloud Search.",
            "Item is known to exist in the repository, but is not yet accepted by Cloud Search. An item can be in this state when Items.push has been called for an item of this name that did not exist previously.",
            "API has accepted the up-to-date data of this item."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ItemMetadata": {
      "description": "Available metadata fields for the item.",
      "id": "ItemMetadata",
      "properties": {
        "containerName": {
          "description": "The name of the container for this item. Deletion of the container item leads to automatic deletion of this item. Note: ACLs are not inherited from a container item. To provide ACL inheritance for an item, use the inheritAclFrom field. The maximum length is 1536 characters.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "The BCP-47 language code for the item, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. The maximum length is 32 characters.",
          "type": "string"
        },
        "contextAttributes": {
          "description": "A set of named attributes associated with the item. This can be used for influencing the ranking of the item based on the context in the request. The maximum number of elements is 10.",
          "items": {
            "$ref": "ContextAttribute"
          },
          "type": "array"
        },
        "createTime": {
          "description": "The time when the item was created in the source repository.",
          "format": "google-datetime",
          "type": "string"
        },
        "hash": {
          "description": "Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
          "type": "string"
        },
        "interactions": {
          "description": "A list of interactions for the item. Interactions are used to improve Search quality, but are not exposed to end users. The maximum number of elements is 1000.",
          "items": {
            "$ref": "Interaction"
          },
          "type": "array"
        },
        "keywords": {
          "description": "Additional keywords or phrases that should match the item. Used internally for user generated content. The maximum number of elements is 100. The maximum length is 8192 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mimeType": {
          "description": "The original mime-type of ItemContent.content in the source repository. The maximum length is 256 characters.",
          "type": "string"
        },
        "objectType": {
          "description": "The type of the item. This should correspond to the name of an object definition in the schema registered for the data source. For example, if the schema for the data source contains an object definition with name 'document', then item indexing requests for objects of that type should set objectType to 'document'. The maximum length is 256 characters.",
          "type": "string"
        },
        "searchQualityMetadata": {
          "$ref": "SearchQualityMetadata",
          "description": "Additional search quality metadata of the item"
        },
        "sourceRepositoryUrl": {
          "description": "Link to the source repository serving the data. Seach results apply this link to the title. Whitespace or special characters may cause Cloud Seach result links to trigger a redirect notice; to avoid this, encode the URL. The maximum length is 2048 characters.",
          "type": "string"
        },
        "title": {
          "description": "The title of the item. If given, this will be the displayed title of the Search result. The maximum length is 2048 characters.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the item was last modified in the source repository.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ItemStatus": {
      "description": "This contains item's status and any errors.",
      "id": "ItemStatus",
      "properties": {
        "code": {
          "description": "Status code.",
          "enum": [
            "CODE_UNSPECIFIED",
            "ERROR",
            "MODIFIED",
            "NEW_ITEM",
            "ACCEPTED"
          ],
          "enumDescriptions": [
            "Input-only value. Used with Items.list to list all items in the queue, regardless of status.",
            "Error encountered by Cloud Search while processing this item. Details of the error are in repositoryError.",
            "Item has been modified in the repository, and is out of date with the version previously accepted into Cloud Search.",
            "Item is known to exist in the repository, but is not yet accepted by Cloud Search. An item can be in this state when Items.push has been called for an item of this name that did not exist previously.",
            "API has accepted the up-to-date data of this item."
          ],
          "type": "string"
        },
        "processingErrors": {
          "description": "Error details in case the item is in ERROR state.",
          "items": {
            "$ref": "ProcessingError"
          },
          "type": "array"
        },
        "repositoryErrors": {
          "description": "Repository error reported by connector.",
          "items": {
            "$ref": "RepositoryError"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ItemStructuredData": {
      "description": "Available structured data fields for the item.",
      "id": "ItemStructuredData",
      "properties": {
        "hash": {
          "description": "Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
          "type": "string"
        },
        "object": {
          "$ref": "StructuredDataObject",
          "description": "The structured data object that should conform to a registered object definition in the schema for the data source."
        }
      },
      "type": "object"
    },
    "ListDataSourceResponse": {
      "id": "ListDataSourceResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "DataSource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListItemNamesForUnmappedIdentityResponse": {
      "id": "ListItemNamesForUnmappedIdentityResponse",
      "properties": {
        "itemNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListItemsResponse": {
      "id": "ListItemsResponse",
      "properties": {
        "items": {
          "items": {
            "$ref": "Item"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListQuerySourcesResponse": {
      "description": "List sources response.",
      "id": "ListQuerySourcesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "QuerySource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSearchApplicationsResponse": {
      "id": "ListSearchApplicationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "searchApplications": {
          "items": {
            "$ref": "SearchApplication"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListUnmappedIdentitiesResponse": {
      "id": "ListUnmappedIdentitiesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unmappedIdentities": {
          "items": {
            "$ref": "UnmappedIdentity"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationExtractorFeatureletAnnotationSet": {
      "description": "A set of featurelet annotations for an alternate policy.",
      "id": "LocationExtractorFeatureletAnnotationSet",
      "properties": {
        "annotations": {
          "description": "The featurelet annotations for the alternate policy.",
          "items": {
            "enum": [
              "TRIMMED_BY_QUALITY_FILTERING"
            ],
            "enumDescriptions": [
              "Indicate that a featurelet should not be used. This annotation is applied during ApplyQualityFiltering for feature \"trimming\" or added by the PolicyStore as a result of quality score calculation."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the alternate policy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationExtractorInterpretation": {
      "description": "An interpretation is a place on earth, an annotated query s-tree and a 'legend' grouping tokens into terms, and mapping those to the hierarchy of featurelets inside the location. An interpretation is returned as part of the LocationExtractionResponse and not meant to be used directly. Next tag: 15",
      "id": "LocationExtractorInterpretation",
      "properties": {
        "location": {
          "$ref": "LocationExtractorLocation",
          "description": "Location on Earth, containing featurelets ordered from most to least specific. These are referred to in the featurelet_index field below. In case of directions queries, this field contains departure location."
        },
        "query": {
          "description": "serialized s-expr annotated with :loc",
          "type": "string"
        },
        "term": {
          "items": {
            "$ref": "LocationExtractorInterpretationTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationExtractorInterpretationTerm": {
      "description": "This group provides details about what we found in the query as a set of non-overlapping 'terms', each referring to a separate political feature. E.g. query of \"Pizza near Mt View CA\" would (in one of the geocodes) contain two terms: \"Mt View\" and \"CA\". All terms are given in left-to-right order. Note that not all featurelets necessarily occur as a term. Some may have been inferred from the political hierarchy. E.g. in the example above there would be a featurelet for the US after the one for \"CA\".",
      "id": "LocationExtractorInterpretationTerm",
      "properties": {
        "featureletIndex": {
          "description": "index into location().featurelet() array (above).",
          "format": "int32",
          "type": "integer"
        },
        "tokenEnd": {
          "description": "1+last token covered by this term.",
          "format": "int32",
          "type": "integer"
        },
        "tokenStart": {
          "description": "These token indexes refer to the non-negated tokens of the query returned by the Interpretation. Note: That means you have to parse the query field with the SqueryParser, use QueryTreeUtils::FindOriginalNonNegatedWordNodes to get the original tokens, and use these 1-based indexes to retrieve the appropriate tokens from the result. You can NOT just split the original raw query on whitespace and use this as an offset. first token covered by this term.",
          "format": "int32",
          "type": "integer"
        },
        "unexpectedLanguageMatch": {
          "description": "Whether this term matched in a language that is \"unexpected\". For this purpose, expected languages are: request language, languages spoken in request country, English, unknown languages, and languages of the feature's country.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocation": {
      "description": "A Location message represents a geographical feature with an associated confidence level. Within a LocationExtractionServerResponse message, this message is used to specify possible locations of the user, and possible locations the user may be interested in. Next tag: 41",
      "id": "LocationExtractorLocation",
      "properties": {
        "addressRank": {
          "deprecated": true,
          "description": "Copy of FeatureProto->RankDetailsProto->address_rank",
          "format": "float",
          "type": "number"
        },
        "areaRank": {
          "deprecated": true,
          "description": "Copy of FeatureProto->RankDetailsProto->area_rank",
          "format": "float",
          "type": "number"
        },
        "boundingbox": {
          "$ref": "LocationExtractorLocationBoundingBox",
          "deprecated": true
        },
        "center": {
          "$ref": "LocationExtractorLocationCenter",
          "deprecated": true
        },
        "confidence": {
          "deprecated": true,
          "description": "Represents the Location Extraction Server's confidence that this Location is correct.",
          "format": "float",
          "type": "number"
        },
        "featurelet": {
          "items": {
            "$ref": "LocationExtractorLocationFeaturelet"
          },
          "type": "array"
        },
        "ipblockinfo": {
          "$ref": "IPBlockInfoProto",
          "description": "Information about an ip block, like range, speed etc."
        },
        "populationRank": {
          "deprecated": true,
          "description": "Copy of FeatureProto->RankDetailsProto->population_rank",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationBoundingBox": {
      "description": "Defines the bounding box for the area. The values specify a rectangle defined from low to high. Latitude and longitude (in degrees) x 10,000,000. We use sfixed32 (fixed-size int32) because they get transmitted using 4 bytes while int32 gets transmitted using 10 bytes.",
      "id": "LocationExtractorLocationBoundingBox",
      "properties": {
        "highLatitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "highLongitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "lowLatitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "lowLongitudeE7": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationCenter": {
      "description": "Latitude and longitude of the area center (in degrees) x 10,000,000",
      "id": "LocationExtractorLocationCenter",
      "properties": {
        "latitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "longitudeE7": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationExtractionResponse": {
      "description": "A LocationExtractionResponse message represents a response from the Location Extraction Server. If a location and / or area of interest was found, they will be included in the response. Next tag: 8",
      "id": "LocationExtractorLocationExtractionResponse",
      "properties": {
        "interpretation": {
          "description": "The request.max_interpretation() most likely interpretations of the input sexpr or raw_query. The ordering of interpretations is determined by request.scorer().",
          "items": {
            "$ref": "LocationExtractorInterpretation"
          },
          "type": "array"
        },
        "tainted": {
          "description": "True if the results are unreliable, for example due to a deadline being broken.",
          "type": "boolean"
        },
        "userLocation": {
          "description": "Represents the location of the end user, either from the ip or the user_address field in the request. For historical reasons, this is up to 3 separate locations that form a political hierarchy. See location/extractor/client/public/location.h:MergeLocations for a function to merge them into one. NOTE: the user_location does NOT influence the interpretations below. see the remarks about the ip field above. Conversely, this field is the ONLY field that changes depending on ip or user_address input.",
          "items": {
            "$ref": "LocationExtractorLocation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationFeaturelet": {
      "description": "A location must have one or more Featurelets, each of which correspond to a single GeoStore Feature. The first Featurelet is considered to be the primary component of the location, and any additional Featurelets should be considered supplementary. For example, the Location \"Brooklyn\" might have Featurelets: 1) Brooklyn (borough) 2) New York (city) 3) New York (state) 4) United States (country) LINT.IfChange",
      "id": "LocationExtractorLocationFeaturelet",
      "properties": {
        "additionalData": {
          "$ref": "MessageSet",
          "description": "A field to attach additional data about the feature. For example, the location extraction server uses this field to include the ads criteria id of the featurelet if available. As specified by MessageSet, all types within the set must be unique. Using the changelist number where the message was created is a good method of ensuring uniqueness."
        },
        "alternateAnnotations": {
          "description": "Alternate annotations on this featurelet.",
          "items": {
            "$ref": "LocationExtractorFeatureletAnnotationSet"
          },
          "type": "array"
        },
        "annotations": {
          "description": "Annotations applied to this featurelet. This field is modified by the policy store.",
          "items": {
            "enum": [
              "TRIMMED_BY_QUALITY_FILTERING"
            ],
            "enumDescriptions": [
              "Indicate that a featurelet should not be used. This annotation is applied during ApplyQualityFiltering for feature \"trimming\" or added by the PolicyStore as a result of quality score calculation."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "areaRank": {
          "description": "Copy of FeatureProto->RankDetailsProto->area_rank",
          "format": "float",
          "type": "number"
        },
        "boundingbox": {
          "$ref": "LocationExtractorLocationFeatureletBoundingBox"
        },
        "center": {
          "$ref": "LocationExtractorLocationFeatureletCenter"
        },
        "confidence": {
          "description": "Represents the Location Extraction Server's confidence that this featurelet is correct. This is currently not populated by LES. Oolong will parse the LES response for IP addreses and combine multiple locations into a single location with multiple featurelets. This confidence will be populated by Oolong by looking into confidences from each of the locations.",
          "format": "float",
          "type": "number"
        },
        "establishmentType": {
          "description": "This field contains original feature's establishment type if it had one.",
          "enum": [
            "TYPE_ANY",
            "TYPE_UNDEFINED",
            "TYPE_DEPRECATED_AVIATION",
            "TYPE_BUSINESS",
            "TYPE_TRAVEL_SERVICE",
            "TYPE_LODGING",
            "TYPE_HOTEL",
            "TYPE_RESORT",
            "TYPE_MOTEL",
            "TYPE_HOSTEL",
            "TYPE_GUESTHOUSE",
            "TYPE_VACATION_RENTAL",
            "TYPE_GAS_STATION",
            "TYPE_REST_AREA",
            "TYPE_CASH_MACHINE",
            "TYPE_CAR_RENTAL",
            "TYPE_CAR_REPAIR",
            "TYPE_TAXI_STAND",
            "TYPE_TRAVEL_AGENT",
            "TYPE_BICYCLE_RENTAL_POINT",
            "TYPE_ELECTRIC_VEHICLE_CHARGING_STATION",
            "TYPE_SHOPPING",
            "TYPE_GROCERY",
            "TYPE_ANTIQUES",
            "TYPE_APPAREL",
            "TYPE_GIFTS",
            "TYPE_JEWELRY",
            "TYPE_SPORTING_GOODS",
            "TYPE_VEHICLE",
            "TYPE_SHOPPING_CENTER",
            "TYPE_SUPERMARKET",
            "TYPE_FAIRGROUNDS",
            "TYPE_MARKET",
            "TYPE_PRODUCE_MARKET",
            "TYPE_FARMERS_MARKET",
            "TYPE_LIQUOR_STORE",
            "TYPE_SOUVENIR_SHOP",
            "TYPE_INDUSTRIAL",
            "TYPE_CONSTRUCTION",
            "TYPE_BUILDING_MATERIAL",
            "TYPE_SECURITY_PRODUCTS",
            "TYPE_MECHANICAL",
            "TYPE_TEXTILE",
            "TYPE_CHEMICAL",
            "TYPE_METAL",
            "TYPE_TRANSPORTATION",
            "TYPE_FREIGHT",
            "TYPE_AVIATION",
            "TYPE_COURIER",
            "TYPE_MOVING",
            "TYPE_PACKAGING",
            "TYPE_RAIL",
            "TYPE_PUBLIC_TRANSIT",
            "TYPE_WAREHOUSE",
            "TYPE_DEFENSE",
            "TYPE_AGRICULTURE",
            "TYPE_PLANTATION",
            "TYPE_PLANT_NURSERY",
            "TYPE_DESIGN",
            "TYPE_UTILITIES",
            "TYPE_POWER_PLANT",
            "TYPE_SEWAGE_TREATMENT_PLANT",
            "TYPE_WATER_TREATMENT_PLANT",
            "TYPE_SUBSTATION",
            "TYPE_MANUFACTURING",
            "TYPE_BIOTECH",
            "TYPE_MATERIALS",
            "TYPE_MINING",
            "TYPE_QUARRY",
            "TYPE_TANNERY",
            "TYPE_OIL_REFINERY",
            "TYPE_ADVERTISING_MARKETING",
            "TYPE_LEGAL",
            "TYPE_FAMILY_LAW",
            "TYPE_IP_LAW",
            "TYPE_LABOR_LAW",
            "TYPE_PERSONAL_INJURY_LAW",
            "TYPE_CRIMINAL_LAW",
            "TYPE_PERSONAL_FINANCE",
            "TYPE_LIFE_INSURANCE",
            "TYPE_LENDING",
            "TYPE_ACCOUNTING",
            "TYPE_INVESTING",
            "TYPE_BANKING",
            "TYPE_HEALTH",
            "TYPE_HEALTH_EQUIPMENT",
            "TYPE_NURSING",
            "TYPE_HEALTH_INSURANCE",
            "TYPE_HEALTH_FACILITY",
            "TYPE_DIAGNOSTIC_CENTER",
            "TYPE_HEALTH_RESOURCES",
            "TYPE_NUTRITION",
            "TYPE_VISION",
            "TYPE_COUNSELING",
            "TYPE_MASSAGE",
            "TYPE_BLOOD_BANK",
            "TYPE_HEARING",
            "TYPE_HOME_GARDEN",
            "TYPE_INTERIOR_DECOR",
            "TYPE_DOMESTIC_SERVICES",
            "TYPE_APPLIANCES",
            "TYPE_PEST_CONTROL",
            "TYPE_GARDENING",
            "TYPE_ELECTRONICS",
            "TYPE_COMPUTER",
            "TYPE_COMPUTER_HARDWARE",
            "TYPE_COMPUTER_SECURITY",
            "TYPE_COMPUTER_SOFTWARE",
            "TYPE_COMPUTER_SUPPORT",
            "TYPE_AUDIO_DEVICES",
            "TYPE_VIDEO_DEVICES",
            "TYPE_REAL_ESTATE",
            "TYPE_OFFICE_SERVICES",
            "TYPE_ENTERTAINMENT",
            "TYPE_GAMES",
            "TYPE_CASINO",
            "TYPE_LOTTO",
            "TYPE_VIDEO",
            "TYPE_CLUBS",
            "TYPE_DISCOTHEQUE",
            "TYPE_ANIMATION",
            "TYPE_MODELING",
            "TYPE_HUMOR",
            "TYPE_MOVIES",
            "TYPE_MOVIE_RENTAL",
            "TYPE_MOVIE_THEATER",
            "TYPE_MUSIC",
            "TYPE_RADIO",
            "TYPE_TV",
            "TYPE_BAR",
            "TYPE_PRINT_MEDIA",
            "TYPE_ADULT",
            "TYPE_SEXUAL_SERVICES",
            "TYPE_ANIMALS",
            "TYPE_PETS",
            "TYPE_FISHERY",
            "TYPE_ARTS",
            "TYPE_BOOKS",
            "TYPE_PERFORMING_ARTS",
            "TYPE_GALLERY",
            "TYPE_AUTOMOTIVE",
            "TYPE_PARTS",
            "TYPE_AUTO_FINANCE",
            "TYPE_AUTO_INSURANCE",
            "TYPE_RV",
            "TYPE_MOTORCYCLES",
            "TYPE_CARS",
            "TYPE_TRUCKS_SUVS",
            "TYPE_LICENSING",
            "TYPE_MAINTENANCE",
            "TYPE_PERSONAL_CARE",
            "TYPE_BODY_ART",
            "TYPE_COSMETICS",
            "TYPE_FITNESS",
            "TYPE_YOGA_CENTER",
            "TYPE_GYM",
            "TYPE_HAIR_CARE",
            "TYPE_SPA",
            "TYPE_BEAUTY_SALON",
            "TYPE_CORPORATE_EVENTS",
            "TYPE_HUMAN_RESOURCES",
            "TYPE_FOOD_AND_DRINK",
            "TYPE_BEVERAGE",
            "TYPE_RECIPES",
            "TYPE_COOKWARE",
            "TYPE_CULINARY",
            "TYPE_RETAIL",
            "TYPE_RESTAURANT",
            "TYPE_COFFEE",
            "TYPE_BAKERY",
            "TYPE_FOOD_CENTER",
            "TYPE_TEA",
            "TYPE_CAFE",
            "TYPE_WINERY",
            "TYPE_BREWERY",
            "TYPE_FAST_FOOD",
            "TYPE_FOOD_DELIVERY",
            "TYPE_INTERNET",
            "TYPE_WEB_DESIGN",
            "TYPE_WEB_HOSTING",
            "TYPE_WEB_SERVICES",
            "TYPE_LIFESTYLE",
            "TYPE_PHOTO_VIDEO",
            "TYPE_ACTIVITIES",
            "TYPE_BOATING",
            "TYPE_CYCLING",
            "TYPE_EQUESTRIAN",
            "TYPE_FISHING",
            "TYPE_HIKING",
            "TYPE_HUNTING",
            "TYPE_SWIMMING",
            "TYPE_GOLF",
            "TYPE_GOLF_COURSE",
            "TYPE_BASEBALL",
            "TYPE_BASKETBALL",
            "TYPE_HOCKEY",
            "TYPE_MOTOR_SPORTS",
            "TYPE_WINTER_SPORTS",
            "TYPE_FOOTBALL",
            "TYPE_SOCCER",
            "TYPE_ICE_SKATING",
            "TYPE_BOXING",
            "TYPE_CRICKET",
            "TYPE_ROWING",
            "TYPE_RUGBY",
            "TYPE_RACQUET_SPORTS",
            "TYPE_ROCK_CLIMBING",
            "TYPE_REFERENCES",
            "TYPE_MAPS",
            "TYPE_TIME",
            "TYPE_SCIENTIFIC_EQUIPMENT",
            "TYPE_TELECOMMUNICATIONS",
            "TYPE_EVENT_VENUE",
            "TYPE_BANQUET_HALL",
            "TYPE_CONFERENCE_HALL",
            "TYPE_WEDDING_HALL",
            "TYPE_EXHIBITION_HALL",
            "TYPE_COMMUNITY_CENTER",
            "TYPE_AUDITORIUM",
            "TYPE_FUNCTION_HALL",
            "TYPE_CONCERT_HALL",
            "TYPE_AMPHITHEATER",
            "TYPE_LAUNDRY",
            "TYPE_LAUNDROMAT",
            "TYPE_DRY_CLEANER",
            "TYPE_MORTUARY",
            "TYPE_REPAIR_AND_MAINTENANCE",
            "TYPE_GOVERNMENT",
            "TYPE_BORDER_CROSSING",
            "TYPE_CITY_HALL",
            "TYPE_COURTHOUSE",
            "TYPE_EMBASSY",
            "TYPE_LIBRARY",
            "TYPE_PRISON",
            "TYPE_TAX_OFFICE",
            "TYPE_PROSECUTORS_OFFICE",
            "TYPE_CONGRESS",
            "TYPE_TOWN_COUNCIL",
            "TYPE_CAPITOL_BUILDING",
            "TYPE_VOTING_FACILITY",
            "TYPE_CHECKPOINT",
            "TYPE_SCHOOL",
            "TYPE_UNIVERSITY",
            "TYPE_ORPHANAGE",
            "TYPE_KINDERGARTEN",
            "TYPE_DAYCARE",
            "TYPE_ACADEMY",
            "TYPE_TRADE_SCHOOL",
            "TYPE_SKILL_INSTRUCTION",
            "TYPE_EMERGENCY",
            "TYPE_HOSPITAL",
            "TYPE_PHARMACY",
            "TYPE_POLICE",
            "TYPE_FIRE",
            "TYPE_DOCTOR",
            "TYPE_DENTIST",
            "TYPE_VETERINARIAN",
            "TYPE_FIRST_AID",
            "TYPE_CIVIL_DEFENSE",
            "TYPE_TOURIST_DESTINATION",
            "TYPE_ECO_TOURIST_DESTINATION",
            "TYPE_BIRD_WATCHING",
            "TYPE_NATURE_RESERVE",
            "TYPE_MUSEUM",
            "TYPE_VISITOR_CENTER",
            "TYPE_OBSERVATION_DECK",
            "TYPE_OBSERVATORY",
            "TYPE_SCENIC_POINT",
            "TYPE_ZOO",
            "TYPE_AQUARIUM",
            "TYPE_AMUSEMENT_PARK",
            "TYPE_MONUMENT",
            "TYPE_PALACE",
            "TYPE_FORT",
            "TYPE_TOWER",
            "TYPE_LIGHTHOUSE",
            "TYPE_TEMPLE",
            "TYPE_CHURCH",
            "TYPE_GURUDWARA",
            "TYPE_HINDU_TEMPLE",
            "TYPE_MOSQUE",
            "TYPE_SYNAGOGUE",
            "TYPE_BUDDHIST_TEMPLE",
            "TYPE_JAIN_TEMPLE",
            "TYPE_BAHAI_TEMPLE",
            "TYPE_SHINTO_TEMPLE",
            "TYPE_MORMON_TEMPLE",
            "TYPE_SPORTS_COMPLEX",
            "TYPE_STADIUM",
            "TYPE_BOWLING",
            "TYPE_BADMINTON",
            "TYPE_TENNIS",
            "TYPE_TABLE_TENNIS",
            "TYPE_PARK",
            "TYPE_LOCAL_PARK",
            "TYPE_NATIONAL_PARK",
            "TYPE_US_NATIONAL_PARK",
            "TYPE_US_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_FOREST",
            "TYPE_NATIONAL_GRASSLAND",
            "TYPE_NATIONAL_PRESERVE",
            "TYPE_NATIONAL_RECREATION_AREA",
            "TYPE_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_HISTORIC_AREA",
            "TYPE_NATIONAL_SCENIC_AREA",
            "TYPE_NATIONAL_SCENIC_ROADWAY_AREA",
            "TYPE_NATIONAL_SCENIC_RIVER_AREA",
            "TYPE_PROVINCIAL_PARK",
            "TYPE_PROVINCIAL_FOREST",
            "TYPE_CAMPGROUNDS",
            "TYPE_WILDERNESS_AREA",
            "TYPE_WILDLIFE_AREA",
            "TYPE_BOTANICAL_GARDEN",
            "TYPE_GARDEN",
            "TYPE_ARBORETUM",
            "TYPE_MARINE_PROTECTED_AREA",
            "TYPE_AIRPORT",
            "TYPE_TARMAC",
            "TYPE_HELIPORT",
            "TYPE_SEAPLANE_BASE",
            "TYPE_MILITARY_AIRBASE",
            "TYPE_CEMETERY",
            "TYPE_MILITARY",
            "TYPE_ENCLOSED_TRAFFIC_AREA",
            "TYPE_PARKING",
            "TYPE_OFF_ROAD_AREA",
            "TYPE_POST_OFFICE",
            "TYPE_HOUSING_DEVELOPMENT",
            "TYPE_BRIDGE",
            "TYPE_ARCHAEOLOGICAL",
            "TYPE_HISTORICAL",
            "TYPE_RUINS",
            "TYPE_TUNNEL",
            "TYPE_RESIDENTIAL_DWELLING",
            "TYPE_DETACHED_DWELLING",
            "TYPE_ATTACHED_DWELLING",
            "TYPE_APARTMENT",
            "TYPE_GATED_COMMUNITY",
            "TYPE_RETIREMENT_HOME",
            "TYPE_TOLL_BOOTH",
            "TYPE_CULTURAL",
            "TYPE_CULTURAL_CENTER",
            "TYPE_OVERPASS",
            "TYPE_REST_ROOM",
            "TYPE_PUBLIC_PHONE",
            "TYPE_PHONE_BOOTH",
            "TYPE_MANNED_PCO",
            "TYPE_RESEARCH_INSTITUTE",
            "TYPE_NON_GOVERNMENTAL_ORGANIZATION",
            "TYPE_OFFICE_PARK",
            "TYPE_MEDITATION_CENTER",
            "TYPE_RELIGIOUS",
            "TYPE_MONASTERY",
            "TYPE_ASHRAM",
            "TYPE_PAGODA",
            "TYPE_MISSION",
            "TYPE_PILGRIM_DESTINATION",
            "TYPE_SOCIAL_SERVICE",
            "TYPE_RANGER_STATION",
            "TYPE_TRANSIT_STATION",
            "TYPE_BUS_STATION",
            "TYPE_TRAMWAY_STATION",
            "TYPE_TRAIN_STATION",
            "TYPE_SUBWAY_STATION",
            "TYPE_FERRY_TERMINAL",
            "TYPE_CABLE_CAR_STATION",
            "TYPE_GONDOLA_LIFT_STATION",
            "TYPE_FUNICULAR_STATION",
            "TYPE_HORSE_CARRIAGE_STATION",
            "TYPE_MONORAIL_STATION",
            "TYPE_SEAPORT",
            "TYPE_NATURAL_FEATURE",
            "TYPE_ELEVATED",
            "TYPE_PEAK"
          ],
          "enumDescriptions": [
            "ABSTRACT",
            "Can be used for features where no establishment information is available. For example, if an importer generates a TYPE_ESTABLISHMENT_BUILDING feature, but source data does not have any information on the actual purpose of the building, the importer should use TYPE_UNDEFINED for establishment type.",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Note: 0xF213F is reserved to extend TYPE_INDUSTRIAL",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "0xF6F is reserved and any new types should start with 0xF6F1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "State parks, county parks, city parks, wilderness areas. This also includes underwater preserves, wild and scenic rivers, etc. Should we have things like baseball diamonds?",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Wildlife management area. This includes preservation areas for fish, game, and birds.",
            "",
            "",
            "",
            "",
            "",
            "An airport is a location where aircraft such as fixed-wing aircraft, helicopters, and blimps takeoff and land. NOTE: TYPE_TARMAC establishment type has been deprecated in favor of TYPE_TARMAC feature type. Once all data is modeled using the new feature type, the entry below should be removed.",
            "DEPRECATED",
            "A heliport is a small airport suitable only for use by helicopters.",
            "A seaplane base is a special airport suitable for seaplanes.",
            "An airbase (sometimes referred to correctly as an airfield, military airport, or Royal Air Force Station or Air Force Station) is a military airfield that provides basing and support of military aircraft.",
            "",
            "",
            "The term \"enclosed traffic area\" is used extensively in Europe. It generally refers to a parking lot or other similar area through which traffic passes but are not generally considered to be a road. Another example is a piazza in an Italian town.",
            "Establishment TYPE_PARKING is used for parking lots or garages. The actual feature type can be TYPE_ESTABLISHMENT_GROUNDS or TYPE_ESTABLISHMENT_BUILDING to distinguish between those.",
            "",
            "",
            "In some country (like China), there will have a small area of housing development. Normally covers one or more city blocks.",
            "In the Australian data we get bridges as POIs effectively. We'd like to include them so we can mapsearch for \"Sydney Harbour Bridge\" and others. Many other data sets have bridges modeled directly as segments, and so don't require this.",
            "",
            "In some countries historical objects are well known and important.",
            "",
            "Feature must be TYPE_ESTABLISHMENT_GROUNDS.",
            "These types, when used with appropriate feature type (TYPE_ESTABLISHMENT_BUILDING, TYPE_ESTABLISHMENT_GROUNDS) can refer to a single building or a residential area (respectively).",
            "",
            "",
            "All multi-unit housing such as duplex, condominium, apartment belongs to this.",
            "",
            "",
            "In Korea most toll booths have their own names, and are often used as reference points. If an importer generates TYPE_TOLL_BOOTH establishment features with exact positions and names, then mapsearch will index them. Also this can be used to render them.",
            "",
            "",
            "An overpass, or flyover is a structure that passes over another road or railway.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Hierarchy of transit station types. See go/transit-schema for more details.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "featureId": {
          "$ref": "GeostoreFeatureIdProto",
          "description": "The GeoStore Feature ID for this feature. This field will be present when the featurelet was derived from or maps to an oyster feature."
        },
        "kgReference": {
          "$ref": "GeostoreKnowledgeGraphReferenceProto",
          "description": "The reference to an entity in the KnowledgeGraph."
        },
        "name": {
          "description": "Each Featurelet includes the list of names that are associated with the corresponding GeoStore Feature.",
          "items": {
            "$ref": "GeostoreNameProto"
          },
          "type": "array"
        },
        "populationRank": {
          "description": "Copy of FeatureProto->RankDetailsProto->population_rank",
          "format": "float",
          "type": "number"
        },
        "type": {
          "description": "The GeoStore Feature type.",
          "enum": [
            "TYPE_ANY",
            "TYPE_TRANSPORTATION",
            "TYPE_ROUTE",
            "TYPE_DEPRECATED_HIGHWAY_DO_NOT_USE",
            "TYPE_HIGHWAY",
            "TYPE_HIGHWAY_1",
            "TYPE_HIGHWAY_2",
            "TYPE_HIGHWAY_3",
            "TYPE_HIGHWAY_4",
            "TYPE_HIGHWAY_5",
            "TYPE_HIGHWAY_6",
            "TYPE_HIGHWAY_7",
            "TYPE_HIGHWAY_8",
            "TYPE_HIGHWAY_9",
            "TYPE_BICYCLE_ROUTE",
            "TYPE_TRAIL",
            "TYPE_SEGMENT",
            "TYPE_ROAD",
            "TYPE_RAILWAY",
            "TYPE_STANDARD_TRACK",
            "TYPE_JR_TRACK",
            "TYPE_NARROW_TRACK",
            "TYPE_MONORAIL_TRACK",
            "TYPE_SUBWAY_TRACK",
            "TYPE_LIGHT_RAIL_TRACK",
            "TYPE_BROAD_TRACK",
            "TYPE_HIGH_SPEED_RAIL",
            "TYPE_TROLLEY_TRACK",
            "TYPE_FERRY",
            "TYPE_FERRY_BOAT",
            "TYPE_FERRY_TRAIN",
            "TYPE_VIRTUAL_SEGMENT",
            "TYPE_INTERSECTION",
            "TYPE_TRANSIT",
            "TYPE_TRANSIT_STATION",
            "TYPE_BUS_STATION",
            "TYPE_TRAMWAY_STATION",
            "TYPE_TRAIN_STATION",
            "TYPE_SUBWAY_STATION",
            "TYPE_FERRY_TERMINAL",
            "TYPE_AIRPORT",
            "TYPE_AIRPORT_CIVIL",
            "TYPE_AIRPORT_MILITARY",
            "TYPE_AIRPORT_MIXED",
            "TYPE_HELIPORT",
            "TYPE_SEAPLANE_BASE",
            "TYPE_AIRSTRIP",
            "TYPE_CABLE_CAR_STATION",
            "TYPE_GONDOLA_LIFT_STATION",
            "TYPE_FUNICULAR_STATION",
            "TYPE_SPECIAL_STATION",
            "TYPE_HORSE_CARRIAGE_STATION",
            "TYPE_MONORAIL_STATION",
            "TYPE_SEAPORT",
            "TYPE_TRANSIT_STOP",
            "TYPE_TRANSIT_TRIP",
            "TYPE_TRANSIT_DEPARTURE",
            "TYPE_TRANSIT_LEG",
            "TYPE_TRANSIT_LINE",
            "TYPE_TRANSIT_AGENCY_DEPRECATED_VALUE",
            "TYPE_TRANSIT_TRANSFER",
            "TYPE_SEGMENT_PATH",
            "TYPE_ROAD_SIGN",
            "TYPE_INTERSECTION_GROUP",
            "TYPE_PATHWAY",
            "TYPE_RESTRICTION_GROUP",
            "TYPE_TOLL_CLUSTER",
            "TYPE_POLITICAL",
            "TYPE_COUNTRY",
            "TYPE_ADMINISTRATIVE_AREA",
            "TYPE_ADMINISTRATIVE_AREA1",
            "TYPE_US_STATE",
            "TYPE_GB_COUNTRY",
            "TYPE_JP_TODOUFUKEN",
            "TYPE_ADMINISTRATIVE_AREA2",
            "TYPE_GB_FORMER_POSTAL_COUNTY",
            "TYPE_GB_TRADITIONAL_COUNTY",
            "TYPE_ADMINISTRATIVE_AREA3",
            "TYPE_ADMINISTRATIVE_AREA4",
            "TYPE_ADMINISTRATIVE_AREA5",
            "TYPE_ADMINISTRATIVE_AREA6",
            "TYPE_ADMINISTRATIVE_AREA7",
            "TYPE_ADMINISTRATIVE_AREA8",
            "TYPE_ADMINISTRATIVE_AREA9",
            "TYPE_COLLOQUIAL_AREA",
            "TYPE_RESERVATION",
            "TYPE_LOCALITY",
            "TYPE_GB_POST_TOWN",
            "TYPE_JP_GUN",
            "TYPE_JP_SHIKUCHOUSON",
            "TYPE_JP_SUB_SHIKUCHOUSON",
            "TYPE_COLLOQUIAL_CITY",
            "TYPE_SUBLOCALITY",
            "TYPE_US_BOROUGH",
            "TYPE_GB_DEPENDENT_LOCALITY",
            "TYPE_JP_OOAZA",
            "TYPE_JP_KOAZA",
            "TYPE_JP_GAIKU",
            "TYPE_GB_DOUBLE_DEPENDENT_LOCALITY",
            "TYPE_JP_CHIBAN",
            "TYPE_JP_EDABAN",
            "TYPE_SUBLOCALITY1",
            "TYPE_SUBLOCALITY2",
            "TYPE_SUBLOCALITY3",
            "TYPE_SUBLOCALITY4",
            "TYPE_SUBLOCALITY5",
            "TYPE_NEIGHBORHOOD",
            "TYPE_CONSTITUENCY",
            "TYPE_DESIGNATED_MARKET_AREA",
            "TYPE_SCHOOL_DISTRICT",
            "TYPE_LAND_PARCEL",
            "TYPE_DISPUTED_AREA",
            "TYPE_POLICE_JURISDICTION",
            "TYPE_STATISTICAL_AREA",
            "TYPE_CONSTITUENCY_FUTURE",
            "TYPE_PARK",
            "TYPE_GOLF_COURSE",
            "TYPE_LOCAL_PARK",
            "TYPE_NATIONAL_PARK",
            "TYPE_US_NATIONAL_PARK",
            "TYPE_US_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_FOREST",
            "TYPE_PROVINCIAL_PARK",
            "TYPE_PROVINCIAL_FOREST",
            "TYPE_CAMPGROUNDS",
            "TYPE_HIKING_AREA",
            "TYPE_BUSINESS",
            "TYPE_GOVERNMENT",
            "TYPE_BORDER_CROSSING",
            "TYPE_CITY_HALL",
            "TYPE_COURTHOUSE",
            "TYPE_EMBASSY",
            "TYPE_LIBRARY",
            "TYPE_SCHOOL",
            "TYPE_UNIVERSITY",
            "TYPE_EMERGENCY",
            "TYPE_HOSPITAL",
            "TYPE_PHARMACY",
            "TYPE_POLICE",
            "TYPE_FIRE",
            "TYPE_DOCTOR",
            "TYPE_DENTIST",
            "TYPE_VETERINARIAN",
            "TYPE_TRAVEL_SERVICE",
            "TYPE_LODGING",
            "TYPE_RESTAURANT",
            "TYPE_GAS_STATION",
            "TYPE_PARKING",
            "TYPE_POST_OFFICE",
            "TYPE_REST_AREA",
            "TYPE_CASH_MACHINE",
            "TYPE_CAR_RENTAL",
            "TYPE_CAR_REPAIR",
            "TYPE_SHOPPING",
            "TYPE_GROCERY",
            "TYPE_TOURIST_DESTINATION",
            "TYPE_ECO_TOURIST_DESTINATION",
            "TYPE_BIRD_WATCHING",
            "TYPE_FISHING",
            "TYPE_HUNTING",
            "TYPE_NATURE_RESERVE",
            "TYPE_TEMPLE",
            "TYPE_CHURCH",
            "TYPE_GURUDWARA",
            "TYPE_HINDU_TEMPLE",
            "TYPE_MOSQUE",
            "TYPE_SYNAGOGUE",
            "TYPE_STADIUM",
            "TYPE_BAR",
            "TYPE_MOVIE_RENTAL",
            "TYPE_COFFEE",
            "TYPE_GOLF",
            "TYPE_BANK",
            "TYPE_DOODLE",
            "TYPE_GROUNDS",
            "TYPE_AIRPORT_GROUNDS",
            "TYPE_BUILDING_GROUNDS",
            "TYPE_CEMETERY",
            "TYPE_HOSPITAL_GROUNDS",
            "TYPE_INDUSTRIAL",
            "TYPE_MILITARY",
            "TYPE_SHOPPING_CENTER",
            "TYPE_SPORTS_COMPLEX",
            "TYPE_UNIVERSITY_GROUNDS",
            "TYPE_DEPRECATED_TARMAC",
            "TYPE_ENCLOSED_TRAFFIC_AREA",
            "TYPE_PARKING_LOT",
            "TYPE_PARKING_GARAGE",
            "TYPE_OFF_ROAD_AREA",
            "TYPE_BORDER",
            "TYPE_BUILDING",
            "TYPE_GEOCODED_ADDRESS",
            "TYPE_NATURAL_FEATURE",
            "TYPE_TERRAIN",
            "TYPE_SAND",
            "TYPE_BEACH",
            "TYPE_DUNE",
            "TYPE_ROCKY",
            "TYPE_ICE",
            "TYPE_GLACIER",
            "TYPE_BUILT_UP_AREA",
            "TYPE_VEGETATION",
            "TYPE_SHRUBBERY",
            "TYPE_WOODS",
            "TYPE_AGRICULTURAL",
            "TYPE_GRASSLAND",
            "TYPE_TUNDRA",
            "TYPE_DESERT",
            "TYPE_SALT_FLAT",
            "TYPE_WATER",
            "TYPE_OCEAN",
            "TYPE_BAY",
            "TYPE_BIGHT",
            "TYPE_LAGOON",
            "TYPE_SEA",
            "TYPE_STRAIT",
            "TYPE_INLET",
            "TYPE_FJORD",
            "TYPE_LAKE",
            "TYPE_SEASONAL_LAKE",
            "TYPE_RESERVOIR",
            "TYPE_POND",
            "TYPE_RIVER",
            "TYPE_RAPIDS",
            "TYPE_DISTRIBUTARY",
            "TYPE_CONFLUENCE",
            "TYPE_WATERFALL",
            "TYPE_SPRING",
            "TYPE_GEYSER",
            "TYPE_HOT_SPRING",
            "TYPE_SEASONAL_RIVER",
            "TYPE_WADI",
            "TYPE_ESTUARY",
            "TYPE_WETLAND",
            "TYPE_WATER_NAVIGATION",
            "TYPE_FORD",
            "TYPE_CANAL",
            "TYPE_HARBOR",
            "TYPE_CHANNEL",
            "TYPE_REEF",
            "TYPE_REEF_FLAT",
            "TYPE_REEF_GROWTH",
            "TYPE_REEF_EXTENT",
            "TYPE_REEF_ROCK_SUBMERGED",
            "TYPE_IRRIGATION",
            "TYPE_DAM",
            "TYPE_DRINKING_WATER",
            "TYPE_CURRENT",
            "TYPE_WATERING_HOLE",
            "TYPE_TECTONIC",
            "TYPE_WATERING_HOLE_DEPRECATED",
            "TYPE_VOLCANO",
            "TYPE_LAVA_FIELD",
            "TYPE_FISSURE",
            "TYPE_FAULT",
            "TYPE_LAND_MASS",
            "TYPE_CONTINENT",
            "TYPE_ISLAND",
            "TYPE_ATOLL",
            "TYPE_OCEAN_ROCK_EXPOSED",
            "TYPE_CAY",
            "TYPE_PENINSULA",
            "TYPE_ISTHMUS",
            "TYPE_ELEVATED",
            "TYPE_PEAK",
            "TYPE_NUNATAK",
            "TYPE_SPUR",
            "TYPE_PASS",
            "TYPE_PLATEAU",
            "TYPE_RIDGE",
            "TYPE_RAVINE",
            "TYPE_CRATER",
            "TYPE_KARST",
            "TYPE_CLIFF",
            "TYPE_VISTA",
            "TYPE_DIGITAL_ELEVATION_MODEL",
            "TYPE_UPLAND",
            "TYPE_TERRACE",
            "TYPE_SLOPE",
            "TYPE_CONTOUR_LINE",
            "TYPE_PAN",
            "TYPE_UNSTABLE_HILLSIDE",
            "TYPE_MOUNTAIN_RANGE",
            "TYPE_UNDERSEA",
            "TYPE_SUBMARINE_SEAMOUNT",
            "TYPE_SUBMARINE_RIDGE",
            "TYPE_SUBMARINE_GAP",
            "TYPE_SUBMARINE_PLATEAU",
            "TYPE_SUBMARINE_DEEP",
            "TYPE_SUBMARINE_VALLEY",
            "TYPE_SUBMARINE_BASIN",
            "TYPE_SUBMARINE_SLOPE",
            "TYPE_SUBMARINE_CLIFF",
            "TYPE_SUBMARINE_PLAIN",
            "TYPE_SUBMARINE_FRACTURE_ZONE",
            "TYPE_CAVE",
            "TYPE_ROCK",
            "TYPE_ARCHIPELAGO",
            "TYPE_POSTAL",
            "TYPE_POSTAL_CODE",
            "TYPE_POSTAL_CODE_PREFIX",
            "TYPE_PREMISE",
            "TYPE_SUB_PREMISE",
            "TYPE_SUITE",
            "TYPE_POST_TOWN",
            "TYPE_POSTAL_ROUND",
            "TYPE_META_FEATURE",
            "TYPE_DATA_SOURCE",
            "TYPE_LOCALE",
            "TYPE_TIMEZONE",
            "TYPE_BUSINESS_CHAIN",
            "TYPE_PHONE_NUMBER_PREFIX",
            "TYPE_PHONE_NUMBER_AREA_CODE",
            "TYPE_BUSINESS_CORRIDOR",
            "TYPE_ADDRESS_TEMPLATE",
            "TYPE_TRANSIT_AGENCY",
            "TYPE_FUTURE_GEOMETRY",
            "TYPE_EVENT",
            "TYPE_EARTHQUAKE",
            "TYPE_HURRICANE",
            "TYPE_WEATHER_CONDITION",
            "TYPE_TRANSIENT",
            "TYPE_ENTRANCE",
            "TYPE_CARTOGRAPHIC",
            "TYPE_HIGH_TENSION",
            "TYPE_SKI_TRAIL",
            "TYPE_SKI_LIFT",
            "TYPE_SKI_BOUNDARY",
            "TYPE_WATERSHED_BOUNDARY",
            "TYPE_TARMAC",
            "TYPE_WALL",
            "TYPE_PICNIC_AREA",
            "TYPE_PLAY_GROUND",
            "TYPE_TRAIL_HEAD",
            "TYPE_GOLF_TEEING_GROUND",
            "TYPE_GOLF_PUTTING_GREEN",
            "TYPE_GOLF_ROUGH",
            "TYPE_GOLF_SAND_BUNKER",
            "TYPE_GOLF_FAIRWAY",
            "TYPE_GOLF_HOLE",
            "TYPE_DEPRECATED_GOLF_SHOP",
            "TYPE_CAMPING_SITE",
            "TYPE_DESIGNATED_BARBECUE_PIT",
            "TYPE_DESIGNATED_COOKING_AREA",
            "TYPE_CAMPFIRE_PIT",
            "TYPE_WATER_FOUNTAIN",
            "TYPE_LITTER_RECEPTACLE",
            "TYPE_LOCKER_AREA",
            "TYPE_ANIMAL_ENCLOSURE",
            "TYPE_CARTOGRAPHIC_LINE",
            "TYPE_ESTABLISHMENT",
            "TYPE_ESTABLISHMENT_GROUNDS",
            "TYPE_ESTABLISHMENT_BUILDING",
            "TYPE_ESTABLISHMENT_POI",
            "TYPE_ESTABLISHMENT_SERVICE",
            "TYPE_CELESTIAL",
            "TYPE_ROAD_MONITOR",
            "TYPE_PUBLIC_SPACES_AND_MONUMENTS",
            "TYPE_STATUE",
            "TYPE_TOWN_SQUARE",
            "TYPE_LEVEL",
            "TYPE_COMPOUND",
            "TYPE_COMPOUND_GROUNDS",
            "TYPE_COMPOUND_BUILDING",
            "TYPE_COMPOUND_SECTION",
            "TYPE_TERMINAL_POINT",
            "TYPE_REGULATED_AREA",
            "TYPE_LOGICAL_BORDER",
            "TYPE_GCONCEPT_ONLY",
            "TYPE_DO_NOT_USE_RESERVED_TO_CATCH_GENERATED_FILES",
            "TYPE_UNKNOWN"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false
          ],
          "enumDescriptions": [
            "ABSTRACT",
            "ABSTRACT",
            "A route is any section of road (or rails, etc.) that has a name. This includes city streets as well as highways. Road segments can belong to multiple routes (e.g. El Camino, CA-82).",
            "DEPRECATED",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "A designated bicycle route, whose segments may consist of any combination of bicycle paths, bicycle lanes, or city streets.",
            "A designated trail, which may consist of paved walkways, dirt paths, fire road, streets or highways, etc.",
            "ABSTRACT",
            "",
            "Railroads use several different incompatible track types.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Tracks for streetcars, cable-cars, etc. Ferries are services that are part of the road network but are not roads. They typically involve fares and scheduled departure times.",
            "ABSTRACT",
            "The vast majority of ferries are ferry boats.",
            "Also called a \"car transport\", a ferry train is a rail service that carries passengers and their vehicles across undrivable terrain. The Channel Tunnel (\"Chunnel\") is the most famous example, but they are also common in the Alps where they connect neighboring valleys otherwise separated by impassable mountains.",
            "Any plausible 1-dimensional path through a 2+ dimensional space, for the purposes of making graph-search-based routing possible. Such segments can be used to model paths through parking lots, squares, floors of buildings and other areas.",
            "An intersection consists of a collection of segments that terminate at the same location. This is topological definition: it may not match what a typical user would think of as an \"intersection\". See TYPE_INTERSECTION_GROUP, below, for more information. Each segment terminating at an intersection has an \"endpoint type\" that specifies how that segment is terminated: stop sign, yield sign, three-way light, etc.",
            "ABSTRACT",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "A transit line is a collection of transit legs, associated with some invariant properties of the trips that run over the legs. See also transitline.proto",
            "TYPE_TRANSIT_AGENCY was moved to 0xC91. This deprecated enum value still exists for debugging purposes only.",
            "DEPRECATED",
            "ABSTRACT",
            "Road sign features have names, point geometry, etc. They also have segment_path data (see below) which lists the segments that refer to the sign. See segment.proto for the reference from the segment to the road sign.",
            "Our TYPE_INTERSECTION feature, above, models the point where one or more segments terminate. This is topological definition: it may not match what a typical user would think of as an \"intersection\". Consider the intersections where Hayes, Market, Larkin, and 9th Street meet near (37.77765, -122.41638) in San Francisco. Most people would probably consider this a single feature, even though we model it as four separate TYPE_INTERSECTION features. This TYPE_INTERSECTION_GROUP is used to model the user's concept of a complex intersection.",
            "RESERVED",
            "A restriction group describes a set of segment restrictions that belong together and have a name or an associated event. See also restriction_group.proto",
            "DEPRECATED",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "e.g. Silicon Valley",
            "A reservation is a region collectively held or governed by indigenous people and officially recognized by the country’s government at the federal or state level. A reservation may be fully contained within an administrative feature or partially contained within two or more. These regions are referred to by different categorical names depending on country and even by state, including but not limited to: “Indian Reservations”, “Indian Reserves”, “Land Claim Settlement Lands”, “Indian Lands”, “Treaty Lands”, “Indigenous Territories”, etc. A reservation is not a historic indigenous territory boundary or a region which has applied for land rights but has not yet received official recognition.",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "An entity widely considered to be a city, that may itself be made up of smaller political entities, some of which are cities/towns/villages themselves. For example, the colloquial view of Sydney, Australia actually comprises many smaller cities, but is regarded as a city itself. This type is not suitable for modeling official metro-/micropolitan or other statistical areas.",
            "ABSTRACT",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Designated Market Areas (or DMAs) are used by marketing and ratings companies (such as the Nielsen Media Research company) to describe geographical regions (such as the greater New York metropolitan area) that are covered by a set of television stations. (See http://www.schooldata.com/pdfs/DMA.pdf) In the United States, DMAs should have a DMA numeric ID name, tagged with the FLAG_DESIGNATED_MARKET_AREA_ID flag.",
            "",
            "",
            "Eventually we'll have more data for disputed areas (e.g., who makes claims on the area, who has de facto control, etc.). For the moment, we just define a type so we can simply mark areas as disputed.",
            "Boundaries representing the jurisdiction of a particular police station.",
            "An area used for aggregating statistical data, eg, a census region. Note that TYPE_STATISTICAL_AREA has a third nibble so we can add an abstract parent above it later if need be at 0x2E1 (and rename TYPE_STATISTICAL_AREA as TYPE_STATISTICAL_AREA1).",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "A line representing the boundary between two features. See border.proto for details.",
            "DEPRECATED",
            "An association of a point with an address, with no other information.",
            "ABSTRACT",
            "Expanses of land that share common surface attributes. These areas would look more or less uniform from a high altitude.",
            "",
            "",
            "",
            "",
            "",
            "",
            "Terrain that looks populated.",
            "Terrain that is covered in vegetation.",
            "",
            "",
            "",
            "",
            "",
            "",
            "A flat expanse of salt left by the evaporation of a body of salt water.",
            "Features can be TYPE_WATER if we don't have enough information to properly type the body of water. TYPE_WATER is also used as the type for child features that compose a TYPE_RIVER feature.",
            "One of the large salt-water bodies that covers most of the globe.",
            "An ocean subdivision formed by a coastal indentation. Includes coves and gulfs.",
            "An open body of water formed by a slight coastal indentation.",
            "",
            "An ocean subdivision more or less confined by land and islands.",
            "A long narrow ocean subdivision. Includes sounds.",
            "",
            "",
            "An inland body of standing water.",
            "A lake that dries up part of the year.",
            "An artificial body of water, possibly created by a dam, often used for irrigation or house use.",
            "",
            "An inland body of moving water, or parts associated with it in which there is little or no current (backwater).",
            "",
            "A branch which flows away from the main river. Includes deltas.",
            "A place where two or more rivers join.",
            "",
            "A place where ground water flows naturally out of the ground.",
            "",
            "",
            "A river that dries up part of the year.",
            "A dry riverbed that occasionally receives flashfloods.",
            "A place at the end of a river where fresh and salt water mix. Includes tidal creeks and limans.",
            "Land that is usually flooded. Includes bogs, marshes, flats, moors, and swamps.",
            "",
            "A shallow place where water may be waded through.",
            "A narrow passage used by boats. Normally artificial.",
            "A deep place near a shore where ships commonly drop anchor.",
            "A deep part in a body of water that is suitable for navigation. Includes narrows.",
            "Rocks, coral, sandbars, or other features beneath the surface of the water that pose a hazard to passing ships. Includes shoals.",
            "A relatively shallow zone of the back reef located closest to the shore, that may be exposed at low tide.",
            "A small section of rocks, coral, sandbars, or other features beneath the surface of the water that forms part of a reef.",
            "The full extent of the reef complex.",
            "A submerged rock in the water.",
            "Man-made (and sometimes natural) channels used to move water. This type was used for both dam structures and water that is hold back by dams. We should use TYPE_COMPOUND_BUILDING for dam structures and TYPE_RESERVOIR for water.",
            "DEPRECATED",
            "",
            "Includes overfalls.",
            "A natural depression filled with water where animals come to drink.",
            "This type is incorrectly under TYPE_TECTONIC instead of TYPE_WATER. This was a mistake and is now fixed. See TYPE_WATERING_HOLE for the replacement.",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "An exposed rock in the water.",
            "A small, low-elevation, sandy island formed on the surface of coral reefs",
            "A stretch of land projecting into water. Includes capes and spits.",
            "A strip of land connecting two larger land masses, such as continents.",
            "Features that are notable for being high (or low), or for having sudden changes in elevation. These features might have an \"elevation\" extension to specify the actual elevation. See ElevationProto for more information.",
            "Elevations that have a distinctive peak.",
            "A peak or ridge of a mountain that extends through a glacier.",
            "A subsidiary peak of a mountain.",
            "A route over an otherwise difficult to traverse feature. Includes saddle.",
            "Elevations that are flat on top. Includes mesas and buttes.",
            "A ridge is a geographical feature consisting of a chain of mountains or hills that form a continuous elevated crest with a single ridgeline for some distance.",
            "Steep declines usually carved by erosion. Includes valleys, canyons, ditches, and gorges.",
            "Depressions causes by impact, explosion, and sometimes sink-holes.",
            "Topography formed on limestone and gypsum by dissolution with sinkholes, caves, etc.",
            "A vertical or nearly vertical slope. Includes escarpments.",
            "An elevated place that is notable for having a good view. Raster digital elevation data. This is not a type to be used by providers or consumed by clients.",
            "RESERVED",
            "Land along streams higher than the alluvial plain or stream terrace.",
            "",
            "Land not so steep as a cliff, but changing elevation. Includes slides.",
            "All the points on the polygon are at the same elevation.",
            "A near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool.",
            "",
            "A series of mountains or hills ranged in a line and connected by high ground. Mountain ranges usually consist of many smaller ridges. For example, the Himalayas, the Andes. the Alps, etc.",
            "Features that are notable for being high (or low), or for having sudden changes in elevation. These features might have an \"elevation\" extension to specify the actual elevation. See ElevationProto for more information.",
            "includes peaks, ranges, and spurs",
            "",
            "includes saddles",
            "",
            "",
            "includes trenches and troughs",
            "",
            "",
            "",
            "",
            "",
            "Don't use 0xA7. Use 8 bits for additional types under TYPE_NATURAL_FEATURE, so we don't run out of space. The following are miscellaneous natural features that don't fit any of the categories above.",
            "",
            "A feature representing a group or chain of islands. ",
            "ABSTRACT",
            "This is the type for postal codes which are complete and independent enough that there should be a feature for them (e.g. US 5-digit ZIP codes). For even more detailed suffixes that further subdivide a postal code (such as the +4 component in US ZIP codes), store the information in a TYPE_POSTAL_CODE_SUFFIX address component. When a range or set of postal codes share the same geographical area, e.g. because a precise subdivision does not exist or this subdivision is unknown, this type is used for each individual postal code.",
            "A prefix portion of a postal code which does not meet the requirements for TYPE_POSTAL_CODE, but which is useful to search for, for example UK outcodes.",
            "DEPRECATED",
            "DEPRECATED This is deprecated and we want to use TYPE_COMPOUND_SECTION instead.",
            "DEPRECATED",
            "The term \"post town\" is used for a locality-like-entity that is only used for postal addresses.",
            "DEPRECATED",
            "ABSTRACT",
            "Every data source used in constructing a data repository has a corresponding feature that provides more information about that data source. The extra information is stored in the optional data_source field below.",
            "A locale feature provides region specific conventions such as preferred language and formatting details for time, date, and currency values. Locales aren't necessary defined by physical geographic features, so they are classified as meta-features.",
            "A timezone feature is used to specify the region covering an international timezone. When a point is covered by multiple timezone features, the most specific one can be used to compute the local time at this point. Most specific implies a much smaller region or the one that is closer to the center. A feature's timezone can be specified in the repeated related_timezone field.",
            "A business chain feature is used to represent a chain, e.g. Starbucks, McDonald's, etc. Other features representing specific stores/franchises of this chain may refer to one such feature via RELATION_MEMBER_OF_CHAIN. This is not strictly reserved to commercial chains but can also be used to model organizations such as the Red Cross or the United Nations.",
            "A phone number prefix feature is used to specify the region where phone numbers (typically fixed-line numbers) must begin with a certain prefix. Any phone number prefix down to any level of granularity could be represented by this type.",
            "A phone number area code is a prefix which also coincides with the area code, or national destination code, of a particular region.",
            "A Business Corridor is a dense cluster of semantically similar establishments. TYPE_BUSINESS_CORRIDOR features are distinguished from TYPE_COLLOQUIAL_AREA features because the corridors are not under the political hierarchy, are allowed to be nameless, and may not correspond to well-known real world locations. For more details, see go/geo-corridors-schema.",
            "An address template feature provides region-specific conventions for structuring addresses. These features aren't necessarily defined by physical geographic features, so they are classified as meta-features.",
            "A transit agency operates a number of lines, typically all in the same city, region or country. See also transitagency.proto",
            "A feature whose geometry is planned to replace the geometry on another feature.",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "RESERVED",
            "A portal of entry or exit to another feature. Examples: - Subway station entrance. - Parking lot entrance.",
            "Cartographic features are used to capture real-world objects for which there is no current desire to model any specific attributes. These are only useful to make the map tiles look pretty.",
            "DEPRECATED",
            "Also see skitrail.proto",
            "Also see skilift.proto",
            "Also see skiboundary.proto",
            "",
            "Starting with TYPE_TARMAC, we use longer IDs, so that we can expand the number of feature types under TYPE_CARTOGRAPHIC.",
            "Use TYPE_COMPOUND_GROUND and appropriate gcids for the next two.",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "Sub-types within a golf course.",
            "",
            "",
            "",
            "",
            "Use TYPE_ESTABLISHMENT_POI and gcid:golf_shop for golf shops instead.",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "Subtype within a zoo - a cage or fenced-off or otherwise delineated area containing animals.",
            "A line for a cartographic detail. For example the international date line. Such features should have polyline geometry.",
            "ABSTRACT This type is being replaced by TYPE_COMPOUND_GROUNDS. For further details, see go/compounds-v2",
            "DEPRECATED This type has been replaced by TYPE_COMPOUND_BUILDING. For further details, see go/oyster-compounds",
            "DEPRECATED",
            "An establishment that has a physical location. Note that it *may* also have a service area (e.g. a restaurant that offers both dine-in and delivery). This type of business is also known as a \"hybrid\" Service Area Business. Establishment POIs can be referenced by TYPE_COMPOUND features using the RELATION_PRIMARILY_OCCUPIED_BY. This is the reciprocal relation of the RELATION_OCCUPIES.",
            "NOTE(tcain): Using value 0xD441, since we could find ourselves with a need to differentiate service areas from online-only at this level in the future, but still benefit from being able to group those under a common parent, disjoint from TYPE_ESTABLISHMENT_POI.",
            "The root of types of features that are in the sky, rather than on the earth. There will eventually be a hierarchy of types here.",
            "Features responsible for monitoring traffic on roads (usually for speed). Includes cameras at particular points as well as monitors that cover larger spans. Features of this type should have a corresponding gcid that specifies the correct subtype (e.g. gcid:road_camera or gcid:speed_camera_zone). This type was originally named as TYPE_ROAD_CAMERA.",
            "ABSTRACT",
            "Note that this type does not distinguish the nature of the statue (religious, historical, memorial, tourist, ...).",
            "Open space used for events, gathering, or as market-place.",
            "A feature used to represent a logical level, e.g. floor.",
            "ABSTRACT",
            "e.g. campus, compound, parcel.",
            "e.g. single family dwelling, office building.",
            "e.g. suite, room, hallway, cubicle.",
            "A terminal point represents a good location for a user to meet a taxi, ridesharing vehicle, or general driver.",
            "An area controlled in some way by an authoritative source, such as a government-designated COVID containment zone or an area under government sanctions. Features of this type should have one or more gcids corresponding to their specific regulation, and client handling of these features may vary based on the type of regulation.",
            "A grouping of TYPE_BORDER features (\"border segments\"), which together represent a border between two features of the same type.",
            "A generic feature type for any geo-type that cannot be modeled under existing feature types. No new feature type should be created within feature proto after this type.",
            "DEPRECATED",
            "A feature of completely unknown type. This should only be used when absolutely necessary. One example in which this type is useful is in the Chinese importer, which must heuristically segment addresses into components - it often does not know what types to make those components. Please note that the Oyster address formatter does not currently support address components of TYPE_UNKNOWN well."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationFeatureletBoundingBox": {
      "description": "Defines the bounding box for the area. The values specify a rectangle defined from low to high. Latitude and longitude (in degrees) x 10,000,000. We use sfixed32 (fixed size int32) because they get transmitted using 4 bytes while int32 gets transmitted using 10 bytes. This is currently not populated by LES. Oolong will parse the LES response for IP addreses and combine multiple locations into a single location with multiple featurelets. This will be populated by Oolong by looking into bounding boxes from each location.",
      "id": "LocationExtractorLocationFeatureletBoundingBox",
      "properties": {
        "highLatitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "highLongitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "lowLatitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "lowLongitudeE7": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationExtractorLocationFeatureletCenter": {
      "description": "Latitude and longitude of the feature center (in degrees) x 10,000,000",
      "id": "LocationExtractorLocationFeatureletCenter",
      "properties": {
        "latitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "longitudeE7": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationUnifiedActivityRecord": {
      "description": "Represents a detected activity record. Next id 3.",
      "id": "LocationUnifiedActivityRecord",
      "properties": {
        "confidence": {
          "description": "The confidence of the detection. Range is [0, 100].",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of activity.",
          "enum": [
            "IN_VEHICLE",
            "ON_BICYCLE",
            "ON_FOOT",
            "STILL",
            "UNKNOWN",
            "TILTING",
            "EXITING_VEHICLE",
            "WALKING",
            "RUNNING",
            "OFF_BODY",
            "TRUSTED_GAIT",
            "FLOOR_CHANGE",
            "ON_STAIRS",
            "ON_ESCALATOR",
            "IN_ELEVATOR",
            "SLEEPING",
            "IN_ROAD_VEHICLE",
            "IN_RAIL_VEHICLE",
            "IN_TWO_WHEELER_VEHICLE",
            "IN_FOUR_WHEELER_VEHICLE",
            "IN_CAR",
            "IN_BUS",
            "EXPERIMENTAL_EXTRA_PERSONAL_VEHICLE"
          ],
          "enumDescriptions": [
            "LINT.IfChange",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "This is to support EXPERIMENTAL_EXTRA_PERSONAL_VEHICLE until Activity Recognition team figures out their API. LINT.ThenChange( //depot/google3/java/com/google/geo/sidekick/proto/detected_activity.proto, //depot/google3/personalization/context/proto/detected_activity/detected_activity.proto )"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedAnnotationSet": {
      "description": "A set of annotations (e.g., those applied by some particular policy). Next tag: 6",
      "id": "LocationUnifiedAnnotationSet",
      "properties": {
        "annotations": {
          "description": "The annotations that have been applied by some policy.",
          "items": {
            "$ref": "LocationUnifiedLocationAnnotation"
          },
          "type": "array"
        },
        "clientId": {
          "description": "If set then this set of annotations are originating from this client id for production use.",
          "enum": [
            "CLIENT_UNKNOWN",
            "CLIENT_CURIO",
            "CLIENT_ONE_GOOGLE_SERVICE",
            "CLIENT_EVALS",
            "CLIENT_EVALS_ONESHOT",
            "CLIENT_EVALS_UQS",
            "CLIENT_BOOKS",
            "CLIENT_BOND",
            "CLIENT_CHROME_UMA",
            "CLIENT_DOUBLECLICK_SEARCH",
            "CLIENT_YOUTUBE_ISP_RATING",
            "CLIENT_YOUTUBE_REAL_TIME_QOE",
            "CLIENT_YOUTUBE_QOE_LIVYATAN",
            "CLIENT_YOUTUBE",
            "CLIENT_YOUTUBE_SHORTS_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_SHORTS_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_SHORTS_MOBILE_GAIA",
            "CLIENT_YOUTUBE_SHORTS_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_LES",
            "CLIENT_YOUTUBE_VIRAL_EXP_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_VIRAL_EXP_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_EXP_MOBILE_GAIA",
            "CLIENT_YOUTUBE_VIRAL_EXP_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_BADGER",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_BADGER",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_BADGER",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_BADGER",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_CHIPMUNK",
            "CLIENT_YOUTUBE_ADMIN_YURT",
            "CLIENT_YOUTUBE_BAD_HARVEST",
            "CLIENT_SPEECH",
            "CLIENT_GMAIL",
            "CLIENT_GMAIL_SPAM",
            "CLIENT_CHROMECAST_WEB",
            "CLIENT_PANCETTA",
            "CLIENT_GOOGLE_LOCATION_SERVER",
            "CLIENT_GOOGLE_FEEDBACK",
            "CLIENT_ANDROID_METRICS_WAREHOUSE",
            "CLIENT_USERMGMT",
            "CLIENT_APPREMOTING",
            "CLIENT_GAIA_PERMISSION_SERVER",
            "CLIENT_ACTIONABLE_IPS",
            "CLIENT_DISPLAY_ADS",
            "CLIENT_DISPLAY_ADS_DEFAULT",
            "CLIENT_DISPLAY_ADS_DESKTOP_GAIA",
            "CLIENT_DISPLAY_ADS_DESKTOP_ZWIEBACK",
            "CLIENT_DISPLAY_ADS_MOBILE_GAIA",
            "CLIENT_DISPLAY_ADS_MOBILE_ZWIEBACK",
            "CLIENT_DISPLAY_ADS_PREVIEW",
            "CLIENT_HOBBES",
            "CLIENT_NEWSSTAND",
            "CLIENT_NEWSSTAND_EXPERIMENTAL",
            "CLIENT_POLYNEWS",
            "CLIENT_DOCS",
            "CLIENT_ADWORDS_EXPRESS",
            "CLIENT_TRACE_DEPOT",
            "CLIENT_MAPSPRO",
            "CLIENT_GEO_ONDEMAND",
            "CLIENT_ACCESS_FILTER",
            "CLIENT_DOMAIN_REGISTRAR",
            "CLIENT_ASSISTANT",
            "CLIENT_ASSISTANT_FRONTEND",
            "CLIENT_ACCOUNT_LINKING",
            "CLIENT_LEGAL_REMOVALS",
            "CLIENT_CLOUD_CONSOLE",
            "CLIENT_CLOUD_FREE_TRIAL",
            "CLIENT_CLOUD_SOLUTIONS_CATALOG",
            "CLIENT_CLOUD_MEDIA_ACCESS",
            "CLIENT_DOTORG_G4NP",
            "CLIENT_CRASH_INTERNAL",
            "CLIENT_GOOGLE_WIFI_MONLOG",
            "CLIENT_GOOGLE_VOICE",
            "CLIENT_BLOGGER",
            "CLIENT_THOR_BACKEND",
            "CLIENT_NEWS",
            "CLIENT_GOOGLE_PHOTOS",
            "CLIENT_GOOGLE_PHOTOS_INFERRED_LOCATION",
            "CLIENT_RANKBRAIN_DEBUG",
            "CLIENT_HETERODYNE",
            "CLIENT_FRAUDREVIEW",
            "CLIENT_JAMBOARD",
            "CLIENT_MARCONI",
            "CLIENT_AART",
            "CLIENT_CULTURAL",
            "CLIENT_YOUTUBE_ECOMMERCE",
            "CLIENT_ARES",
            "CLIENT_LIS",
            "CLIENT_STORE",
            "CLIENT_DASHER_AUDITING",
            "CLIENT_SHOPPING_LIST",
            "CLIENT_ITEM_SUGGEST",
            "CLIENT_SMART_BOOKS",
            "CLIENT_GRADS",
            "CLIENT_ADS_ROOT",
            "CLIENT_SE_ROOT",
            "CLIENT_YT_ORBIT",
            "CLIENT_NOVA_APERTURE",
            "CLIENT_LENA_SIGNUP_DEFAULTS",
            "CLIENT_PLAY_APPS_PUBLISHER",
            "CLIENT_FINSKY_ENTERPRISE",
            "CLIENT_GOOGLE_ADMIN",
            "CLIENT_CRYPTAUTH",
            "CLIENT_GSA_UNIVERSAL_SERVER",
            "CLIENT_TRAVEL_FRONTEND_TRANSIT",
            "CLIENT_HOME_CLOUD",
            "CLIENT_GSX_MALL",
            "CLIENT_GOOGLE_DUO",
            "CLIENT_GAIA_FRONTEND",
            "CLIENT_ANDROID_MESSAGES",
            "CLIENT_GOOGLE_LENS",
            "CLIENT_CHROME_WEB_STORE",
            "CLIENT_ACTIONS_ON_GOOGLE_CONSOLE",
            "CLIENT_ANDROID_TV_CHANNELS",
            "CLIENT_ASSISTANT_WEB_SETTINGS",
            "CLIENT_PLAY_USER_DATA",
            "CLIENT_ADS_INTEGRITY",
            "CLIENT_ADS_INTEGRITY_MALVERTISING",
            "CLIENT_FIREBASE_CONSOLE",
            "CLIENT_AOG_FEED_VALIDATOR",
            "CLIENT_PLUMERIA",
            "CLIENT_PAISA",
            "CLIENT_GOOGLE_PAY",
            "CLIENT_GOOGLE_PAY_WEB",
            "CLIENT_GOOGLE_WALLET",
            "CLIENT_SCROOGLED",
            "CLIENT_WAYMO",
            "CLIENT_CROW",
            "CLIENT_GSUITE_SECURITY_CENTER_SIT",
            "CLIENT_EVENT_THREAT_DETECTION",
            "CLIENT_PLAY_LOCATION",
            "CLIENT_FOOTPLACER",
            "CLIENT_DASHER_COMMERCE",
            "CLIENT_SOCIAL_PEOPLE_ANALYTICS",
            "CLIENT_CONTACTS_UI",
            "CLIENT_GAFE4",
            "CLIENT_PLACES_API",
            "CLIENT_PLACES_SEARCH_API",
            "CLIENT_DRIVE_WEB",
            "CLIENT_ANDROID_OTA",
            "CLIENT_PAISA_NEARBY_STORES",
            "CLIENT_ISP_FIBER_FAS",
            "CLIENT_SUPPORT_CONTENT",
            "CLIENT_GWS_OFFROAD_LOGGING",
            "CLIENT_CHANGEHISTORY",
            "CLIENT_SESSION_RISK",
            "CLIENT_ALPS",
            "CLIENT_DISCOVER_NEWS_LOCATION",
            "CLIENT_ASSISTANT_SNAPSHOT",
            "CLIENT_HONEYCOMB",
            "CLIENT_PLAY_MONETARY_ABUSE",
            "CLIENT_SMALL_BUSINESS_ADVISORS",
            "CLIENT_GPA_FEEDS",
            "CLIENT_EDU_ORIGINALITY",
            "CLIENT_PAIDTASKS",
            "CLIENT_TRANSLATE",
            "CLIENT_FUNDING_CHOICES",
            "CLIENT_SEARCH_NOTIFICATIONS",
            "CLIENT_VISUAL_SEMANTIC_SERVICE",
            "CLIENT_CHROME_PREFETCH_PROXY",
            "CLIENT_WEAR_FRONTEND",
            "CLIENT_PAYMENTS_RISKENGINE",
            "CLIENT_PAYMENTS_ORCHESTRATION",
            "CLIENT_ANDROID_TV_IRDB",
            "CLIENT_TRENDS_FRONTEND",
            "CLIENT_COLABORATORY",
            "CLIENT_SOCRATIC",
            "CLIENT_PS1_LOCATION",
            "CLIENT_DDM_REPORTING",
            "CLIENT_HOMEROOM_BACKEND",
            "CLIENT_CARS_CATEGORICAL",
            "CLIENT_GPAY_MERCHANT_VERTICALS",
            "CLIENT_RECAPTCHA_ACCOUNT_DEFENDER",
            "CLIENT_RECAPTCHA_LITE",
            "CLIENT_RECAPTCHA_FRAUD",
            "CLIENT_AUTONT_ACCESS_LOCATION",
            "CLIENT_TFAA_REPORT",
            "CLIENT_IDAAS_IP_LOCATION",
            "CLIENT_ONESTACK_METRIC_COLLECTION",
            "CLIENT_GPAY_TRANSIT",
            "CLIENT_CHRONICLE_SECURITY",
            "CLIENT_CHRONICLE_SECURITY_UI",
            "CLIENT_GPAY_MERCHANT_SPOT_ONBOARDING_TOOL",
            "CLIENT_ADS_SCRAPING",
            "CLIENT_CLOUD_SUPPORT_PORTAL",
            "CLIENT_LAMDA",
            "CLIENT_ACCESS_REDIRECTION_SERVICE",
            "CLIENT_PINPOINT",
            "CLIENT_SHOPPING_ORDER_HISTORY",
            "CLIENT_NEST_CAMERA_CLOUD",
            "CLIENT_PANOPTIC_EVAL",
            "CLIENT_ABOUT_THIS_PAGE",
            "CLIENT_PHOTOS_ANALYTICS_MARKETING",
            "CLIENT_GMSCORE_GMSCOMPLIANCE",
            "CLIENT_ANALYTICS_COLLECTION",
            "CLIENT_PLAY_CONSOLE_ANDROID_VITALS",
            "CLIENT_CRASHLYTICS_PLAY_CONSOLE_CRASHES",
            "CLIENT_PAYMENTS_MERCHANT_STORIES",
            "CLIENT_CLOUDTOP_CONNECTIVITY",
            "CLIENT_CLOUD_WEB",
            "CLIENT_RECORDING_CONSENT",
            "CLIENT_DV3_FRONTEND",
            "CLIENT_LENDING_DATA_MANAGER",
            "CLIENT_CHROMEOS_DATA_FRESNEL",
            "CLIENT_PPN",
            "CLIENT_GEO_SEARCH_API",
            "CLIENT_GOOGLE_ONE_SECURITY",
            "CLIENT_GOOGLE_TV_LAVA",
            "CLIENT_DYNAMITE_SERVER",
            "CLIENT_BCE_CLIENT_CONNECTOR",
            "CLIENT_DSE_REGULATORY_ANALYSIS",
            "CLIENT_SEARCH_PINPOINT",
            "CLIENT_CORPLOGIN",
            "CLIENT_MONOSPACE",
            "CLIENT_LIGHTER",
            "CLIENT_P11",
            "CLIENT_FIND_MY_DEVICE_WEB",
            "CLIENT_YOUTUBE_TV",
            "CLIENT_FITBIT_WEB",
            "CLIENT_CHORD",
            "CLIENT_FITBIT_FI",
            "CLIENT_GOOGLE_ANALYTICS_SERVING",
            "CLIENT_FONTS",
            "CLIENT_ASSISTANT_BARD",
            "CLIENT_NEST_GREENENERGY",
            "CLIENT_DEEPMIND_LABS",
            "CLIENT_ONE_PRESENCE",
            "CLIENT_TRANSPARENCY_REPORT",
            "CLIENT_GOOGLE_ONE_ML",
            "CLIENT_GMP_PARTNER_GALLERY",
            "CLIENT_MAKERSUITE",
            "CLIENT_ADS_ADMANAGER_TOS",
            "CLIENT_CHROME_REMOTE_DESKTOP",
            "CLIENT_SOJI",
            "CLIENT_WORKSPACE_LABS_SIGNUP",
            "CLIENT_AIDA",
            "CLIENT_TSP",
            "CLIENT_AI_SANDBOX",
            "CLIENT_LABS_TAILWIND",
            "CLIENT_GMAIL_TASK_ASSIST",
            "CLIENT_PIXEL_WEATHER",
            "CLIENT_GPAY_CATEGORY_BILLERS",
            "CLIENT_SUPPORT_CHANNELS_ZENDESK_WHATSAPP",
            "CLIENT_PAYMENTS_TRANSACTION_MONITORING",
            "CLIENT_DISCOVER_QUERY_RECOMMENDATIONS",
            "CLIENT_COMMUNICATION_PREFERENCE_CENTER",
            "CLIENT_PLAY_CONSOLE_DEVELOPER_IDENTITY_AND_ACCOUNTS",
            "CLIENT_GNP_ONLINE_EVALUATION",
            "CLIENT_LOCAL_SUGGESTED_SETS_DEMO_SERVER",
            "CLIENT_SEARCH_LABS",
            "CLIENT_CROWDSOURCE",
            "CLIENT_TARSIER",
            "CLIENT_WORKSPACE_SIDEKICK",
            "CLIENT_GOOGLE_PHOTOS_REMINISCING",
            "CLIENT_GEOX_CONTAMINATION",
            "CLIENT_CLOUD_MESSAGE_STORE",
            "CLIENT_IP_PROTECTION",
            "CLIENT_SEARCH_HAMSA",
            "CLIENT_ACCOUNT_LOCATION",
            "CLIENT_ANDROID_BACKUP_AND_RESTORE",
            "CLIENT_ADS_AWSM",
            "CLIENT_STARGATE",
            "CLIENT_ACCOUNT_MANAGEMENT",
            "CLIENT_USER_ACCOUNT_CREATION",
            "CLIENT_NETSENSE",
            "CLIENT_FITBIT_LABS",
            "CLIENT_LOCAL_SERVICES",
            "CLIENT_USER_FEEDBACK_SERVICE",
            "CLIENT_BARD_EVAL",
            "CLIENT_SCENARIO_BASED_SEEDING_HOME_WORK",
            "CLIENT_ACCOUNT_INTEGRITY_FEATURE_API",
            "CLIENT_LABS_BETTANY",
            "CLIENT_NECO_GENESIS",
            "CLIENT_FITBIT_CAPABILITIES",
            "CLIENT_ADS_MARKETING_AUTOMATION",
            "CLIENT_ANDROID_TELEMETRY_WESTWORLD",
            "CLIENT_DSPM_DETECTIVE_CONTROLS",
            "CLIENT_CAA_INSIGHTS",
            "CLIENT_SHOPPING_CARRIER_INFO",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MOBILE_GAIA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_NON_PERSONALIZED",
            "CLIENT_GWS_HOMEPAGE",
            "CLIENT_ADS_DESKTOP_ZWIEBACK",
            "CLIENT_ADS_DESKTOP_GAIA",
            "CLIENT_ADS_MOBILE_ZWIEBACK",
            "CLIENT_ADS_MOBILE_GAIA",
            "CLIENT_ADS_NON_PERSONALIZED",
            "CLIENT_ADS_TLD_NON_PERSONALIZED",
            "CLIENT_ADS_EOM",
            "CLIENT_ADS_TLD_EOM",
            "CLIENT_ADS_ADMANAGER_SIGNUP",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_GWS_TLD_MOBILE_GAIA_EXP",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_ADS_DESKTOP_GAIA_EXP",
            "CLIENT_ADS_MOBILE_ZWIEBACK_EXP",
            "CLIENT_ADS_MOBILE_GAIA_EXP",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_EXP",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_EXP",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_ADS_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_ADS_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_BOOTES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_ADS_DESKTOP_GAIA_BOOTES",
            "CLIENT_ADS_MOBILE_GAIA_BOOTES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ADS_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_ADS_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_ADS_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_ADS_MOBILE_GAIA_DELPHINUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_ADS_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_ADS_MOBILE_GAIA_ERIDANUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_GWS_TLD_MOBILE_GAIA_FOMAX",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_ADS_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_ADS_DESKTOP_GAIA_FOMAX",
            "CLIENT_ADS_MOBILE_GAIA_FOMAX",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_GWS_TLD_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_ADS_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_ADS_DESKTOP_GAIA_GEMINI",
            "CLIENT_ADS_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_ADS_DESKTOP_GAIA_HERCULES",
            "CLIENT_ADS_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_INDUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_ADS_DESKTOP_GAIA_INDUS",
            "CLIENT_ADS_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_INDUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_INDUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_INDUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_GWS_TLD_MOBILE_GAIA_LEO",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_LEO",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_ADS_MOBILE_ZWIEBACK_LEO",
            "CLIENT_ADS_DESKTOP_GAIA_LEO",
            "CLIENT_ADS_MOBILE_GAIA_LEO",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_LEO",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_LEO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_LEO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_LEO",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_MENSA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_ADS_DESKTOP_GAIA_MENSA",
            "CLIENT_ADS_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_MENSA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_MENSA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_MENSA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_NORMA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_NORMA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_ADS_DESKTOP_GAIA_NORMA",
            "CLIENT_ADS_MOBILE_GAIA_NORMA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_NORMA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_NORMA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_NORMA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_NORMA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ORION",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ORION",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ORION",
            "CLIENT_ADS_DESKTOP_GAIA_ORION",
            "CLIENT_ADS_MOBILE_GAIA_ORION",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ORION",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ORION",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ORION",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ORION",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_PISCES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_ADS_DESKTOP_GAIA_PISCES",
            "CLIENT_ADS_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_PISCES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_PISCES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_PISCES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_TLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_ADS_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_ADS_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ADS_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ADS_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ADS_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_ADS_DESKTOP_GAIA_TAURUS",
            "CLIENT_ADS_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_TLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ADS_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ADS_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ADS_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_GWS_TLD_MOBILE_GAIA_VIRGO",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_ADS_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_ADS_DESKTOP_GAIA_VIRGO",
            "CLIENT_ADS_MOBILE_GAIA_VIRGO",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_VIRGO",
            "CLIENT_LOGGED_CONTEXT",
            "CLIENT_IPGEO_REGION",
            "CLIENT_IPGEO_EVAL",
            "CLIENT_GWS_TACTILE_INITIAL_VIEWPORT",
            "CLIENT_GWS_MAPS_DESKTOP",
            "CLIENT_GWS_MAPS_MOBILE",
            "CLIENT_GWS_GMM_LOCATION_SHIFT",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_GAIA",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MAPS_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_MAPS_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MAPS_MOBILE_GAIA",
            "CLIENT_GWS_TLD_MAPS_MOBILE_ZWIEBACK",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_EXPERIMENTAL",
            "CLIENT_GWS_NONTLD_MAPS_MOBILE_EXPERIMENTAL",
            "CLIENT_SESSIONS",
            "CLIENT_MANUAL",
            "CLIENT_NONTLD_DEFAULT",
            "CLIENT_NO_LOCATION",
            "CLIENT_ONLY_LEGAL",
            "CLIENT_TESTING",
            "CLIENT_COARSEN_ALL_TESTING",
            "CLIENT_GWS_TLD_DESKTOP_ORACLE",
            "CLIENT_GWS_TLD_MOBILE_ORACLE",
            "CLIENT_GWS_NONTLD_DESKTOP_ORACLE",
            "CLIENT_GWS_NONTLD_MOBILE_ORACLE",
            "CLIENT_COMPARE_DL",
            "CLIENT_COMPARE_IP",
            "CLIENT_COMPARE_IPDL",
            "CLIENT_MAGICEYE_DIMENSIONS",
            "CLIENT_MAPS_GUIDE_DIRECTIONS",
            "CLIENT_SAFE_BROWSING",
            "CLIENT_GWS_NONTLD_DESKTOP",
            "CLIENT_GWS_NONTLD_MOBILE"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true
          ],
          "enumDescriptions": [
            "Unset client ID. Never use it in production code.",
            "Curio team (go/curio). Contact: curio-team@.",
            "OneGoogle Service (OGS): OGS will fetch the LocationContext for the frontends that have not talked to LES yet.",
            "Client id used by evaluation tools. Contact: davidreis@",
            "Same as CLIENT_EVALS, but less strict, so can be used to avoid a hack when some use cases needed to send the request twice with different client ID. Contact: bohdant@",
            "Client id used by go/unified-query-sourcing. Contact: query-sampling-team@",
            "Client id used by Play Books. Contact: ocean-team@",
            "Client id used by Bond team. Contact: sterman@ and/or id-devices-eng@",
            "Client id used by Chrome User Metrics Analysis (UMA, go/chrome-data)",
            "Client id used by DoubleClick Search. Contact: wdtseng@, ds3data@, go/ds",
            "Client id used by youtube QoE frontend. Contact: pfish@, kathyqian@, qoe-team@",
            "Client id used by youtube Real-Time QoE. Contact: jeffcohen@, tnavien@, qoe-team@",
            "Client id used by youtube QoE Livyatan. Contact: kathyqian@, gaozhiquan@, qoe-team@",
            "Client id used by YouTube serving frontend and shared by all downstreams of the frontend server. Contact: tubbs@, yt-serving-platform@",
            "Client ids used by YouTube Shorts. See go/oolong-changes-for-yt-le for details.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral.",
            "",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client id used by YouTube admin review tools. Contact: yurt-eng@",
            "Client id used by YouTube Bad Harvest (go/badharvest). Contact: bad-harvest-eng@",
            "Client id used by the speech team. Contact: xuedong@",
            "Client id used by Gmail team. Contact: shine@, lianglin@",
            "Client id used by Gmail/Spam. Contact: gmail-spam-eng@",
            "Client id used by chromecast web interface. Contact: pierred@, bquinlan@, eureka-team@",
            "Defaults to NONTLD_DEFAULT Contact: jamesjw@, pancetta-eng@",
            "Client id used by GLS (Google Location Server) Contact: lmohanan@, tsuwei@, lbs-team@",
            "Contact: feedback-eng@",
            "Client id used by Android Metrics team. Contact: androidmetrics-eng@",
            "Client id used by AdWords Usermgmt (go/usermgmt). Contact: timthom@, ads-usermgmt-eng@",
            "Client id used by appremoting VM management stack which is further used by Looking Glass and Developer Shell products. Contact: looking-glass-team@, hekate-eng@.",
            "Client id used by the login protections server. (go/hijacking) Contact: hijacking-eng@, danmogo@.",
            "Client id used by Actionable IPs. (go/actionable-ips). Contact: amirha@, ncmec-actionableips-eng@.",
            "Client id used by Display Ads. Contact: local-display@.",
            "CLIENT_DISPLAY_ADS_DEFAULT is the same as CLIENT_DISPLAY_ADS, but excludes postal code trimming. This client is used to make the ProcessLocationContext call.",
            "",
            "",
            "",
            "",
            "Client id used by Display Ads Preview Service. Contact: fletch-eng@.",
            "Client id used by Hobbes(go/hobbes). Contact: hobbes-team@google.com",
            "Client id used by Newsstand(go/dots). Contact: gnews-infra@.",
            "",
            "Client id used by Panoptic (News Ranking + Backend) Contact: polynews-eng@.",
            "Client id used by Google Docs. Contact: doplar-eng@, jameshong@",
            "Client id used by AdWords Express. Contact: boost-eng@, stephenleung@",
            "Client id used by TraceDepot server. Contact: tibrewal@, kjs@",
            "Client id used by MapsPro Contact: obrien@, jiazheng@",
            "Client id used by Madden (go/madden) Contact: madden-eng@",
            "Client id used by AccessFilter Contact: ishwarya@",
            "Client id used by Google Domains (go/domain-registrar) Contact: domain-registrar-eng@",
            "Client id used by Google Assistant (go/opa) Contact: assistant-infra-core@",
            "",
            "Client id user by Google Account Linking (go/account-linking) Contact: account-linking-team@",
            "Client id used by Legal Removals. Contact: legal-removals-eng@",
            "Client id used by Cloud Console (Pantheon) Contact: paninfra-sfo@.",
            "Client id used by Cloud New User for Free Trial Contact: coe-nu-eng@",
            "Client id used by Solutions Catalog Contact: coe-solutions@",
            "Client id used by cloud media access team, go/cloud-media-access Contact: cloud-media-access-team@",
            "Client id used by Dotorg G4NP Contact: g4np-eng@",
            "Client id used by Crash Internal Contact: crash-team@",
            "Client id used by Monlog in access/infrastructure Contact: monlog-eng@",
            "Client id used by GoogleVoice Contact: voice-eng@",
            "Client id used by Blogger Contact: blogger-tech@, eitzenb@",
            "Thor/Google Meet backend. Contact: comms-work-backend-team@.",
            "Client id used by News Contact: news-frontend-eng-team@.",
            "Client id used by Google Photos",
            "Client id used by Google Photos for inferred location tagging.",
            "Client id used by RankBrain Debug (go/rankbrain-debug).",
            "Client id used by Heterodyne (go/heterodyne) Contact: ph-eng@",
            "Client id used by fraudreview (go/fraudreview) Contact: pf-review-tools@",
            "Client id used by Jamboard (go/jamboard) for go/jamboard-scheduled-otas Contact: jamboard-eng@",
            "Client id used by Marconi (go/marconi) Contact: marconi-eng@",
            "Client id used by Aart (go/aart-docs) Contact: aart-team@",
            "Client id used by the Google Arts And Culture (go/artsandculture) Contact: ci-eng@",
            "Client id used by Youtube Ecommerce (go/ypc) Contact: ytr-eng@",
            "Client id used by Ares managed feature providers (go/project-ares) Contact: ares-eng@",
            "Client id used by LIS and the UUDE framework (go/uude) Contact: lis-eng@",
            "Client id used by Google Store smashberry (go/smashberry) Contact: smashberry-eng@",
            "Client id used by Dasher Auditing (go/dasher-auditing) Contact: dasher-auditing-eng@",
            "Client id used by the Shopping List Server (go/shopping-list-server) Contact: shoppinglist-eng@",
            "Client ID used by the Drive Item Suggest service (go/itemsuggest)",
            "Client ID used by Smart Books (go/smart-books) Contact: smart-books-team@",
            "Client ID used by GRADS (go/grads)",
            "Client ID used by AdsRoot (go/adsroot)",
            "Client ID used by Service Engine (go/seroot)",
            "Client ID used by Orbit (go/ytorbit)",
            "Client ID used by Project Fi (nova). This client was initially created for Nova aperture (go/aperture) but all Nova clients are recommended to use this one.",
            "Client ID used by Lena Signup Defaults (go/lena-prd)",
            "Client ID used by the Play Console (go/fc) Contact: play-dev-console-platform@",
            "Client ID used by Finsky Enterprise (go/pfw)",
            "Client ID used by Google Admin (go/google-admin)",
            "Client ID used by CryptAuth (go/cryptauth, go/authzen-pdd, go/gnubby-pdd)",
            "Client ID used by the GsaUniversalServer (go/gus)",
            "Client ID used by the TravelFrontendTransitServer web app.",
            "Client ID used by Home Cloud services (go/home-cloud)",
            "Client ID used by Google Shopping Express (go/gsx)",
            "Client ID used by Google Duo (go/duo)",
            "Client ID used by Gaia Frontend (go/gaiafe)",
            "Client ID used by Android Messages (go/bugle)",
            "Client ID used by Google Lens (go/lens) Contact: lens-frontend-server-eng@",
            "Client ID used by Chrome Web Store (go/cws)",
            "Client ID used by Actions on Google console (go/aog-console) Contact: actions-on-google-console-eng@",
            "Client ID used by Android TV Channels (go/android-tv-channels)",
            "Client ID used by Assistant Web Settings (go/assistant-settings-web-ui-design)",
            "Client ID used by Play User Data Server (go/play-user-data-server)",
            "Client ID used by Ads Integrity (go/ads-integrity) Contact: ads-integrity-risk@",
            "Client ID used by Ragnarok (go/ragnarok) Contact: ads-integrity-wat@",
            "Client ID used by Firebase Console (go/fireconsole) Contact: fireconsole-contrib@",
            "Client ID used by AoG Feed Validator (http://go/aog-feed-validator)",
            "Client ID used by Plumeria (go/plumeria-legal-eng-intro) Contact: plumeria-eng@",
            "Client ID used by Paisa (http://go/paisa) Contact: paisa-eng@",
            "Client ID used by Google Pay (go/googlepay)",
            "Client ID used by the Google Pay web serving stack.",
            "Client ID used by Google Wallet (go/wallet)",
            "Client ID used by Scroogled (go/scroogled). Contact: hijacking-team@.",
            "Client ID used by Waymo ride-hailing services. Client referenced in a silo: waymo/taas/frontend3/handlers/test_base.cc Contact: taas-offboard@, chauffeur-hailing@",
            "Client ID used by CROW team. Contact: crow-team@",
            "Client ID used by the Security Investigation Tool of GSuite Security Center(go/security-investigation-tool). Contact: gsc-sit-eng@",
            "Client ID used by the Event Threat Detection team (go/etd). Contact: etd-team@",
            "Client ID used by Play Location Server (go/play-location-server). Contact: play-experiment-team@",
            "Client ID used by Footplacer (go/footplacer). Contact: footplacer-eng@",
            "used by dasher commerce team (go/acom) Contact: dasher-commerce-eng@",
            "Client ID used by Social People Analytics (go/spa-docs). Contact: social-people-analytics@",
            "Client ID used by Contacts UI surfaces (go/web-contacts). Contact: contactsplus-eng@, custard-eng@",
            "Client ID used by Google Analytics (go/gafe4). Contact: gafe4-eng+code@",
            "Client ID used by Places API (go/places-api). Contact: geo-enterprise-metrics@",
            "",
            "Client ID used by Drive Web Frontend. Contact: drive-frontend-eng@",
            "Client ID used by Android OTA (go/android-ota). Contact: android-auto-ota-dev@",
            "Clients of nearby stores. Contact: payments-microapps-pek-team@",
            "Clients used by Fiber Address Service (gfiber-weaver-infra-team@).",
            "Client ID used by Support Content (go/supportcontent) Contact: support-content-eng@",
            "Logging anonymization for Offroad (GMM offline) search/suggest.",
            "Client id used by Google Ads Change History (go/ch). Contact: leonxie@, kluo@, ch-dev@",
            "Client ID used by Session Risk (go/session-risk). Contact: session-protection-eng@",
            "Client ID used by Alps (go/alps). Contact: address-understanding-team@",
            "Client ID used by discover for resolving locations according to the user's news preferences. Contact: newsx@",
            "Client Id for Assistant Snapshot.",
            "Client ID used by Area 120 Honeycomb (go/honeycomb) Contact: honeycomb-eng@",
            "Client ID used by Play Monetary Abuse service to detect location abuse. Contact: play-monetary-abuse@",
            "Client ID used by Small Business Advisors (GMB Assisted Activation). Contact: gmb-assisted-activation@",
            "Client ID used by GPA Feeds Ingestion. Contact: gpa-feeds-eng@",
            "Client ID used by EDU originality reports (go/plagiarism). Contact: plagiarism-eng@",
            "Client ID used by Paidtasks to grab user ipgeo information. Contact: 402-eng@",
            "Client ID used by Translate for country level IPGeo. Contact: website-translation-team@",
            "Client ID used by Funding Choices to determine the legal jurisdiction that a user belongs to, for example, GDPR (EEA) or CCPA (California), etc. More information: go/funding-choices Contact: oncall/xads, funding-choices-eng-core@",
            "Client ID used by Search Notifications (go/sno). Contact: now-push-eng-team@",
            "Client ID used by Visual Semantic Service (go/vss). Contact: vss-team@",
            "Client ID used by the Chrome Prefetch Proxy (go/chrome-p4)",
            "Wear OS clients Contact: wear-lon-backend@",
            "Client ID used by Payments Risk (go/risk-eng) Contact: payments-risk-team@",
            "Client ID used by Payments Orchestration/Orchestration2 server (go/o2) Contact: payments-orchestration-eng@",
            "Client ID used by Android TV IRDB (go/sabrina-irdb-service) Contact: project-axel-eng@",
            "Client ID used by Trends (go/trends-eng) Contact: trends@",
            "Client ID used by Colab (go/colab) Contact: colab-team@",
            "Client ID for Socratic (go/bloom) Contact: bloom-edu-eng@",
            "Client ID for go/ps1-location Contact: location-infra@",
            "Client ID for DDM Reporting Processing go/proc Contact: ddm-reporting-stateless@",
            "Client ID for go/hr-be Contact: homeroom-backend@",
            "Client ID for cars categorical Contact: cars-eng@",
            "Client ID used by Gpay MerchantVerticals VerticalsDiscoveryService go/vertical-discovery Contact: merchant-verticals-discovery-eng@",
            "Client ID used by reCAPTCHA's Account Protections team. Shared ID used by both Account Defender and SMS Fraud Detection services. go/recaptcha-account-defender-u-bad Contact: recaptcha-account-protections@",
            "Client ID used by reCAPTCHA Lite. go/recaptcha-asn-reputation-design-doc Contact: recaptcha-waf-eng@",
            "Client ID used by reCAPTCHA Fraud Prevention. go/recaptcha-fraud-geocoding Contact: recatpcha-fraud@",
            "Client ID used by AutoNT DNS mapchecker module. go/autont Contact: autont-team@",
            "Client ID used by Transparency for All Ads Report. go/tfaar Contact: tfaa-report-eng@",
            "Client ID used by GCIP Location Service. go/cicp-team Contact: cicp-eng@",
            "Client ID used by OneStack Metric Collection service.",
            "Client ID used by GPay Transit TapAndPay Frontend Service go/transit-recommended-agencies Contact: tp2-transit-eng@",
            "Client ID used by Chronicle Security (go/malachite). go/chronicle:theres-waldo Contact: malachite-dip-engg@ Contact: malachite-eng@",
            "Client ID used by the UI for Chronicle Security (go/malachite). go/chronicle-i18n-design Contact: chronicle-ui@ Contact: malachite-eng@",
            "Client ID used by GPay Merchant Spot Onboarding Tool (b/186640782). Contact: gtech-google-pay-food-fte@ Contact: edisonc@",
            "Client ID used by Ads scraping tool owned by Ads ExpandedMatch. go/ads-scraping-tool Contact: ads-expmatch-eng@",
            "Client ID for cloud support portal frontend go/xpp-lite Contact: xpp-eng@",
            "Client ID used by the LaMDA team. Contact: srrvnn@, lamda-team@ // NOTYPO NOTYPO",
            "Client ID used by Access Redirection Service. (go/redirection-service) contact: access-sre-fe@google.com",
            "Client ID used by Pinpoint (go/jsuite-pinpoint) Contact: backlight-eng@",
            "Client ID used by Google Shopping Order History (go/shopping-order-history)",
            "Client ID used by Nest camera cloud team contact: nest-camera-cloud@google.com",
            "Client ID used by Panoptic SxS contact: yukang@, deepakverma@, local-fcr@google.com",
            "Client ID used for About This Page external API. contact: beaton, diner-team@, go/project-diner",
            "Client ID used for the Photos Analytics marketing pipeline. contact: guillo, photos-analytics@",
            "Client ID for the gmscompliance server (UDEVS) contact: gmscore-trust-team@google.com",
            "Client ID for Analytics Collection contact: tag-serving-eng@, go/tag-serving",
            "Client ID for play console android vitals contact: play-dev-quality-all@google.com",
            "Client ID for crashlytics play console crashes contact: play-dev-quality-all@google.com",
            "Client ID for Payments Merchant Stories contact: merry-eng@, go/merry",
            "Client ID for Cloudtop Connectivity contact: cloudtop-eng@, go/cloudtop",
            "Client ID for Cloud Web (cloud.google.com) contact: cloudx-platform-eng@",
            "Client for go/speakeasy-meet-consent-frontend Contact: ccp-pegasus@",
            "Client for Display & Video 360 (DV3, Xbid) frontend. Contact: qypeng@, xbid-fe-eng@",
            "Client for lending data manager. Contact: nest-data-infra-eng@",
            "Client for ChromeOS Data Fresnel service. Contact: chromeos-data-eng@",
            "Client for PPN team to provide VPN service.",
            "Client ID used by Geo API Platform (go/geo:api). Contact: geo-apis-platform@",
            "Client for Google One security to access Oolong data. Contact: g1-security-eng@",
            "Client ID used by the Google TV Web player (go/lava) Contact: lava-eng@",
            "Client ID used by the dynamite server. Contact: dynamite-eng@",
            "Client ID used by the bce-client-connector. Contact: bce-client-connector-eng@",
            "Client ID used by go/rde team pipeline. Contact: rde-team@.",
            "Client ID used by Pinpoint UI tools (go/pinpoint). Contact: pinpoint-team@",
            "Client ID for Corplogin Contact: sso-team@",
            "Client ID for Monospace (go/monospace) Contact: monospace-team@",
            "Client ID used by the Lighter (go/lighter). Contact: lighter-backend-eng@",
            "Client ID used by P11 (go/p11-eng) Contact: eleven-sw-eng@",
            "Client ID used by the new Find My Device website. Contact: fmd-eng@",
            "Client ID used by Youtube TV. Contact: ott-platform-serving",
            "Client ID used by Fitbit WebAccounts Contact fitbit-uam@",
            "Client ID used for Chord (go/chord-g3doc) Contact: chord-eng@",
            "Client ID used by Fitbit-Fi Contact fdp-gallery@",
            "Client ID used by Google-Analytics-Serving Contact ga-gold-query-engine@",
            "Client ID used by Google Fonts Contact fonts-eng@",
            "Client ID used by project Bard Contact bard-team@",
            "Client ID used by Nest Renew (go/apollo-eng) Contact apollo-energy-eng@",
            "Client ID used by DeepMind Labs Contact deepmind-goodall@",
            "Client ID used by One Presence Profiles Contact mcf-profiles-eng-team@",
            "Client ID used by Transparency Report (go/transparency-eng) Contact: transparency-report-leads@",
            "Client for Google One ML team to access Oolong data. Contact: g1-ml-eng@",
            "Client for GMP Partner Gallery team to access Oolong data. Contact: gmppartnergallery-team@",
            "Client for MakerSuite. Contact: makersuite-team@",
            "Client for Ad Manager ToS Contact: drx-fe-infra@",
            "Client ID for Chrome Remote Desktop. contact: chromotin-eng-team@, go/chromoting",
            "Client for OSLO Soji (go/soji). Contact: soji-team@",
            "Client ID for Workspace labs signup page. Contact: workspace-labs-signup-eng@",
            "Client AIDA Contact: aida-api-team@",
            "Client ID for Trust Signals Platform Contact: trust-signals-eng@",
            "Client Id for AI Test Kitchen Contact: ai-sandbox-eng@",
            "Client Id for Labs Tailwind Contact: labs-tailwind-eng-team@",
            "Client Id for Gmail Task Assist. Contact: task-assist-eng@",
            "Client Id for Pixel Weather service. Contact: pixel-apps-weather-boq-team@",
            "Client Id for GPay Geo-based category billers. (go/gpay-category-biller-suggestions-design-doc) Contact: nityam-eng@, gpay-server-infra@",
            "Client Id for Support Channels WhatsApp Zendesk integration. (go/cecsi-whatsapp-dd) Contact: voice-channels-eng@",
            "Client ID used by Payments Anti-Financial Crimes Transaction Monitoring pipeline to fetch country-level IPGeo information.",
            "Client ID for the offline batch pipeline creating the Discover query recommendation corpus.",
            "Client id used by Preference Center (go/preference-center). Contact: preference-center-eng@",
            "Client ID used by Developer Identity and Accounts Contact: play-dev-dia-epu@google.com.",
            "Client ID used by GNP Online Evaluation Contact: gnp-ginger-eng@google.com",
            "Client ID used by local suggested sets demo server (go/local-sets-demo-server-dd) Contact: local-sets-quality@",
            "Client ID used by Search Labs Contact: search-labs-frontend@google.com",
            "Client ID for Crowdsource Contact: crowdsource-eng@google.com",
            "Client ID for Tarsier Contact: tarsier-team@google.com",
            "Client Id for WorkSpace SideKick. Contact: kopi-eng@",
            "Client id used by Google Photos for reminising features.",
            "Client Id for Geox contamination. Contact: amt-geox-core@",
            "Client Id for CloudMessageStore. Contact:tachyon-backend-eng@",
            "Client Id for IP Protection Contact: ip-protection-team@",
            "Client Id for Search MCF Hamsa. Contact: search-mcf-hamsa@",
            "Client Id for Account Location (go/accountlocation). Contact emmett-eng@google.com, compliance-signals-eng@google.com",
            "Client Id for Android Backup & Restore (http://go/br-home). Contact android-backup-server-eng@google.com",
            "Client Id for Google Ads AWSM. Contact awsm-eng@google.com",
            "Client Id for Stargate satellite messaging. Contact dune-server-eng-team@google.com",
            "Client Id for Account Management (go/ams). Contact account-management-eng@google.com, compliance-signals-eng@google.com.",
            "Client Id for User Account Creation (go/id-eco-infra:account-creation). Contact account-ecosystem-infra-team@google.com, compliance-signals-eng@google.com.",
            "Client Id for Netsense (go/netsense). Contact trapdoor-team@google.com,",
            "Client ID used by Fitbit Labs (go/fitbit-labs). Contact fitbit-labs-eng@",
            "Client ID used by Local Services Ads. Contact sab-eng@",
            "Client ID used by the User Feedback Service (go/user-feedback-service). Contact ads-integrity-transparency-team@",
            "Client ID used by Bard/Gemini evals to spoof location data. Contact bard-eval-infra@ This should only be used with spoofed location data. For real user data, follow the onboarding steps at go/use-current-location",
            "Client ID used by the Scenario-based Seeding Home & Work seeder. Contact loki-prod@google.com",
            "Client ID used by the ADI Feature API (go/adi-feature-api)",
            "Client Id for Labs Bettany Contact: bettany-eng@",
            "Client Id for neco-genesis Contact: neco-eng@",
            "Client ID used by Fitbit Capabilities Service (go/fitbit-capabilities). Contact fitbit-app-platform@",
            "Client ID for Ads Marketing Automation (go/ce-ama) Contact: ads-marketing-automation-eng@",
            "Client ID for Android Telemetry Westworld Contact: android-telemetry-infra-server@",
            "Client ID for Data Security Posture Management (DSPM) Detective Controls Contact: dspm-controls-eng@",
            "Client ID for CAA Insights Contact: policy-decision-service-eng@",
            "Client ID for Shopping Carrier Info Contact: gpay-jp-eng-all@",
            "Gws. Contact: oolong-team@.",
            "",
            "",
            "",
            "",
            "",
            "Search Ads clients providing similar user location to Search.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Ad manager user sign up location by IP address",
            "Use these within GWS iff the project is not using TLD (e.g. www.google.ch).",
            "",
            "",
            "",
            "Client Ids for Assistant via Oolong Service.",
            "",
            "",
            "",
            "Gws tld experimental clients",
            "",
            "",
            "",
            "Ads experimental clients",
            "",
            "",
            "",
            "Gws nontld experimental clients",
            "",
            "",
            "",
            "Assistant experimental clients",
            "",
            "",
            "",
            "Clients for Andromeda experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Bootes experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Cassiopeia experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Delphinus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Eridanus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Fomax experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Gemini experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Hercules experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Indus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Leo experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Mensa experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Norma experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Orion experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Pisces experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Reticulum experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Sagittarius experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Taurus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Ursa Major experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Virgo experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Use for LoggedContext re-geocoding. Do not use for LocationContext processing.",
            "Client useful for country level IPGeo. It accepts any country regardless of the confidence. Do not use this client for any location other than country. It can be used while migrating from legacy googledata/ipgeo index. Contact: oolong-team@.",
            "Client similar to CLIENT_IPGEO_REGION, but adapted to IPGeo Eval purpose. Contact: ipgeo-team@.",
            "Tactile initial viewport policy. Contact: oolong-team@ Note that maps clients don't adhere to TLD restrictions.",
            "",
            "",
            "",
            "Maps clients that use glassbox.",
            "",
            "",
            "",
            "",
            "",
            "Experimental maps clients.",
            "",
            "Session IP geocoding. Contact: oolong-team@.",
            "Use this client ID if you are not using oolong legal/quality annotations. A sample usecase is reverse geocoding a set of lat/lngs or mids/featureids. NOTE: do not use oolong annotations if this client is set.",
            "Default client to use when TLD restrictions are not applied. This policy can change without notice. If you care about particular quality assumptions, then create a custom client id. Contact: oolong-team@",
            "Does NOT annotate anything with UNIQUE_SELECTED_FOR_USER_LOCATION",
            "Client id that only applies legal annotations.",
            "Use for testing only. Never use this in production.",
            "",
            "Used for oracle eval.",
            "",
            "",
            "",
            "Clients used to compare different location source combinations.",
            "",
            "",
            "Client used for country field in Magic Eye dimensions (go/core-dimensions).",
            "Used for the go/mapsguide directions prototype.",
            "Deprecated clients SafeBrowsing Team. Contact: anov@.",
            "Use CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK or _GAIA Contact oolong-team@",
            "Use CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK or _GAIA Contact oolong-team@"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of this set.",
          "type": "string"
        },
        "policyResult": {
          "$ref": "LocationUnifiedPolicyResult",
          "description": "The policy result that corresponds to the alternate policy."
        },
        "sourceDescription": {
          "description": "The source description for this result in the alternate policy.",
          "enum": [
            "SOURCE_DESCRIPTION_UNSPECIFIED",
            "FROM_YOUR_INTERNET_ADDRESS",
            "FROM_YOUR_LOCATION_HISTORY",
            "BASED_ON_YOUR_LOCATION_HISTORY",
            "FROM_YOUR_DEVICE",
            "BASED_ON_YOUR_PAST_ACTIVITY",
            "FROM_YOUR_PLACES_HOME",
            "FROM_YOUR_PLACES_WORK"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedExtractorFlags": {
      "id": "LocationUnifiedExtractorFlags",
      "properties": {
        "gwsJurisdictionCountryExtractorEnabled": {
          "type": "boolean"
        },
        "hostDomainExtractorEnabled": {
          "type": "boolean"
        },
        "ipAlternateExtractorEnabled": {
          "type": "boolean"
        },
        "ipExtractorEnabled": {
          "type": "boolean"
        },
        "queryExtractorEnabled": {
          "description": "If true, any query found in the request will be included in geocoding and the location context.",
          "type": "boolean"
        },
        "uuleCookieExtractorEnabled": {
          "type": "boolean"
        },
        "xgeoHeaderExtractorEnabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LocationUnifiedFeatureIdProto": {
      "description": "A copy of //geostore/base/proto/featureid.proto. Because Oolong descriptors are intended to be publicly available, we don't want to depend on other protos. This proto is tag-compatible with the original. Note that this could be used for non-Oyster identifiers if distinguished by some appropriate producer. Otherwise, it is assumed to be an Oyster ID. The code in logs/storage/validator/logs_validator_traits.cc treats this type as if it were annotated as ST_LOCATION.",
      "id": "LocationUnifiedFeatureIdProto",
      "properties": {
        "cellId": {
          "description": "The S2CellId corresponding to the approximate centroid of this feature.",
          "format": "uint64",
          "type": "string"
        },
        "fprint": {
          "description": "A 64-bit fingerprint used to distinguish between multiple features at the same location.",
          "format": "uint64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedFeatureReference": {
      "description": "A featurelet in the location result's hierarchy. This references the feature pool for base data (like names and geometry), and contains additional fields that are set by the policy.",
      "id": "LocationUnifiedFeatureReference",
      "properties": {
        "alternateAnnotations": {
          "description": "Alternate annotations applied to this featurelet.",
          "items": {
            "$ref": "LocationExtractorFeatureletAnnotationSet"
          },
          "type": "array"
        },
        "annotations": {
          "description": "Annotations applied to this featurelet by the policy store.",
          "items": {
            "enum": [
              "TRIMMED_BY_QUALITY_FILTERING"
            ],
            "enumDescriptions": [
              "Indicate that a featurelet should not be used. This annotation is applied during ApplyQualityFiltering for feature \"trimming\" or added by the PolicyStore as a result of quality score calculation."
            ],
            "type": "string"
          },
          "type": "array"
        },
        "confidence": {
          "description": "The confidence that this featurelet is correct.",
          "format": "float",
          "type": "number"
        },
        "featureId": {
          "$ref": "GeostoreFeatureIdProto",
          "description": "The feature ID, which is used as key for looking up the featurelet from the LocationContext's feature pool."
        }
      },
      "type": "object"
    },
    "LocationUnifiedFieldOfView": {
      "description": "A description of the field of view of a camera. Used in conjunction with location and rotation to indicate how much of a scene is being rendered inside the camera.",
      "id": "LocationUnifiedFieldOfView",
      "properties": {
        "fieldOfViewXDegrees": {
          "description": "Horizontal degrees of view, i.e. the angle between the left and right clipping planes.",
          "format": "float",
          "type": "number"
        },
        "fieldOfViewYDegrees": {
          "description": "Vertical degrees of view, i.e. the angle between the top and bottom clipping planes.",
          "format": "float",
          "type": "number"
        },
        "screenWidthPixels": {
          "description": "Pixel dimensions of a device screen. This is currently only used by Tactile and should not be used elsewhere without good reason, at which point we would probably rename the field. Pixels are assumed to be square.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationUnifiedInterpretationData": {
      "id": "LocationUnifiedInterpretationData",
      "properties": {
        "query": {
          "description": "Serialized s-expr annotated with :loc.",
          "type": "string"
        },
        "term": {
          "description": "This group provides details about what we found in the query as a set of non-overlapping 'terms', each referring to a separate political feature. E.g. query of \"Pizza near Mt View CA\" would (in one of the geocodes) contain two terms: \"Mt View\" and \"CA\". All terms are given in left-to-right order. Note that not all featurelets necessarily occur as a term. Some may have been inferred from the political hierarchy. E.g. in the example above there would be a featurelet for the US after the one for \"CA\".",
          "items": {
            "$ref": "LocationExtractorInterpretationTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLatLng": {
      "description": "A latitude and longitude used to describe a point. Units are degrees x 10^7 and rounded to the nearest integer). When used to describe a point, the latitudes should be in the range +/- 90 degrees and the longitude should be in the range +/- 180 degrees (inclusive). LatLng message was also used to describe a span, but it turns out full longitude span (360 degrees * 10^7) does not fit in signed int32. Thus, using LatLng for a span is deprecated. Please use LatLngRect instead. The code in logs/storage/validator/logs_validator_traits.cc treats this type as if it were annotated as ST_LOCATION.",
      "id": "LocationUnifiedLatLng",
      "properties": {
        "latitudeE7": {
          "format": "int32",
          "type": "integer"
        },
        "longitudeE7": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLatLngRect": {
      "description": "A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". The rectangle is considered to be a closed region, i.e. it includes its boundary. The latitude bounds must be in the range -90 to 90 degrees inclusive, and the longitude bounds must be in the range -180 to 180 degrees inclusive. Both points must be normalized, with lo.latitude <= hi.latitude. If lo.latitude > hi.latitude, the latitude range is considered empty and there will be a warning the first 100 times Oolong sees such proto. \"lo\" point is the lower-left corner and \"hi\" point is the upper-right corner of the resulting rectangle. Various special cases include: - If lo == hi, the rectangle consists of a single point. - If lo.longitude > hi.longitude, the longitude range is \"inverted\" (the rectangle crosses the 180 degree longitude line). - If lo.longitude == -180 degrees and hi.longitude = 180 degrees, the rectangle includes all longitudes. - If lo.longitude = 180 degrees and hi.longitude = -180 degrees, the longitude range is empty. The code in logs/storage/validator/logs_validator_traits.cc treats this type as if it were annotated as ST_LOCATION.",
      "id": "LocationUnifiedLatLngRect",
      "properties": {
        "hi": {
          "$ref": "LocationUnifiedLatLng"
        },
        "lo": {
          "$ref": "LocationUnifiedLatLng"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationAnnotation": {
      "description": "Used to distinguish locations within a location context (e.g., indicate those locations selected by a policy).",
      "id": "LocationUnifiedLocationAnnotation",
      "properties": {
        "details": {
          "description": "Optional debug information associated with this annotation. For human consumption only.",
          "type": "string"
        },
        "type": {
          "description": "Indicates the purpose of this annotation.",
          "enum": [
            "UNKNOWN_ANNOTATION",
            "UNIQUE_SELECTED_FOR_CONTEXT",
            "UNIQUE_SELECTED_FOR_USER_LOCATION",
            "SELECTED_FOR_EXPLICIT_IMMEDIATE_LOCATION",
            "UNIQUE_SELECTED_FOR_NON_QUERY_ROLES",
            "UNIQUE_TRUSTED_CURRENT_LOCATION",
            "UNIQUE_TRUSTED_CURRENT_COUNTRY",
            "UNIQUE_JURISDICTION_COUNTRY",
            "SELECTED_FOR_JURISDICTION_COUNTRIES",
            "DOES_NOT_CONFORM_TO_TLD",
            "MARKED_FOR_POLICY_REMOVAL",
            "FINE_GRAINED_CURRENT_LOCATION",
            "UNIQUE_SELECTED_FOR_CONTEXT_EXPERIMENTAL_QREF",
            "SELECTED_FOR_RTBF_COUNTRIES",
            "UNIQUE_SELECTED_FOR_RTBF_DOMAIN",
            "PRODUCER_ABLATED_FOR_EXPERIMENT",
            "SELECTED_FOR_AREA_OF_INTEREST",
            "SELECTED_FOR_FREQUENT_LOCATION",
            "STRIPPED_FROM_LIVE_RESPONSE",
            "UNIQUE_SELECTED_FOR_ROLE",
            "LOW_CONFIDENCE",
            "DO_NOT_USE_FOR_SEARCHING",
            "EXPERIMENTAL",
            "UNIQUE_SELECTED_LOCALE",
            "UNIQUE_SELECTED_FOR_SEMANTIC_USER_LOCATION",
            "ADDITIONAL_USER_LOCATION",
            "REMOVED_DEVICE_LOCATION"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors.",
            "A descriptor with this annotation has been selected by some policy as the single descriptor to be used for this request. This selects a result that prefers explicit location set by the user over our best guess for the user location. If you think you need to use this annotation, please contact oolong-team@ first. Use SELECTED_FOR_EXPLICIT_IMMEDIATE_LOCATION and UNIQUE_SELECTED_FOR_USER_LOCATION, if you need access to user provided locations and/or implicit user locations respectively. Invariant: At most one descriptor in a context can have an annotation of this type.",
            "A descriptor with this annotation has been selected by some policy as the single descriptor to be used for current user location (physical location). Note that this is our best guess about actual user location which may be spoofed by malicious user. If you need stronger guarantees about user country of presence, use UNIQUE_TRUSTED_CURRENT_LOCATION annotation defined below (if in doubt, contact oolong-team for advise). Invariant: At most one descriptor in a context can have this annotation.",
            "Descriptors with this annotation have been selected by the policy as the set of locations that can be used as explicit immediate locations. Note that the set will not contain current user location (e.g. location with annotation UNIQUE_SELECTED_FOR_USER_LOCATION). It may contain query location, viewport or a location that has been specified by the user for a given request, such as the &near param. For more details see: https://docs.google.com/a/google.com/document/d/1aTiZG-r-hrLRGiGCJvjIAk45hUPSi07idxySzvzaQvk/edit",
            "A descriptor with this annotation has been selected by some policy as the single descriptor to be used for this request, excluding any locations present in the user query. This will be the descriptor that would have the annotation UNIQUE_SELECTED_FOR_CONTEXT if all QUERY role descriptors were removed from the context. Invariant: At most one descriptor in a context can have this annotation.",
            "A descriptor with this annotation has been selected by some policy as the single descriptor in the context that can be trusted to represent the user's current location (i.e., it is not user specified and is hard to spoof). TLD does not affect this annotation. This annotation can be used to apply restrictions on services based on a user's \"physical\" location. DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team (and possibly Legal). It can only be used in very specific circumstances.",
            "A descriptor with this annotation has been selected by some policy as the single descriptor in the context that can be trusted to represent the user's current country (i.e., it is not user specified and is hard to spoof). TLD does not affect this annotation. This annotation can be used to apply restrictions on services based on a user's \"physical\" location. This is the country-level-only version of UNIQUE_TRUSTED_CURRENT_LOCATION. DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team (and possibly Legal). It can only be used in very specific circumstances.",
            "A descriptor with this annotation has been selected by some policy as the single descriptor in the context that represents the country of jurisdiction for the user. Some restrictions can be applied based on the location country in this descriptor. This annotation can be used to apply restrictions on services based on a user's \"logical\" location. Results annotated with UNIQUE_JURISDICTION_COUNTRY are not guaranteed to have a TYPE_COUNTRY feature if the result is within a disputed area. See also SELECTED_FOR_JURISDICTION_COUNTRIES below. DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team (and possibly Legal). It can only be used in very specific circumstances.",
            "SELECTED_FOR_JURISDICTION_COUNTRIES is always added to the result annotated with UNIQUE_JURISDICTION_COUNTRY. If the UNIQUE_JURISDICTION_COUNTRY result matches a disputed area in http://google3/googledata/location/unified/location_service/disputed_areas_jurisdiction_countries.txt, then SELECTED_FOR_JURISDICTION_COUNTRIES is additionally added to synthetic results with the country codes specified in that file. For example, if a result in Crimea is annotated with UNIQUE_JURISDICTION_COUNTRY, then SELECTED_FOR_JURISDICTION_COUNTRIES will be present: - on the Crimea location; - on a synthetic result in Russia (with country code RU); and - on a synthetic result in Ukraine (with country code UA). DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team (and possibly Legal). It can only be used in very specific circumstances.",
            "A descriptor with this annotation means that it was an implicit (ie IP, not NEAR) location and the country of the result does not match the country of the TLD. Results with these annotations should not be used without first consulting oolong-team.",
            "This annotation means that the descriptor is not allowed by the policy that was applied. It may appear in alternate annotations in a merged LocationContext. Results with this annotation should be removed when the merged LocationContext is split. For example, Ads essential-only mode clients forbid the use of UULE device locations. Results with this annotation should generally not have any of the \"Search selected\" or \"Legal selected\" annotations.",
            "A descriptor with this annotation means that it is a very precise user location, such as a GPS location. This annotation is applied to locations with UNIQUE_SELECTED_FOR_USER_LOCATION annotation.",
            "This annotation has been introduced for the purpose of transitioning from LES query geocoding to QREF query geocoding. Clients who wish to use QREF query annotations, should consider using this annotation as a replacement for UNIQUE_SELECTED_FOR_CONTEXT. It has identical semantics to UNIQUE_SELECTED_FOR_CONTEXT with a difference that QREF annotations are used. Note that this is a temporary annotation and should eventually be removed once migration to QREF is complete.",
            "This annotation selects the countries for RTBF content restriction. The union of restrictions of all countries with this annotation should be applied.",
            "This annotation selects the country based on which all european RTBF content restrictions should be applied if the selected country is european.",
            "This annotation indicates that the result has a producer that was removed as asked by the Oolong__producers_to_ablate flag and re-added.",
            "This annotation indicates that the location has been selected by some policy as an area of interest, i.e. the location is of significance to the user. Areas of interest are usually implicit, i.e. not part of the current query. See go/oolong-aoi. DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team.",
            "This annotation indicates that the location has been selected by some policy as a frequent location. Frequent locations are places where we expect a user to spend extended amounts of time. See go/oolong-serving-flops. DO NOT USE THIS ANNOTATION WITHOUT TALKING TO oolong-team.",
            "This annotation should never been seen at serving time, yet it will be present in logs to indicate when a specific location was stripped at serving time. For example, when a location is not accessible by any location view.",
            "DEPRECATED annotations",
            "",
            "",
            "",
            "Use UNIQUE_SELECTED_FOR_USER_LOCATION instead",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationAttributesProto": {
      "description": "Supplemental attributes for a location that may affect search results. Next Id: 24",
      "id": "LocationUnifiedLocationAttributesProto",
      "properties": {
        "activityRecord": {
          "description": "The user detected activity.",
          "items": {
            "$ref": "LocationUnifiedActivityRecord"
          },
          "type": "array"
        },
        "adsConfidence": {
          "description": "Confidence for use in ads. Might be different from the confidence in the descriptor. Currently only used for locations with producer TRAVEL_STATE_INTENT.",
          "format": "float",
          "type": "number"
        },
        "altitudeMetersFromGround": {
          "description": "Altitude in meters, from ground level.",
          "format": "double",
          "type": "number"
        },
        "bearingAccuracyDegrees": {
          "description": "The accuracy of bearing in degrees, based on GMS Core calculations on two latest location points. The actual bearing should be within bearing_degrees ± bearing_accuracy_degrees.",
          "format": "int32",
          "type": "integer"
        },
        "bearingDegrees": {
          "description": "The direction in degrees in which the client device was moving. Must be in the range 0 to 359. 0 represents north and 90 is east.",
          "format": "int32",
          "type": "integer"
        },
        "boardedTransitVehicleToken": {
          "description": "An opaque token to represent a transit vehicle that a user is riding. This field is always server generated and encoding scheme is determined by the server. Currently, Tactile's local encoding (web-safe base64 prefixed by \"B\") is used.",
          "type": "string"
        },
        "carrierIpType": {
          "enum": [
            "CARRIER_IP_UNKNOWN",
            "CARRIER_IP_NOT_CARRIER",
            "CARRIER_IP_MOBILE"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "deviceLocationRatio": {
          "description": "FOR OOLONG INTERNAL USE ONLY! TODO(b/142046202) Migrate this field outside of Location Descriptor. Ratio of device location versus other signals that we have for this user. Note that this is a per-user attribute, not a per-location attribute.",
          "format": "float",
          "type": "number"
        },
        "fieldOfView": {
          "$ref": "LocationUnifiedFieldOfView",
          "description": "The field of view of a camera."
        },
        "headingDegrees": {
          "description": "The direction in degrees in which the client device was pointed. Must be in the range 0 to 359. 0 represents north and 90 is east.",
          "format": "int32",
          "type": "integer"
        },
        "inference": {
          "enum": [
            "INFERENCE_NONE",
            "INFERENCE_HULK_HEURISTIC",
            "INFERENCE_HULK_CLASSIFIED",
            "INFERENCE_HULK_UNKNOWN",
            "INFERENCE_PLM"
          ],
          "enumDescriptions": [
            "this is not an inferred place",
            "",
            "HULK Classifier is used instead of heuristic.",
            "",
            ""
          ],
          "type": "string"
        },
        "ipRangeConfidence": {
          "format": "float",
          "type": "number"
        },
        "manualEntry": {
          "enum": [
            "MANUAL_ENTRY_NONE",
            "MANUAL_ENTRY_UNKNOWN",
            "MANUAL_ENTRY",
            "MANUAL_ENTRY_DROPPED_PIN",
            "MANUAL_ENTRY_HIGH_LEVEL",
            "MANUAL_ENTRY_STALE",
            "MANUAL_ENTRY_INSUFFICIENT_LOCATIONS"
          ],
          "enumDescriptions": [
            "this place was not manually entered",
            "",
            "Not stale manual entry of an address",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "personalizedLocationAttributes": {
          "$ref": "LocationUnifiedPersonalizedLocationAttributes",
          "description": "FOR OOLONG INTERNAL USE ONLY! TODO(b/142046202) Migrate this field outside of Location Descriptor. Additional Oolong-specific attributes of the location."
        },
        "plmSourceLocationCount": {
          "description": "FOR OOLONG INTERNAL USE ONLY! TODO(b/142046202) Migrate this field outside of Location Descriptor. Total number of locations (across all events) used in PLM inference.",
          "format": "int32",
          "type": "integer"
        },
        "plmType": {
          "deprecated": true,
          "enum": [
            "PLMTYPE_UNKNOWN",
            "PLMTYPE_FIRST",
            "PLMTYPE_SECOND",
            "PLMTYPE_THIRD",
            "PLMTYPE_FOURTH",
            "PLMTYPE_FIFTH",
            "PLMTYPE_SIXTH",
            "PLMTYPE_SEVENTH",
            "PLMTYPE_EIGHTH",
            "PLMTYPE_NINTH"
          ],
          "enumDescriptions": [
            "",
            "Order by confidence.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "rollDegrees": {
          "description": "Clockwise rotation around the line of sight (i.e. vector (0, 0, -1) in Eye Coords). Zero means that y points up in Screen Coords; 180 gives an upside down view, where y points down in Screen Coords. Allowed range is [0, 360). For out-of-range values, the behavior is undefined.",
          "format": "int32",
          "type": "integer"
        },
        "speedAccuracyKph": {
          "description": "The accuracy of the speed in kilometers per hour, meaning that the actual speed should be within speed_kph ± speed_accuracy_kph.",
          "format": "int32",
          "type": "integer"
        },
        "speedKph": {
          "description": "The speed in kilometers per hour at which the client device was moving.",
          "format": "int32",
          "type": "integer"
        },
        "tiltDegrees": {
          "description": "Rotation where zero points down, 180 points up and 90 points to horizon. Allowed range is [0, 180]. For out-of-range values, the behavior is undefined.",
          "format": "int32",
          "type": "integer"
        },
        "viewportSearchOptions": {
          "enum": [
            "VIEWPORT_SEARCH_OPTIONS_UNSPECIFIED",
            "VIEWPORT_SEARCH_OPTIONS_AROUND",
            "VIEWPORT_SEARCH_OPTIONS_RESTRICT",
            "VIEWPORT_SEARCH_OPTIONS_FILTER_ONLY",
            "VIEWPORT_SEARCH_OPTIONS_FORCE_AROUND"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "weekSecondConfidence": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationContext": {
      "description": "A container for passing and processing the set of locations associated with a particular request. Next available tag: 11",
      "id": "LocationUnifiedLocationContext",
      "properties": {
        "clientId": {
          "description": "The client ID that was used for annotating this location context (if any). This field is set accordingly by the policy annotation.",
          "enum": [
            "CLIENT_UNKNOWN",
            "CLIENT_CURIO",
            "CLIENT_ONE_GOOGLE_SERVICE",
            "CLIENT_EVALS",
            "CLIENT_EVALS_ONESHOT",
            "CLIENT_EVALS_UQS",
            "CLIENT_BOOKS",
            "CLIENT_BOND",
            "CLIENT_CHROME_UMA",
            "CLIENT_DOUBLECLICK_SEARCH",
            "CLIENT_YOUTUBE_ISP_RATING",
            "CLIENT_YOUTUBE_REAL_TIME_QOE",
            "CLIENT_YOUTUBE_QOE_LIVYATAN",
            "CLIENT_YOUTUBE",
            "CLIENT_YOUTUBE_SHORTS_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_SHORTS_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_SHORTS_MOBILE_GAIA",
            "CLIENT_YOUTUBE_SHORTS_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_LES",
            "CLIENT_YOUTUBE_VIRAL_EXP_DESKTOP_GAIA",
            "CLIENT_YOUTUBE_VIRAL_EXP_DESKTOP_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_EXP_MOBILE_GAIA",
            "CLIENT_YOUTUBE_VIRAL_EXP_MOBILE_ZWIEBACK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_AXOLOTL",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_BADGER",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_BADGER",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_BADGER",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_BADGER",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_GAIA_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_DESKTOP_ZWIEBACK_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_GAIA_CHIPMUNK",
            "CLIENT_YOUTUBE_VIRAL_MOBILE_ZWIEBACK_CHIPMUNK",
            "CLIENT_YOUTUBE_ADMIN_YURT",
            "CLIENT_YOUTUBE_BAD_HARVEST",
            "CLIENT_SPEECH",
            "CLIENT_GMAIL",
            "CLIENT_GMAIL_SPAM",
            "CLIENT_CHROMECAST_WEB",
            "CLIENT_PANCETTA",
            "CLIENT_GOOGLE_LOCATION_SERVER",
            "CLIENT_GOOGLE_FEEDBACK",
            "CLIENT_ANDROID_METRICS_WAREHOUSE",
            "CLIENT_USERMGMT",
            "CLIENT_APPREMOTING",
            "CLIENT_GAIA_PERMISSION_SERVER",
            "CLIENT_ACTIONABLE_IPS",
            "CLIENT_DISPLAY_ADS",
            "CLIENT_DISPLAY_ADS_DEFAULT",
            "CLIENT_DISPLAY_ADS_DESKTOP_GAIA",
            "CLIENT_DISPLAY_ADS_DESKTOP_ZWIEBACK",
            "CLIENT_DISPLAY_ADS_MOBILE_GAIA",
            "CLIENT_DISPLAY_ADS_MOBILE_ZWIEBACK",
            "CLIENT_DISPLAY_ADS_PREVIEW",
            "CLIENT_HOBBES",
            "CLIENT_NEWSSTAND",
            "CLIENT_NEWSSTAND_EXPERIMENTAL",
            "CLIENT_POLYNEWS",
            "CLIENT_DOCS",
            "CLIENT_ADWORDS_EXPRESS",
            "CLIENT_TRACE_DEPOT",
            "CLIENT_MAPSPRO",
            "CLIENT_GEO_ONDEMAND",
            "CLIENT_ACCESS_FILTER",
            "CLIENT_DOMAIN_REGISTRAR",
            "CLIENT_ASSISTANT",
            "CLIENT_ASSISTANT_FRONTEND",
            "CLIENT_ACCOUNT_LINKING",
            "CLIENT_LEGAL_REMOVALS",
            "CLIENT_CLOUD_CONSOLE",
            "CLIENT_CLOUD_FREE_TRIAL",
            "CLIENT_CLOUD_SOLUTIONS_CATALOG",
            "CLIENT_CLOUD_MEDIA_ACCESS",
            "CLIENT_DOTORG_G4NP",
            "CLIENT_CRASH_INTERNAL",
            "CLIENT_GOOGLE_WIFI_MONLOG",
            "CLIENT_GOOGLE_VOICE",
            "CLIENT_BLOGGER",
            "CLIENT_THOR_BACKEND",
            "CLIENT_NEWS",
            "CLIENT_GOOGLE_PHOTOS",
            "CLIENT_GOOGLE_PHOTOS_INFERRED_LOCATION",
            "CLIENT_RANKBRAIN_DEBUG",
            "CLIENT_HETERODYNE",
            "CLIENT_FRAUDREVIEW",
            "CLIENT_JAMBOARD",
            "CLIENT_MARCONI",
            "CLIENT_AART",
            "CLIENT_CULTURAL",
            "CLIENT_YOUTUBE_ECOMMERCE",
            "CLIENT_ARES",
            "CLIENT_LIS",
            "CLIENT_STORE",
            "CLIENT_DASHER_AUDITING",
            "CLIENT_SHOPPING_LIST",
            "CLIENT_ITEM_SUGGEST",
            "CLIENT_SMART_BOOKS",
            "CLIENT_GRADS",
            "CLIENT_ADS_ROOT",
            "CLIENT_SE_ROOT",
            "CLIENT_YT_ORBIT",
            "CLIENT_NOVA_APERTURE",
            "CLIENT_LENA_SIGNUP_DEFAULTS",
            "CLIENT_PLAY_APPS_PUBLISHER",
            "CLIENT_FINSKY_ENTERPRISE",
            "CLIENT_GOOGLE_ADMIN",
            "CLIENT_CRYPTAUTH",
            "CLIENT_GSA_UNIVERSAL_SERVER",
            "CLIENT_TRAVEL_FRONTEND_TRANSIT",
            "CLIENT_HOME_CLOUD",
            "CLIENT_GSX_MALL",
            "CLIENT_GOOGLE_DUO",
            "CLIENT_GAIA_FRONTEND",
            "CLIENT_ANDROID_MESSAGES",
            "CLIENT_GOOGLE_LENS",
            "CLIENT_CHROME_WEB_STORE",
            "CLIENT_ACTIONS_ON_GOOGLE_CONSOLE",
            "CLIENT_ANDROID_TV_CHANNELS",
            "CLIENT_ASSISTANT_WEB_SETTINGS",
            "CLIENT_PLAY_USER_DATA",
            "CLIENT_ADS_INTEGRITY",
            "CLIENT_ADS_INTEGRITY_MALVERTISING",
            "CLIENT_FIREBASE_CONSOLE",
            "CLIENT_AOG_FEED_VALIDATOR",
            "CLIENT_PLUMERIA",
            "CLIENT_PAISA",
            "CLIENT_GOOGLE_PAY",
            "CLIENT_GOOGLE_PAY_WEB",
            "CLIENT_GOOGLE_WALLET",
            "CLIENT_SCROOGLED",
            "CLIENT_WAYMO",
            "CLIENT_CROW",
            "CLIENT_GSUITE_SECURITY_CENTER_SIT",
            "CLIENT_EVENT_THREAT_DETECTION",
            "CLIENT_PLAY_LOCATION",
            "CLIENT_FOOTPLACER",
            "CLIENT_DASHER_COMMERCE",
            "CLIENT_SOCIAL_PEOPLE_ANALYTICS",
            "CLIENT_CONTACTS_UI",
            "CLIENT_GAFE4",
            "CLIENT_PLACES_API",
            "CLIENT_PLACES_SEARCH_API",
            "CLIENT_DRIVE_WEB",
            "CLIENT_ANDROID_OTA",
            "CLIENT_PAISA_NEARBY_STORES",
            "CLIENT_ISP_FIBER_FAS",
            "CLIENT_SUPPORT_CONTENT",
            "CLIENT_GWS_OFFROAD_LOGGING",
            "CLIENT_CHANGEHISTORY",
            "CLIENT_SESSION_RISK",
            "CLIENT_ALPS",
            "CLIENT_DISCOVER_NEWS_LOCATION",
            "CLIENT_ASSISTANT_SNAPSHOT",
            "CLIENT_HONEYCOMB",
            "CLIENT_PLAY_MONETARY_ABUSE",
            "CLIENT_SMALL_BUSINESS_ADVISORS",
            "CLIENT_GPA_FEEDS",
            "CLIENT_EDU_ORIGINALITY",
            "CLIENT_PAIDTASKS",
            "CLIENT_TRANSLATE",
            "CLIENT_FUNDING_CHOICES",
            "CLIENT_SEARCH_NOTIFICATIONS",
            "CLIENT_VISUAL_SEMANTIC_SERVICE",
            "CLIENT_CHROME_PREFETCH_PROXY",
            "CLIENT_WEAR_FRONTEND",
            "CLIENT_PAYMENTS_RISKENGINE",
            "CLIENT_PAYMENTS_ORCHESTRATION",
            "CLIENT_ANDROID_TV_IRDB",
            "CLIENT_TRENDS_FRONTEND",
            "CLIENT_COLABORATORY",
            "CLIENT_SOCRATIC",
            "CLIENT_PS1_LOCATION",
            "CLIENT_DDM_REPORTING",
            "CLIENT_HOMEROOM_BACKEND",
            "CLIENT_CARS_CATEGORICAL",
            "CLIENT_GPAY_MERCHANT_VERTICALS",
            "CLIENT_RECAPTCHA_ACCOUNT_DEFENDER",
            "CLIENT_RECAPTCHA_LITE",
            "CLIENT_RECAPTCHA_FRAUD",
            "CLIENT_AUTONT_ACCESS_LOCATION",
            "CLIENT_TFAA_REPORT",
            "CLIENT_IDAAS_IP_LOCATION",
            "CLIENT_ONESTACK_METRIC_COLLECTION",
            "CLIENT_GPAY_TRANSIT",
            "CLIENT_CHRONICLE_SECURITY",
            "CLIENT_CHRONICLE_SECURITY_UI",
            "CLIENT_GPAY_MERCHANT_SPOT_ONBOARDING_TOOL",
            "CLIENT_ADS_SCRAPING",
            "CLIENT_CLOUD_SUPPORT_PORTAL",
            "CLIENT_LAMDA",
            "CLIENT_ACCESS_REDIRECTION_SERVICE",
            "CLIENT_PINPOINT",
            "CLIENT_SHOPPING_ORDER_HISTORY",
            "CLIENT_NEST_CAMERA_CLOUD",
            "CLIENT_PANOPTIC_EVAL",
            "CLIENT_ABOUT_THIS_PAGE",
            "CLIENT_PHOTOS_ANALYTICS_MARKETING",
            "CLIENT_GMSCORE_GMSCOMPLIANCE",
            "CLIENT_ANALYTICS_COLLECTION",
            "CLIENT_PLAY_CONSOLE_ANDROID_VITALS",
            "CLIENT_CRASHLYTICS_PLAY_CONSOLE_CRASHES",
            "CLIENT_PAYMENTS_MERCHANT_STORIES",
            "CLIENT_CLOUDTOP_CONNECTIVITY",
            "CLIENT_CLOUD_WEB",
            "CLIENT_RECORDING_CONSENT",
            "CLIENT_DV3_FRONTEND",
            "CLIENT_LENDING_DATA_MANAGER",
            "CLIENT_CHROMEOS_DATA_FRESNEL",
            "CLIENT_PPN",
            "CLIENT_GEO_SEARCH_API",
            "CLIENT_GOOGLE_ONE_SECURITY",
            "CLIENT_GOOGLE_TV_LAVA",
            "CLIENT_DYNAMITE_SERVER",
            "CLIENT_BCE_CLIENT_CONNECTOR",
            "CLIENT_DSE_REGULATORY_ANALYSIS",
            "CLIENT_SEARCH_PINPOINT",
            "CLIENT_CORPLOGIN",
            "CLIENT_MONOSPACE",
            "CLIENT_LIGHTER",
            "CLIENT_P11",
            "CLIENT_FIND_MY_DEVICE_WEB",
            "CLIENT_YOUTUBE_TV",
            "CLIENT_FITBIT_WEB",
            "CLIENT_CHORD",
            "CLIENT_FITBIT_FI",
            "CLIENT_GOOGLE_ANALYTICS_SERVING",
            "CLIENT_FONTS",
            "CLIENT_ASSISTANT_BARD",
            "CLIENT_NEST_GREENENERGY",
            "CLIENT_DEEPMIND_LABS",
            "CLIENT_ONE_PRESENCE",
            "CLIENT_TRANSPARENCY_REPORT",
            "CLIENT_GOOGLE_ONE_ML",
            "CLIENT_GMP_PARTNER_GALLERY",
            "CLIENT_MAKERSUITE",
            "CLIENT_ADS_ADMANAGER_TOS",
            "CLIENT_CHROME_REMOTE_DESKTOP",
            "CLIENT_SOJI",
            "CLIENT_WORKSPACE_LABS_SIGNUP",
            "CLIENT_AIDA",
            "CLIENT_TSP",
            "CLIENT_AI_SANDBOX",
            "CLIENT_LABS_TAILWIND",
            "CLIENT_GMAIL_TASK_ASSIST",
            "CLIENT_PIXEL_WEATHER",
            "CLIENT_GPAY_CATEGORY_BILLERS",
            "CLIENT_SUPPORT_CHANNELS_ZENDESK_WHATSAPP",
            "CLIENT_PAYMENTS_TRANSACTION_MONITORING",
            "CLIENT_DISCOVER_QUERY_RECOMMENDATIONS",
            "CLIENT_COMMUNICATION_PREFERENCE_CENTER",
            "CLIENT_PLAY_CONSOLE_DEVELOPER_IDENTITY_AND_ACCOUNTS",
            "CLIENT_GNP_ONLINE_EVALUATION",
            "CLIENT_LOCAL_SUGGESTED_SETS_DEMO_SERVER",
            "CLIENT_SEARCH_LABS",
            "CLIENT_CROWDSOURCE",
            "CLIENT_TARSIER",
            "CLIENT_WORKSPACE_SIDEKICK",
            "CLIENT_GOOGLE_PHOTOS_REMINISCING",
            "CLIENT_GEOX_CONTAMINATION",
            "CLIENT_CLOUD_MESSAGE_STORE",
            "CLIENT_IP_PROTECTION",
            "CLIENT_SEARCH_HAMSA",
            "CLIENT_ACCOUNT_LOCATION",
            "CLIENT_ANDROID_BACKUP_AND_RESTORE",
            "CLIENT_ADS_AWSM",
            "CLIENT_STARGATE",
            "CLIENT_ACCOUNT_MANAGEMENT",
            "CLIENT_USER_ACCOUNT_CREATION",
            "CLIENT_NETSENSE",
            "CLIENT_FITBIT_LABS",
            "CLIENT_LOCAL_SERVICES",
            "CLIENT_USER_FEEDBACK_SERVICE",
            "CLIENT_BARD_EVAL",
            "CLIENT_SCENARIO_BASED_SEEDING_HOME_WORK",
            "CLIENT_ACCOUNT_INTEGRITY_FEATURE_API",
            "CLIENT_LABS_BETTANY",
            "CLIENT_NECO_GENESIS",
            "CLIENT_FITBIT_CAPABILITIES",
            "CLIENT_ADS_MARKETING_AUTOMATION",
            "CLIENT_ANDROID_TELEMETRY_WESTWORLD",
            "CLIENT_DSPM_DETECTIVE_CONTROLS",
            "CLIENT_CAA_INSIGHTS",
            "CLIENT_SHOPPING_CARRIER_INFO",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MOBILE_GAIA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_NON_PERSONALIZED",
            "CLIENT_GWS_HOMEPAGE",
            "CLIENT_ADS_DESKTOP_ZWIEBACK",
            "CLIENT_ADS_DESKTOP_GAIA",
            "CLIENT_ADS_MOBILE_ZWIEBACK",
            "CLIENT_ADS_MOBILE_GAIA",
            "CLIENT_ADS_NON_PERSONALIZED",
            "CLIENT_ADS_TLD_NON_PERSONALIZED",
            "CLIENT_ADS_EOM",
            "CLIENT_ADS_TLD_EOM",
            "CLIENT_ADS_ADMANAGER_SIGNUP",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_GWS_TLD_MOBILE_GAIA_EXP",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_ADS_DESKTOP_GAIA_EXP",
            "CLIENT_ADS_MOBILE_ZWIEBACK_EXP",
            "CLIENT_ADS_MOBILE_GAIA_EXP",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_EXP",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_EXP",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_EXP",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_EXP",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_EXP",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_ADS_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_ADS_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ANDROMEDA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ANDROMEDA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_BOOTES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_ADS_DESKTOP_GAIA_BOOTES",
            "CLIENT_ADS_MOBILE_GAIA_BOOTES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_BOOTES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_BOOTES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ADS_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_ADS_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_CASSIOPEIA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_CASSIOPEIA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_ADS_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_ADS_MOBILE_GAIA_DELPHINUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_DELPHINUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_DELPHINUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_ADS_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_ADS_MOBILE_GAIA_ERIDANUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ERIDANUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ERIDANUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_GWS_TLD_MOBILE_GAIA_FOMAX",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_ADS_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_ADS_DESKTOP_GAIA_FOMAX",
            "CLIENT_ADS_MOBILE_GAIA_FOMAX",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_FOMAX",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_FOMAX",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_GWS_TLD_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_ADS_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_ADS_DESKTOP_GAIA_GEMINI",
            "CLIENT_ADS_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_GEMINI",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_GEMINI",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_ADS_DESKTOP_GAIA_HERCULES",
            "CLIENT_ADS_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_HERCULES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_HERCULES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_INDUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_ADS_DESKTOP_GAIA_INDUS",
            "CLIENT_ADS_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_INDUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_INDUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_INDUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_INDUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_INDUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_INDUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_GWS_TLD_MOBILE_GAIA_LEO",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_LEO",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_ADS_MOBILE_ZWIEBACK_LEO",
            "CLIENT_ADS_DESKTOP_GAIA_LEO",
            "CLIENT_ADS_MOBILE_GAIA_LEO",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_LEO",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_LEO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_LEO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_LEO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_LEO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_LEO",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_MENSA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_ADS_DESKTOP_GAIA_MENSA",
            "CLIENT_ADS_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_MENSA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_MENSA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_MENSA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_MENSA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_MENSA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_MENSA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_GWS_TLD_MOBILE_GAIA_NORMA",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_NORMA",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_ADS_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_ADS_DESKTOP_GAIA_NORMA",
            "CLIENT_ADS_MOBILE_GAIA_NORMA",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_NORMA",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_NORMA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_NORMA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_NORMA",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_NORMA",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_NORMA",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_GWS_TLD_MOBILE_GAIA_ORION",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_ORION",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_ADS_MOBILE_ZWIEBACK_ORION",
            "CLIENT_ADS_DESKTOP_GAIA_ORION",
            "CLIENT_ADS_MOBILE_GAIA_ORION",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_ORION",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_ORION",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_ORION",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_ORION",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_ORION",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_ORION",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_GWS_TLD_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_PISCES",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_ADS_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_ADS_DESKTOP_GAIA_PISCES",
            "CLIENT_ADS_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_PISCES",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_PISCES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_PISCES",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_PISCES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_PISCES",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_PISCES",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_TLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_ADS_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_ADS_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ADS_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_RETICULUM",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_RETICULUM",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ADS_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ADS_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_SAGITTARIUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_SAGITTARIUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_GWS_TLD_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_ADS_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_ADS_DESKTOP_GAIA_TAURUS",
            "CLIENT_ADS_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_TAURUS",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_TAURUS",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_TLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ADS_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ADS_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ADS_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_URSA_MAJOR",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_URSA_MAJOR",
            "CLIENT_GWS_TLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_GWS_TLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_GWS_TLD_MOBILE_GAIA_VIRGO",
            "CLIENT_GWS_TLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_ADS_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_ADS_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_ADS_DESKTOP_GAIA_VIRGO",
            "CLIENT_ADS_MOBILE_GAIA_VIRGO",
            "CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_GWS_NONTLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_GWS_NONTLD_MOBILE_GAIA_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_ZWIEBACK_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_DESKTOP_GAIA_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_ZWIEBACK_VIRGO",
            "CLIENT_ASSISTANT_NONTLD_MOBILE_GAIA_VIRGO",
            "CLIENT_LOGGED_CONTEXT",
            "CLIENT_IPGEO_REGION",
            "CLIENT_IPGEO_EVAL",
            "CLIENT_GWS_TACTILE_INITIAL_VIEWPORT",
            "CLIENT_GWS_MAPS_DESKTOP",
            "CLIENT_GWS_MAPS_MOBILE",
            "CLIENT_GWS_GMM_LOCATION_SHIFT",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_GAIA",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MAPS_DESKTOP_GAIA",
            "CLIENT_GWS_TLD_MAPS_DESKTOP_ZWIEBACK",
            "CLIENT_GWS_TLD_MAPS_MOBILE_GAIA",
            "CLIENT_GWS_TLD_MAPS_MOBILE_ZWIEBACK",
            "CLIENT_GWS_NONTLD_MAPS_DESKTOP_EXPERIMENTAL",
            "CLIENT_GWS_NONTLD_MAPS_MOBILE_EXPERIMENTAL",
            "CLIENT_SESSIONS",
            "CLIENT_MANUAL",
            "CLIENT_NONTLD_DEFAULT",
            "CLIENT_NO_LOCATION",
            "CLIENT_ONLY_LEGAL",
            "CLIENT_TESTING",
            "CLIENT_COARSEN_ALL_TESTING",
            "CLIENT_GWS_TLD_DESKTOP_ORACLE",
            "CLIENT_GWS_TLD_MOBILE_ORACLE",
            "CLIENT_GWS_NONTLD_DESKTOP_ORACLE",
            "CLIENT_GWS_NONTLD_MOBILE_ORACLE",
            "CLIENT_COMPARE_DL",
            "CLIENT_COMPARE_IP",
            "CLIENT_COMPARE_IPDL",
            "CLIENT_MAGICEYE_DIMENSIONS",
            "CLIENT_MAPS_GUIDE_DIRECTIONS",
            "CLIENT_SAFE_BROWSING",
            "CLIENT_GWS_NONTLD_DESKTOP",
            "CLIENT_GWS_NONTLD_MOBILE"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true
          ],
          "enumDescriptions": [
            "Unset client ID. Never use it in production code.",
            "Curio team (go/curio). Contact: curio-team@.",
            "OneGoogle Service (OGS): OGS will fetch the LocationContext for the frontends that have not talked to LES yet.",
            "Client id used by evaluation tools. Contact: davidreis@",
            "Same as CLIENT_EVALS, but less strict, so can be used to avoid a hack when some use cases needed to send the request twice with different client ID. Contact: bohdant@",
            "Client id used by go/unified-query-sourcing. Contact: query-sampling-team@",
            "Client id used by Play Books. Contact: ocean-team@",
            "Client id used by Bond team. Contact: sterman@ and/or id-devices-eng@",
            "Client id used by Chrome User Metrics Analysis (UMA, go/chrome-data)",
            "Client id used by DoubleClick Search. Contact: wdtseng@, ds3data@, go/ds",
            "Client id used by youtube QoE frontend. Contact: pfish@, kathyqian@, qoe-team@",
            "Client id used by youtube Real-Time QoE. Contact: jeffcohen@, tnavien@, qoe-team@",
            "Client id used by youtube QoE Livyatan. Contact: kathyqian@, gaozhiquan@, qoe-team@",
            "Client id used by YouTube serving frontend and shared by all downstreams of the frontend server. Contact: tubbs@, yt-serving-platform@",
            "Client ids used by YouTube Shorts. See go/oolong-changes-for-yt-le for details.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral.",
            "",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client ids used by Youtube Viral Experiments. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "Client id used by YouTube admin review tools. Contact: yurt-eng@",
            "Client id used by YouTube Bad Harvest (go/badharvest). Contact: bad-harvest-eng@",
            "Client id used by the speech team. Contact: xuedong@",
            "Client id used by Gmail team. Contact: shine@, lianglin@",
            "Client id used by Gmail/Spam. Contact: gmail-spam-eng@",
            "Client id used by chromecast web interface. Contact: pierred@, bquinlan@, eureka-team@",
            "Defaults to NONTLD_DEFAULT Contact: jamesjw@, pancetta-eng@",
            "Client id used by GLS (Google Location Server) Contact: lmohanan@, tsuwei@, lbs-team@",
            "Contact: feedback-eng@",
            "Client id used by Android Metrics team. Contact: androidmetrics-eng@",
            "Client id used by AdWords Usermgmt (go/usermgmt). Contact: timthom@, ads-usermgmt-eng@",
            "Client id used by appremoting VM management stack which is further used by Looking Glass and Developer Shell products. Contact: looking-glass-team@, hekate-eng@.",
            "Client id used by the login protections server. (go/hijacking) Contact: hijacking-eng@, danmogo@.",
            "Client id used by Actionable IPs. (go/actionable-ips). Contact: amirha@, ncmec-actionableips-eng@.",
            "Client id used by Display Ads. Contact: local-display@.",
            "CLIENT_DISPLAY_ADS_DEFAULT is the same as CLIENT_DISPLAY_ADS, but excludes postal code trimming. This client is used to make the ProcessLocationContext call.",
            "",
            "",
            "",
            "",
            "Client id used by Display Ads Preview Service. Contact: fletch-eng@.",
            "Client id used by Hobbes(go/hobbes). Contact: hobbes-team@google.com",
            "Client id used by Newsstand(go/dots). Contact: gnews-infra@.",
            "",
            "Client id used by Panoptic (News Ranking + Backend) Contact: polynews-eng@.",
            "Client id used by Google Docs. Contact: doplar-eng@, jameshong@",
            "Client id used by AdWords Express. Contact: boost-eng@, stephenleung@",
            "Client id used by TraceDepot server. Contact: tibrewal@, kjs@",
            "Client id used by MapsPro Contact: obrien@, jiazheng@",
            "Client id used by Madden (go/madden) Contact: madden-eng@",
            "Client id used by AccessFilter Contact: ishwarya@",
            "Client id used by Google Domains (go/domain-registrar) Contact: domain-registrar-eng@",
            "Client id used by Google Assistant (go/opa) Contact: assistant-infra-core@",
            "",
            "Client id user by Google Account Linking (go/account-linking) Contact: account-linking-team@",
            "Client id used by Legal Removals. Contact: legal-removals-eng@",
            "Client id used by Cloud Console (Pantheon) Contact: paninfra-sfo@.",
            "Client id used by Cloud New User for Free Trial Contact: coe-nu-eng@",
            "Client id used by Solutions Catalog Contact: coe-solutions@",
            "Client id used by cloud media access team, go/cloud-media-access Contact: cloud-media-access-team@",
            "Client id used by Dotorg G4NP Contact: g4np-eng@",
            "Client id used by Crash Internal Contact: crash-team@",
            "Client id used by Monlog in access/infrastructure Contact: monlog-eng@",
            "Client id used by GoogleVoice Contact: voice-eng@",
            "Client id used by Blogger Contact: blogger-tech@, eitzenb@",
            "Thor/Google Meet backend. Contact: comms-work-backend-team@.",
            "Client id used by News Contact: news-frontend-eng-team@.",
            "Client id used by Google Photos",
            "Client id used by Google Photos for inferred location tagging.",
            "Client id used by RankBrain Debug (go/rankbrain-debug).",
            "Client id used by Heterodyne (go/heterodyne) Contact: ph-eng@",
            "Client id used by fraudreview (go/fraudreview) Contact: pf-review-tools@",
            "Client id used by Jamboard (go/jamboard) for go/jamboard-scheduled-otas Contact: jamboard-eng@",
            "Client id used by Marconi (go/marconi) Contact: marconi-eng@",
            "Client id used by Aart (go/aart-docs) Contact: aart-team@",
            "Client id used by the Google Arts And Culture (go/artsandculture) Contact: ci-eng@",
            "Client id used by Youtube Ecommerce (go/ypc) Contact: ytr-eng@",
            "Client id used by Ares managed feature providers (go/project-ares) Contact: ares-eng@",
            "Client id used by LIS and the UUDE framework (go/uude) Contact: lis-eng@",
            "Client id used by Google Store smashberry (go/smashberry) Contact: smashberry-eng@",
            "Client id used by Dasher Auditing (go/dasher-auditing) Contact: dasher-auditing-eng@",
            "Client id used by the Shopping List Server (go/shopping-list-server) Contact: shoppinglist-eng@",
            "Client ID used by the Drive Item Suggest service (go/itemsuggest)",
            "Client ID used by Smart Books (go/smart-books) Contact: smart-books-team@",
            "Client ID used by GRADS (go/grads)",
            "Client ID used by AdsRoot (go/adsroot)",
            "Client ID used by Service Engine (go/seroot)",
            "Client ID used by Orbit (go/ytorbit)",
            "Client ID used by Project Fi (nova). This client was initially created for Nova aperture (go/aperture) but all Nova clients are recommended to use this one.",
            "Client ID used by Lena Signup Defaults (go/lena-prd)",
            "Client ID used by the Play Console (go/fc) Contact: play-dev-console-platform@",
            "Client ID used by Finsky Enterprise (go/pfw)",
            "Client ID used by Google Admin (go/google-admin)",
            "Client ID used by CryptAuth (go/cryptauth, go/authzen-pdd, go/gnubby-pdd)",
            "Client ID used by the GsaUniversalServer (go/gus)",
            "Client ID used by the TravelFrontendTransitServer web app.",
            "Client ID used by Home Cloud services (go/home-cloud)",
            "Client ID used by Google Shopping Express (go/gsx)",
            "Client ID used by Google Duo (go/duo)",
            "Client ID used by Gaia Frontend (go/gaiafe)",
            "Client ID used by Android Messages (go/bugle)",
            "Client ID used by Google Lens (go/lens) Contact: lens-frontend-server-eng@",
            "Client ID used by Chrome Web Store (go/cws)",
            "Client ID used by Actions on Google console (go/aog-console) Contact: actions-on-google-console-eng@",
            "Client ID used by Android TV Channels (go/android-tv-channels)",
            "Client ID used by Assistant Web Settings (go/assistant-settings-web-ui-design)",
            "Client ID used by Play User Data Server (go/play-user-data-server)",
            "Client ID used by Ads Integrity (go/ads-integrity) Contact: ads-integrity-risk@",
            "Client ID used by Ragnarok (go/ragnarok) Contact: ads-integrity-wat@",
            "Client ID used by Firebase Console (go/fireconsole) Contact: fireconsole-contrib@",
            "Client ID used by AoG Feed Validator (http://go/aog-feed-validator)",
            "Client ID used by Plumeria (go/plumeria-legal-eng-intro) Contact: plumeria-eng@",
            "Client ID used by Paisa (http://go/paisa) Contact: paisa-eng@",
            "Client ID used by Google Pay (go/googlepay)",
            "Client ID used by the Google Pay web serving stack.",
            "Client ID used by Google Wallet (go/wallet)",
            "Client ID used by Scroogled (go/scroogled). Contact: hijacking-team@.",
            "Client ID used by Waymo ride-hailing services. Client referenced in a silo: waymo/taas/frontend3/handlers/test_base.cc Contact: taas-offboard@, chauffeur-hailing@",
            "Client ID used by CROW team. Contact: crow-team@",
            "Client ID used by the Security Investigation Tool of GSuite Security Center(go/security-investigation-tool). Contact: gsc-sit-eng@",
            "Client ID used by the Event Threat Detection team (go/etd). Contact: etd-team@",
            "Client ID used by Play Location Server (go/play-location-server). Contact: play-experiment-team@",
            "Client ID used by Footplacer (go/footplacer). Contact: footplacer-eng@",
            "used by dasher commerce team (go/acom) Contact: dasher-commerce-eng@",
            "Client ID used by Social People Analytics (go/spa-docs). Contact: social-people-analytics@",
            "Client ID used by Contacts UI surfaces (go/web-contacts). Contact: contactsplus-eng@, custard-eng@",
            "Client ID used by Google Analytics (go/gafe4). Contact: gafe4-eng+code@",
            "Client ID used by Places API (go/places-api). Contact: geo-enterprise-metrics@",
            "",
            "Client ID used by Drive Web Frontend. Contact: drive-frontend-eng@",
            "Client ID used by Android OTA (go/android-ota). Contact: android-auto-ota-dev@",
            "Clients of nearby stores. Contact: payments-microapps-pek-team@",
            "Clients used by Fiber Address Service (gfiber-weaver-infra-team@).",
            "Client ID used by Support Content (go/supportcontent) Contact: support-content-eng@",
            "Logging anonymization for Offroad (GMM offline) search/suggest.",
            "Client id used by Google Ads Change History (go/ch). Contact: leonxie@, kluo@, ch-dev@",
            "Client ID used by Session Risk (go/session-risk). Contact: session-protection-eng@",
            "Client ID used by Alps (go/alps). Contact: address-understanding-team@",
            "Client ID used by discover for resolving locations according to the user's news preferences. Contact: newsx@",
            "Client Id for Assistant Snapshot.",
            "Client ID used by Area 120 Honeycomb (go/honeycomb) Contact: honeycomb-eng@",
            "Client ID used by Play Monetary Abuse service to detect location abuse. Contact: play-monetary-abuse@",
            "Client ID used by Small Business Advisors (GMB Assisted Activation). Contact: gmb-assisted-activation@",
            "Client ID used by GPA Feeds Ingestion. Contact: gpa-feeds-eng@",
            "Client ID used by EDU originality reports (go/plagiarism). Contact: plagiarism-eng@",
            "Client ID used by Paidtasks to grab user ipgeo information. Contact: 402-eng@",
            "Client ID used by Translate for country level IPGeo. Contact: website-translation-team@",
            "Client ID used by Funding Choices to determine the legal jurisdiction that a user belongs to, for example, GDPR (EEA) or CCPA (California), etc. More information: go/funding-choices Contact: oncall/xads, funding-choices-eng-core@",
            "Client ID used by Search Notifications (go/sno). Contact: now-push-eng-team@",
            "Client ID used by Visual Semantic Service (go/vss). Contact: vss-team@",
            "Client ID used by the Chrome Prefetch Proxy (go/chrome-p4)",
            "Wear OS clients Contact: wear-lon-backend@",
            "Client ID used by Payments Risk (go/risk-eng) Contact: payments-risk-team@",
            "Client ID used by Payments Orchestration/Orchestration2 server (go/o2) Contact: payments-orchestration-eng@",
            "Client ID used by Android TV IRDB (go/sabrina-irdb-service) Contact: project-axel-eng@",
            "Client ID used by Trends (go/trends-eng) Contact: trends@",
            "Client ID used by Colab (go/colab) Contact: colab-team@",
            "Client ID for Socratic (go/bloom) Contact: bloom-edu-eng@",
            "Client ID for go/ps1-location Contact: location-infra@",
            "Client ID for DDM Reporting Processing go/proc Contact: ddm-reporting-stateless@",
            "Client ID for go/hr-be Contact: homeroom-backend@",
            "Client ID for cars categorical Contact: cars-eng@",
            "Client ID used by Gpay MerchantVerticals VerticalsDiscoveryService go/vertical-discovery Contact: merchant-verticals-discovery-eng@",
            "Client ID used by reCAPTCHA's Account Protections team. Shared ID used by both Account Defender and SMS Fraud Detection services. go/recaptcha-account-defender-u-bad Contact: recaptcha-account-protections@",
            "Client ID used by reCAPTCHA Lite. go/recaptcha-asn-reputation-design-doc Contact: recaptcha-waf-eng@",
            "Client ID used by reCAPTCHA Fraud Prevention. go/recaptcha-fraud-geocoding Contact: recatpcha-fraud@",
            "Client ID used by AutoNT DNS mapchecker module. go/autont Contact: autont-team@",
            "Client ID used by Transparency for All Ads Report. go/tfaar Contact: tfaa-report-eng@",
            "Client ID used by GCIP Location Service. go/cicp-team Contact: cicp-eng@",
            "Client ID used by OneStack Metric Collection service.",
            "Client ID used by GPay Transit TapAndPay Frontend Service go/transit-recommended-agencies Contact: tp2-transit-eng@",
            "Client ID used by Chronicle Security (go/malachite). go/chronicle:theres-waldo Contact: malachite-dip-engg@ Contact: malachite-eng@",
            "Client ID used by the UI for Chronicle Security (go/malachite). go/chronicle-i18n-design Contact: chronicle-ui@ Contact: malachite-eng@",
            "Client ID used by GPay Merchant Spot Onboarding Tool (b/186640782). Contact: gtech-google-pay-food-fte@ Contact: edisonc@",
            "Client ID used by Ads scraping tool owned by Ads ExpandedMatch. go/ads-scraping-tool Contact: ads-expmatch-eng@",
            "Client ID for cloud support portal frontend go/xpp-lite Contact: xpp-eng@",
            "Client ID used by the LaMDA team. Contact: srrvnn@, lamda-team@ // NOTYPO NOTYPO",
            "Client ID used by Access Redirection Service. (go/redirection-service) contact: access-sre-fe@google.com",
            "Client ID used by Pinpoint (go/jsuite-pinpoint) Contact: backlight-eng@",
            "Client ID used by Google Shopping Order History (go/shopping-order-history)",
            "Client ID used by Nest camera cloud team contact: nest-camera-cloud@google.com",
            "Client ID used by Panoptic SxS contact: yukang@, deepakverma@, local-fcr@google.com",
            "Client ID used for About This Page external API. contact: beaton, diner-team@, go/project-diner",
            "Client ID used for the Photos Analytics marketing pipeline. contact: guillo, photos-analytics@",
            "Client ID for the gmscompliance server (UDEVS) contact: gmscore-trust-team@google.com",
            "Client ID for Analytics Collection contact: tag-serving-eng@, go/tag-serving",
            "Client ID for play console android vitals contact: play-dev-quality-all@google.com",
            "Client ID for crashlytics play console crashes contact: play-dev-quality-all@google.com",
            "Client ID for Payments Merchant Stories contact: merry-eng@, go/merry",
            "Client ID for Cloudtop Connectivity contact: cloudtop-eng@, go/cloudtop",
            "Client ID for Cloud Web (cloud.google.com) contact: cloudx-platform-eng@",
            "Client for go/speakeasy-meet-consent-frontend Contact: ccp-pegasus@",
            "Client for Display & Video 360 (DV3, Xbid) frontend. Contact: qypeng@, xbid-fe-eng@",
            "Client for lending data manager. Contact: nest-data-infra-eng@",
            "Client for ChromeOS Data Fresnel service. Contact: chromeos-data-eng@",
            "Client for PPN team to provide VPN service.",
            "Client ID used by Geo API Platform (go/geo:api). Contact: geo-apis-platform@",
            "Client for Google One security to access Oolong data. Contact: g1-security-eng@",
            "Client ID used by the Google TV Web player (go/lava) Contact: lava-eng@",
            "Client ID used by the dynamite server. Contact: dynamite-eng@",
            "Client ID used by the bce-client-connector. Contact: bce-client-connector-eng@",
            "Client ID used by go/rde team pipeline. Contact: rde-team@.",
            "Client ID used by Pinpoint UI tools (go/pinpoint). Contact: pinpoint-team@",
            "Client ID for Corplogin Contact: sso-team@",
            "Client ID for Monospace (go/monospace) Contact: monospace-team@",
            "Client ID used by the Lighter (go/lighter). Contact: lighter-backend-eng@",
            "Client ID used by P11 (go/p11-eng) Contact: eleven-sw-eng@",
            "Client ID used by the new Find My Device website. Contact: fmd-eng@",
            "Client ID used by Youtube TV. Contact: ott-platform-serving",
            "Client ID used by Fitbit WebAccounts Contact fitbit-uam@",
            "Client ID used for Chord (go/chord-g3doc) Contact: chord-eng@",
            "Client ID used by Fitbit-Fi Contact fdp-gallery@",
            "Client ID used by Google-Analytics-Serving Contact ga-gold-query-engine@",
            "Client ID used by Google Fonts Contact fonts-eng@",
            "Client ID used by project Bard Contact bard-team@",
            "Client ID used by Nest Renew (go/apollo-eng) Contact apollo-energy-eng@",
            "Client ID used by DeepMind Labs Contact deepmind-goodall@",
            "Client ID used by One Presence Profiles Contact mcf-profiles-eng-team@",
            "Client ID used by Transparency Report (go/transparency-eng) Contact: transparency-report-leads@",
            "Client for Google One ML team to access Oolong data. Contact: g1-ml-eng@",
            "Client for GMP Partner Gallery team to access Oolong data. Contact: gmppartnergallery-team@",
            "Client for MakerSuite. Contact: makersuite-team@",
            "Client for Ad Manager ToS Contact: drx-fe-infra@",
            "Client ID for Chrome Remote Desktop. contact: chromotin-eng-team@, go/chromoting",
            "Client for OSLO Soji (go/soji). Contact: soji-team@",
            "Client ID for Workspace labs signup page. Contact: workspace-labs-signup-eng@",
            "Client AIDA Contact: aida-api-team@",
            "Client ID for Trust Signals Platform Contact: trust-signals-eng@",
            "Client Id for AI Test Kitchen Contact: ai-sandbox-eng@",
            "Client Id for Labs Tailwind Contact: labs-tailwind-eng-team@",
            "Client Id for Gmail Task Assist. Contact: task-assist-eng@",
            "Client Id for Pixel Weather service. Contact: pixel-apps-weather-boq-team@",
            "Client Id for GPay Geo-based category billers. (go/gpay-category-biller-suggestions-design-doc) Contact: nityam-eng@, gpay-server-infra@",
            "Client Id for Support Channels WhatsApp Zendesk integration. (go/cecsi-whatsapp-dd) Contact: voice-channels-eng@",
            "Client ID used by Payments Anti-Financial Crimes Transaction Monitoring pipeline to fetch country-level IPGeo information.",
            "Client ID for the offline batch pipeline creating the Discover query recommendation corpus.",
            "Client id used by Preference Center (go/preference-center). Contact: preference-center-eng@",
            "Client ID used by Developer Identity and Accounts Contact: play-dev-dia-epu@google.com.",
            "Client ID used by GNP Online Evaluation Contact: gnp-ginger-eng@google.com",
            "Client ID used by local suggested sets demo server (go/local-sets-demo-server-dd) Contact: local-sets-quality@",
            "Client ID used by Search Labs Contact: search-labs-frontend@google.com",
            "Client ID for Crowdsource Contact: crowdsource-eng@google.com",
            "Client ID for Tarsier Contact: tarsier-team@google.com",
            "Client Id for WorkSpace SideKick. Contact: kopi-eng@",
            "Client id used by Google Photos for reminising features.",
            "Client Id for Geox contamination. Contact: amt-geox-core@",
            "Client Id for CloudMessageStore. Contact:tachyon-backend-eng@",
            "Client Id for IP Protection Contact: ip-protection-team@",
            "Client Id for Search MCF Hamsa. Contact: search-mcf-hamsa@",
            "Client Id for Account Location (go/accountlocation). Contact emmett-eng@google.com, compliance-signals-eng@google.com",
            "Client Id for Android Backup & Restore (http://go/br-home). Contact android-backup-server-eng@google.com",
            "Client Id for Google Ads AWSM. Contact awsm-eng@google.com",
            "Client Id for Stargate satellite messaging. Contact dune-server-eng-team@google.com",
            "Client Id for Account Management (go/ams). Contact account-management-eng@google.com, compliance-signals-eng@google.com.",
            "Client Id for User Account Creation (go/id-eco-infra:account-creation). Contact account-ecosystem-infra-team@google.com, compliance-signals-eng@google.com.",
            "Client Id for Netsense (go/netsense). Contact trapdoor-team@google.com,",
            "Client ID used by Fitbit Labs (go/fitbit-labs). Contact fitbit-labs-eng@",
            "Client ID used by Local Services Ads. Contact sab-eng@",
            "Client ID used by the User Feedback Service (go/user-feedback-service). Contact ads-integrity-transparency-team@",
            "Client ID used by Bard/Gemini evals to spoof location data. Contact bard-eval-infra@ This should only be used with spoofed location data. For real user data, follow the onboarding steps at go/use-current-location",
            "Client ID used by the Scenario-based Seeding Home & Work seeder. Contact loki-prod@google.com",
            "Client ID used by the ADI Feature API (go/adi-feature-api)",
            "Client Id for Labs Bettany Contact: bettany-eng@",
            "Client Id for neco-genesis Contact: neco-eng@",
            "Client ID used by Fitbit Capabilities Service (go/fitbit-capabilities). Contact fitbit-app-platform@",
            "Client ID for Ads Marketing Automation (go/ce-ama) Contact: ads-marketing-automation-eng@",
            "Client ID for Android Telemetry Westworld Contact: android-telemetry-infra-server@",
            "Client ID for Data Security Posture Management (DSPM) Detective Controls Contact: dspm-controls-eng@",
            "Client ID for CAA Insights Contact: policy-decision-service-eng@",
            "Client ID for Shopping Carrier Info Contact: gpay-jp-eng-all@",
            "Gws. Contact: oolong-team@.",
            "",
            "",
            "",
            "",
            "",
            "Search Ads clients providing similar user location to Search.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Ad manager user sign up location by IP address",
            "Use these within GWS iff the project is not using TLD (e.g. www.google.ch).",
            "",
            "",
            "",
            "Client Ids for Assistant via Oolong Service.",
            "",
            "",
            "",
            "Gws tld experimental clients",
            "",
            "",
            "",
            "Ads experimental clients",
            "",
            "",
            "",
            "Gws nontld experimental clients",
            "",
            "",
            "",
            "Assistant experimental clients",
            "",
            "",
            "",
            "Clients for Andromeda experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Bootes experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Cassiopeia experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Delphinus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Eridanus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Fomax experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Gemini experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Hercules experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Indus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Leo experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Mensa experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Norma experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Orion experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Pisces experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Reticulum experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Sagittarius experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Taurus experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Ursa Major experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Clients for Virgo experimental slot. See go/ul-experimental-slots for description.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Use for LoggedContext re-geocoding. Do not use for LocationContext processing.",
            "Client useful for country level IPGeo. It accepts any country regardless of the confidence. Do not use this client for any location other than country. It can be used while migrating from legacy googledata/ipgeo index. Contact: oolong-team@.",
            "Client similar to CLIENT_IPGEO_REGION, but adapted to IPGeo Eval purpose. Contact: ipgeo-team@.",
            "Tactile initial viewport policy. Contact: oolong-team@ Note that maps clients don't adhere to TLD restrictions.",
            "",
            "",
            "",
            "Maps clients that use glassbox.",
            "",
            "",
            "",
            "",
            "",
            "Experimental maps clients.",
            "",
            "Session IP geocoding. Contact: oolong-team@.",
            "Use this client ID if you are not using oolong legal/quality annotations. A sample usecase is reverse geocoding a set of lat/lngs or mids/featureids. NOTE: do not use oolong annotations if this client is set.",
            "Default client to use when TLD restrictions are not applied. This policy can change without notice. If you care about particular quality assumptions, then create a custom client id. Contact: oolong-team@",
            "Does NOT annotate anything with UNIQUE_SELECTED_FOR_USER_LOCATION",
            "Client id that only applies legal annotations.",
            "Use for testing only. Never use this in production.",
            "",
            "Used for oracle eval.",
            "",
            "",
            "",
            "Clients used to compare different location source combinations.",
            "",
            "",
            "Client used for country field in Magic Eye dimensions (go/core-dimensions).",
            "Used for the go/mapsguide directions prototype.",
            "Deprecated clients SafeBrowsing Team. Contact: anov@.",
            "Use CLIENT_GWS_NONTLD_DESKTOP_ZWIEBACK or _GAIA Contact oolong-team@",
            "Use CLIENT_GWS_NONTLD_MOBILE_ZWIEBACK or _GAIA Contact oolong-team@"
          ],
          "type": "string"
        },
        "extractorFlags": {
          "$ref": "LocationUnifiedExtractorFlags",
          "description": "Flags to customize the extractors used to build this location context."
        },
        "featurePool": {
          "description": "The feature pool used in the location results. This is a map from feature ID to feature data, but since the feature ID is part of the Featurelet data, just a repeated field enumerating them is enough.",
          "items": {
            "$ref": "LocationUnifiedOolongFeature"
          },
          "type": "array"
        },
        "fromHulkRealtime": {
          "description": "True if the location context originates from the Hulk Realtime plugin in GWS: go/hulk-realtime-in-search-ads.",
          "type": "boolean"
        },
        "lockStrategy": {
          "description": "Defines which roles/producers can be added/edit for the context. This field is used only when locked_for_debug flag is set.",
          "enum": [
            "NO_LOCKING",
            "LOCK_ALL",
            "LOCK_ALL_EXCEPT_EXPLICIT_IMMEDIATE_AND_DOMAIN"
          ],
          "enumDescriptions": [
            "Strategy which allows changing all the results.",
            "Strategy which does not allow changing any result.",
            "Does not allow adding any results that are not role=QUERY, USER_SPECIFIED_FOR_REQUEST or VIEWPORT, OR role/producer = CURRENT_LOCATION/GOOGLE_HOST_DOMAIN."
          ],
          "type": "string"
        },
        "lockedForDebug": {
          "description": "If true, only a selected list of descriptors will be added to this context by the standard library functions. This is so that debug parameters can be used to override the context reliably. The descriptors that can be added is determined by the lock_strategy enum. Note that policies may override and ignore this flag altogether.",
          "type": "boolean"
        },
        "lockedForPolicy": {
          "description": "If true, the location context should be kept as is, no policy should modify it, except for: setting the client id and adding qref location.",
          "type": "boolean"
        },
        "nonstandardData": {
          "$ref": "MessageSet"
        },
        "origin": {
          "$ref": "LocationUnifiedLocationContextOrigin",
          "description": "Information about the origin of the location context. This is used to validate that the location context was created through a valid means, which is Oolong. DO NOT SET THIS FIELD YOURSELF. In fact, do not construct location contexts yourself."
        },
        "results": {
          "items": {
            "$ref": "LocationUnifiedLocationResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationContextOrigin": {
      "description": "This message stores information about how a location context was created. It is restricted in visibility to Oolong code only, so that it provides a way to easily identify location contexts that have been created from external code. (Which should NOT be done ever.) Next ID: 3",
      "id": "LocationUnifiedLocationContextOrigin",
      "properties": {
        "dejitterModifications": {
          "description": "Sequence of Dejitter modifications applied to the associated LocationContext. For monitoring and debugging use only; it should be safe to remove or change the contents of this field at any time.",
          "items": {
            "enum": [
              "DEJITTER_MODIFICATION_UNSPECIFIED",
              "DEJITTER_REMOVED_IMPLICIT_LOCATION_RESULTS",
              "DEJITTER_REMOVED_IMPLICIT_LOCATION_ANNOTATIONS",
              "DEJITTER_REMOVED_IMPLICIT_SUBCOUNTRY_FEATURES"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "The origin of the LocationContext. May be updated by restricted Oolong libraries that modify the LocationContext after it was returned. Some Apps Framework services use this in their location propagation logic to decide whether a LocationContext is suitable for propagating to backends.",
          "enum": [
            "INVALID_ORIGIN",
            "TEST_UTILS",
            "LES_PLC_CALL",
            "OOLONG_WITH_CUSTOM_GEOCODER",
            "LOCAL_SEARCH_LITE_OVERRIDE",
            "OOLONG_SERVICE",
            "QUALITY_BRAIN_OVERRIDE"
          ],
          "enumDescriptions": [
            "Default value, which means no valid origin.",
            "Constructed through LocationContextBuilder, for testing.",
            "Created through a call to LES to one of the ProcessLocationContext* functions (Oolong interface).",
            "Created through an ipgeo-only LES or other custom-geocoder-based Oolong interface.",
            "Created from local_search_lite_context_util.h, by CreateOverriddenLocationContext.",
            "Created by OolongService.",
            "BRAIN override"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationDescriptor": {
      "description": "A LocationDescriptor is the minimal specification of a location together with its role and producer. The location \"payload\" can be specified by a variety of means (e.g., an address, an ip address, GPS coordinates, etc.) but only a single means should be used. DO NOT COMBINE MULTIPLE SPECIFICATIONS INTO A SINGLE DESCRIPTOR (e.g., a freeform street address and lat/long together). Next Id: 27",
      "id": "LocationUnifiedLocationDescriptor",
      "properties": {
        "additionalFeatureId": {
          "$ref": "LocationUnifiedFeatureIdProto",
          "description": "A 128-bit feature consisting of an S2Cell and a unique feature identifier. Should be unused outside of the internal applications by the Oolong team."
        },
        "attributes": {
          "$ref": "LocationUnifiedLocationAttributesProto",
          "description": "Supplemental attributes for a location that are not related to geocoding, but still may affect search results."
        },
        "confidence": {
          "description": "A confidence measure. Percentage: must be 0 to 100.",
          "format": "int32",
          "type": "integer"
        },
        "diagnosticInfo": {
          "description": "WARNING: Do not use this field without talking to the oolong-team@ first. It should never contain any Personal Identification Information (PII). You can use this field to provide diagnostic information about the location extraction code. Some examples could include the latency of getting the location, the fact that it was retrieved from the cache or not, the reason for not providing the location, software version (if that cannot be used to identify the user). Make sure to prepare a PDD that describes what is stored in this field for your project before using the field.",
          "type": "string"
        },
        "featureId": {
          "$ref": "LocationUnifiedFeatureIdProto",
          "description": "A 128-bit feature consisting of an S2Cell and a unique feature identifier."
        },
        "historicalProducer": {
          "description": "This field is intended for recording the producer of a historical location. It will be populated for a descriptor with role HISTORICAL_LOCATION, using the producer of the original descriptor. To enable location history to be sent via an untrusted source to a frontend, you should make sure that the historical_role-historical_producer pair of the descriptor also appears on the untrusted allowlist used by the frontend.",
          "enum": [
            "UNKNOWN_PRODUCER",
            "LOGGED_IN_USER_SPECIFIED",
            "PREF_L_FIELD_ADDRESS",
            "IP_ADDRESS",
            "IP_ADDRESS_REALTIME",
            "GOOGLE_HOST_DOMAIN",
            "RQUERY",
            "SQUERY",
            "QUERY_LOCATION_OVERRIDE_PRODUCER",
            "QREF",
            "DEVICE_LOCATION",
            "LEGACY_NEAR_PARAM",
            "CARRIER_COUNTRY",
            "JURISDICTION_COUNTRY",
            "CLIENT_SPECIFIED_JURISDICTION_COUNTRY",
            "DECODED_FROM_UNKNOWN_ROLE_PRODUCER",
            "SHOWTIME_ONEBOX",
            "LOCAL_UNIVERSAL",
            "SEARCH_TOOLBELT",
            "MOBILE_FE_HISTORY",
            "GWS_MOBILE_HISTORY_ZWIEBACK",
            "MOBILE_SELECTED",
            "PARTNER",
            "WEB_SEARCH_RESULTS_PAGE_SHARED",
            "WEB_SEARCH_PREFERENCES_PAGE",
            "MAPS_FRONTEND",
            "PRODUCT_SEARCH_FRONTEND",
            "ADS_CRITERIA_ID",
            "MOBILE_APP",
            "QUERY_HISTORY_INFERRED",
            "QUERY_HISTORY_INFERRED_ALTERNATE",
            "GMAIL_THEME",
            "IGOOGLE",
            "CALENDAR",
            "SMS_SEARCH",
            "LEGACY_GL_PARAM",
            "LEGACY_PARTNER_GL_PARAM",
            "LEGACY_GL_COOKIE",
            "GWS_JURISDICTION_COUNTRY",
            "CIRCULARS_FRONTEND",
            "SHOPPING_SEARCH_API",
            "OZ_FRONTEND",
            "ADS_GEO_PARAM",
            "ADS_PARTNER_GEO_PARAM",
            "DEFAULT_LOCATION_OVERRIDE_PRODUCER",
            "VIEWPORT_PARAMS",
            "GAIA_LOCATION_HISTORY",
            "STICKINESS_PARAMS",
            "TURN_BY_TURN_NAVIGATION_REROUTE",
            "SNAP_TO_PLACE_IMPLICIT",
            "SNAP_TO_PLACE_EXPLICIT",
            "HULK_USER_PLACES_CONFIRMED",
            "HULK_USER_PLACES_INFERRED",
            "TACTILE_NEARBY_PARAM",
            "MAPS_ACTIVITY",
            "IP_ADDRESS_ALTERNATE",
            "DIRECTIONS_START_POINT",
            "SEARCH_ALONG_ROUTE",
            "SNAP_TO_ROUTE",
            "GOOGLE_MY_BUSINESS",
            "BAD_DEVICE_LOCATION",
            "GMM_QUANTIZED_DEVICE_LOCATION",
            "GWS_HISTORY_GAIA",
            "CONTEXT_MANAGER_FORECAST",
            "GMM_HEATMAP_AREA",
            "NEWS",
            "SHIPPING_ADDRESS",
            "DEVICE_CONTEXT",
            "TRAVEL_STATE_INTENT",
            "HULK_ROUTINES",
            "WILDCARD_PRODUCER",
            "LEGACY_TOOLBAR_HEADER",
            "LEGACY_MOBILE_FRONTEND_GLL",
            "LEGACY_MOBILE_FRONTEND_NEAR",
            "ABLATED_PRODUCER",
            "OOLONG_REALTIME_CACHE",
            "OOLONG_REALTIME_CACHE_ALTERNATE",
            "DIRECTIONS_WAYPOINT",
            "ADS_FINAL_VIEWPORT",
            "SEARCH_REGION_SETTINGS_COUNTRY",
            "ASSISTANT_DERIVED",
            "OOLONG_DEFAULT_LOCATION",
            "ADS_GLS_FINAL_VIEWPORT"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors.",
            "A location specified by a logged-in user (e.g., default location from Kansas). It is a freeform address string stored in loc.",
            "The user-specified default location contained in the L-field of a browser's PREF cookie. It is a freeform address string stored in loc.",
            "A location based on IP address. The IP address is stored in loc in dot-decimal (IPv4) or colon-hexadecimal (IPv6) format.",
            "This is the location that is derived from the realtime ipgeo index. This is a fresh version of ipgeo index which is available for a small subset of IPs.",
            "A location based on the domain of the Google server (e.g., google.co.uk) servicing the request. The domain name is stored in loc.",
            "The descriptor is based on a raw query (free-form). The query text is stored in loc.",
            "The descriptor is based on an squery and is stored as an squery in loc.",
            "The descriptor contains a location as a raw query in loc. It is geocoded and used to override the geocoding of the QUERY/RQUERY or QUERY/SQUERY descriptor. Only to be used for debugging purposes.",
            "This contains the location produced by qref module in qrewrite. Currently, the location is derived from the query and this will be only used with QUERY role.",
            "A location that came from determining the physical location of a device (mobile, laptop, desktop, etc.) via means such as GPS, cell network, or Wifi. Always corresponds to CURRENT_LOCATION. The accuracy of the location may be stored in the radius and/or confidence fields. NOTE: By definition, these data do not include locations collected without the user's awareness and/or consent. Users on some Google services may be notified of and consent to Google's collection and use of geographical information.",
            "The descriptor was generated by a legacy \"near\" param. It always corresponds to a USER_SPECIFIED_FOR_REQUEST. Occurrences should be replaced by Oolong-style parameters (e.g., muul/luul). Note that \"near\" params synthesized by Mobile Frontend from a lat/long are handled with LEGACY_MOBILE_FRONTEND_GLL.",
            "The 2-letter ISO-3166-alpha2 code for the country of the mobile carrier of the request. Always corresponds to CURRENT_LOCATION, and is stored in the loc parameter. DEPRECATED(b/109727016). Use LocationAttributesProto.carrier_ip_type.",
            "The descriptor was generated when mapping disputed areas to legally approved countries. It always corresponds to a DEFAULT_LOCATION role. It is used to geocode 2-letter ISO-3166-alpha2 country codes stored in the \"loc\" parameter.",
            "The 2-letter ISO-3166-alpha2 code for the jurisdiction country specified by the Google application (e.g. GMM getting the country code directly from the simcard). Use the producer with role=DEFAULT_LOCATION.",
            "The location was decoded from a uuld=l debug parameter based on anonymised Gaia logs that did not contain a role/producer pair.",
            "The descriptor was generated by the Showtime (movies) Onebox.",
            "A location used by any Local Search client (not just LU) to force a specific location interpretation. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "This descriptor by generated by the Google Search Toolbelt.",
            "A location found in the history of a user of the Mobile Frontend. Always corresponds to HISTORICAL_LOCATION, and has a correctly set historical_role and historical_producer.",
            "A location found in the history of a user of Mobile Search in GWS (Tornado). Always corresponds to HISTORICAL_LOCATION, and has a correctly set historical_role and historical_producer. DEPRECATED: replaced with the OOLONG_REALTIME_CACHE producer.",
            "A location selected by the user from a list presented by a mobile UI. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "A location passed to us by a partner UI. It typically corresponds to CURRENT_LOCATION (e.g., in an ad request to specify location targeting parameters) or USER_SPECIFIED_FOR_REQUEST.",
            "The location was generated by the shared UI on the web search results page, typically for setting a default location. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The location was generated by the UI on the web search preferences page. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "From Maps Frontend (MFE).",
            "From one of the Product Search frontends. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by a legacy \"gc\" param, and corresponds to the numerical ids assigned by the Ads team to various cities and regions. It always corresponds to a USER_SPECIFIED_FOR_REQUEST. The actual id will be stored in the loc field. At the present time, this producer is only used for internal tools and debugging.",
            "The descriptor was generated by a mobile application. Used by some Google Android apps and corresponds to a HISTORICAL_LOCATION.",
            "The descriptor was generated from the location inferred from web history. Always corresponds to HISTORICAL_LOCATION (for now---could have an INFERRED_LOCATION role in the future).",
            "Same as QUERY_HISTORY_INFERRED but only used for experiments controlled by Oolong team.",
            "The descriptor was generated by Gmail for location for weather. This is to support the Gmail themes with weather. It always corresponds to a DEFAULT_LOCATION.",
            "The descriptor was generated by iGoogle for getting weather data. It corresponds to USER_SPECIFIED_FOR_REQUEST in this case.",
            "The descriptor was generated by Calendar for getting weather data. It always corresponds to a DEFAULT_LOCATION.",
            "The descriptor was generated from the location inferred from phone number or the personalization settings of the device in SMS search. It always correspond to a DEFAULT_LOCATION.",
            "The descriptor was generated from the legacy 'gl' cgi param on a normal search request. It always corresponds to a CURRENT_LOCATION. ADS_GEO_PARAM will also be present if \"gr\" and/or \"gcs\" are present.",
            "The descriptor was generated from the legacy 'gl' cgi param sent as an override from a partner. It always corresponds to the CURRENT_LOCATION role. ADS_GEO_PARAM will also be present if \"gr\" and/or \"gcs\" are present.",
            "The descriptor was generated from a cookie that stores a previously set legacy 'gl' cgi param. It always corresponds to the CURRENT_LOCATION role.",
            "The jurisdiction country derived from the GWS FrontendRequest. Always corresponds to the CURRENT_LOCATION role.",
            "Override from one of the Circulars frontends. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by the Search API for Shopping based on a user supplied parameter. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by OZ frontend. It always corresponds to USER_SPECIFIED_FOR_REQUEST",
            "The descriptor generated for Ads. This is generated from gl, gr, gcs and gm parameters. If the gl=US, gr=US-CA and gcs=San+Francisco, then the location is set to \"San Francisco,CA,US\". If any parameter is missing, it is skipped from the final location string. For example, if gcs is missing above, the location would be \"CA,US\". This and LEGACY_GL_PARAM will be generated when gr/gcs are present. Always corresponds to the CURRENT_LOCATION role.",
            "The descriptor generated by GWS for Ads for partner requests. This is generated from gl, gr, gcs and gm parameters passed from partners. If the gl=US, gr=US-CA and gcs=San+Francisco, then the location is set to \"San Francisco,CA,US\". If any parameter is missing, it is skipped from the final location string. For example, if gcs is missing above, the location would be \"CA,US\". This and LEGACY_PARTNER_GL_PARAM will be generated when gr/gcs are present. Always corresponds to the CURRENT_LOCATION role.",
            "Overrides all other default locations. It is a freeform address string. It always corresponds to the DEFAULT_LOCATION role. It is intended for testing only. NOTE: Please talk to oolong-team before using this producer. It should be used for one-off overrides only.",
            "Location specified by viewport CGI parameters sll, sspn.",
            "Location extracted from Happy Hour (signed-in user). Will be used with HISTORICAL_LOCATION role.",
            "Descriptor generated from stickiness params feature id.",
            "Location determined by a turn-by-turn-navigation client triggered by a reroute event. A location of this producer should additionally specify a semantic with LocationSemantic members to differentiate them among each other.",
            "Location containing a feature ID determined by HULK realtime snap-to-place. The latlng and timestamp will correspond to the device location at the point the snap-to-place request was made. The confidence value is the confidence of that feature according to the snap-to-place response. This will usually be used with the CURRENT_LOCATION role, although might also be a HISTORICAL_LOCATION in cases where we are expressing a series of recent snap-to-place results.",
            "Location containing a feature ID determined by HULK realtime snap-to-place as in SNAP_TO_PLACE_IMPLICIT, but which was subsequently confirmed by the user. As in SNAP_TO_PLACE_IMPLICIT the confidence value will reflect the value returned by the snap-to-place response, but backends may choose to ignore that value and assume the confidence is 100% since the user has explicitly chosen to interact with the place (the ambiguity is worth capturing though since the UI flow will not necessarily constitute an actual confirmation of a user's presence in a place). This will usually be used with the CURRENT_LOCATION role, although might also be a HISTORICAL_LOCATION in cases where we are expressing a series of recent snap-to-place results.",
            "Location extracted from HappyHour which correspond to user's home and work locations. These locations are fetched from HulkUserPlaces HappyHour object (go/hulk-in-happyhour). This will be used with role=DEFAULT_LOCATION and LocationSemantic will indicate whether this location is home or work. AdWords will be the first client of this data. These locations are confirmed by the user. DEPRECATED: No longer used in production.",
            "Similar to the above producer, except that these locations are inferred by happyhour and are not confirmed by the user. Two different producers are being used for confirmed and inferred locations as their use might have different privacy implications. Design doc: go/homeworktargeting DEPRECATED: No longer used in production.",
            "The location extracted from a search nearby request in Tactile.",
            "Location determined by Maps Activity in GMM client, corresponding to a previous location of the user for which nearby places are requested. This will be used with role=USER_SPECIFIED_FOR_REQUEST.",
            "This descriptor is to only be used for experiments controlled by ipgeo team. During experimentation or ramping up launches, when this is provided in addition to IP_ADDRESS, this one is guaranteed to contain the result of the baseline ip index until the launch is at 100 % for both search and ads. Note that the definition of baseline may change depending on the product that uses it. For example, in search it may contain the old index whereas in Ads it may contain the experimental index. Contact the ipgeo-team for more details.",
            "This descriptor is intended for a client to pass an offset used to anonymize all pii coordinates in a SearchAlongRouteContext or EnrouteContext. Anonymized coordinates are set as relative to DIRECTIONS_START_POINT rather than as absolute locations. This should be used with role = USER_SPECIFIED_FOR_REQUEST.",
            "This producer indicates the location is from the search-along-route system. This producer is not intended to be used in a raw LocationResult; rather it is a descriptor for use with downstream processed locations (such as LocationRankingTargetLocation).",
            "This producer returns the best guess for the user location as projected onto a specific route that the user is following. Users using driving navigation most often follow the route they are being told. On occasion they deviate, and sometimes it is not clear whether they have deviated or not. To represent both possibilities, Google Maps for Mobile sends both (a) the user location snapped to the road network and (b) the user location snapped to the specific route the user is being told to follow. The former has DEVICE_LOCATION producer and the latter has SNAP_TO_ROUTE producer.",
            "This descriptor was generated from Google My Business location as a lat/lng. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "This is a device location that has been rejected for some reason. It is only kept in the location context so we can analyze them in logs.",
            "This is a device location that has been quantized on device for privacy purposes, for use by NBN in GMM backends. Consult with pwg-geo@ and oolong-team@ before using this producer.",
            "A location found in the history of a gaia user in GWS. Similar to GWS_MOBILE_HISTORY_ZWIEBACK, but works only for gaia users. Differs from GAIA_LOCATION_HISTORY - it is extracted from user search requests (not from user location reports on Android) and stored in Kansas (not in HappyHour). DEPRECATED: replaced with the OOLONG_REALTIME_CACHE producer.",
            "A FUTURE_LOCATION signal originating from the user location forecast producer in Context Manager: go/context-manager.",
            "A HISTORICAL_LOCATION region collected on device over time: go/gmm-terroir. DEPRECATED(2018-02-20): b/124457814.",
            "The descriptor was generated by the Google News UI. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by the user's preferred delivery address configured in Google Shopping Express. go/shipping-address",
            "Information about the device, without actual location data, e.g. ActivityRecord.",
            "A FUTURE_LOCATION signal produced by travel state intent: go/travel-triggering.",
            "A frequently visited place of a user, see go/hulk-routines-implementation. For Location History users only. Experimental, consult with oolong-team@ before using this producer.",
            "A special enum value for representing a wildcard producer (matches any producer). This must never be used as the producer for a descriptor.",
            "The descriptor was generated by Toolbar and passed via the legacy X_TOOLBAR_LOCATION header. It always corresponds to a CURRENT_LOCATION.",
            "The descriptor was generated by Mobile Frontend and passed via the legacy \"gll\" and \"near\" params. It always corresponds to a CURRENT_LOCATION. The \"gll\" parameter appears in latlng (and, if applicable latlng_span) and if there's a \"near\" parameter, it appears in the loc field. Note that other uses of \"gll\" are not covered by this producer. DEPRECATED(finnegan): As of 2010/03/26. This will be renamed eventually.",
            "The descriptor was generated by Mobile Frontend and passed via the legacy \"near\" param (without \"gll\"). This has different semantics from those of LEGACY_NEAR_PARAM. It always corresponds to a CURRENT_LOCATION. DEPRECATED(finnegan): As of 2010/03/26. This will be renamed eventually.",
            "A result that was ablated for an experiment.",
            "Location coming from Oolong location cache (go/ort-cache-dd).",
            "Same as OOLONG_REALTIME_CACHE but only used for experiments controlled by Oolong team.",
            "Location coming from an internal superroot call trying to resolve one directions waypoint in the context of a known one. This will be used inside DirectionsSearch flow in superroot before sending a request to the WebPlusLocal node in superroot.",
            "Viewport derived in Superroot after organic results are available.",
            "Location from the Search Region Settings in Search Settings (stored in the Zwieback cookie). Always combined with the DEFAULT_LOCATION role. Search uses this setting to determine the jurisdiction region (for signed-in and signed-out traffic), but does so on the GWS side and sends only the output of its logic as a GWS_JURISDICTION_COUNTRY result to Oolong Service. Thus, it does not need to use this producer. Conversely, for Assistant traffic, the jurisdiction region is determined in LES from the various input signals (including this one). Prioritization between the various signals for Assistant is described in go/assistant-region and implemented in google3/googledata/location/unified/location_service/client_configuration.textproto.",
            "A location that originates in assistant. The location is contained in a LocationDescriptor across assistant. The source of the location is unknown but it is not a DEVICE_LOCATION. go/as-oolong-launch",
            "A location indicated by the user as their default to be used for the current location.",
            "Viewport override for GLS ad retrieval."
          ],
          "type": "string"
        },
        "historicalProminence": {
          "deprecated": true,
          "description": "This field is intended for recording frequency of historical location usage. Do not use it unless you know the historical producer intention for this field. DEPRECATED: This is no longer used or populated.",
          "format": "int32",
          "type": "integer"
        },
        "historicalRole": {
          "description": "This field is intended for recording the role of a historical location. It will be populated for a descriptor with role HISTORICAL_LOCATION, using the role of the original descriptor. To enable location history to be sent via an untrusted source to a frontend, you should make sure that the historical_role-historical_producer pair of the descriptor also appears on the untrusted allowlist used by the frontend.",
          "enum": [
            "UNKNOWN_ROLE",
            "CURRENT_LOCATION",
            "DEFAULT_LOCATION",
            "QUERY",
            "USER_SPECIFIED_FOR_REQUEST",
            "HISTORICAL_QUERY",
            "HISTORICAL_LOCATION",
            "VIEWPORT",
            "FUTURE_LOCATION",
            "INVALID_LOCATION",
            "EXPERIMENTAL_LOCATION",
            "CURRENT_CONTEXT",
            "FINAL_VIEWPORT",
            "GLS_FINAL_VIEWPORT",
            "WILDCARD_ROLE"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors. A descriptor with this role is invalid and should be ignored.",
            "The location is the device's current, physical location. Semantics: * unique * implicit * immediate",
            "A user-specified default location. The suggested interpretation is as a literal default; in the absence of better information or a reasonable understanding of the user's intent, use the default location. Semantics: * unique * explicit * persistent",
            "A descriptor corresponding to the query in a request (if any). A query may or may not contain location information but a descriptor is created and geocoding attempted in case there is one. The query is specified in the loc field and can take two forms, the raw query or an squery. The form is indicated by the corresponding producer (RQUERY or SQUERY). Semantics: * unique * explicit * immediate",
            "A user-specified location specific to this request but not part of a query. These typically come from the user entering an overriding location in some separate UI field and submitting a request (e.g, overriding the location of weather results or setting a new default location). The source of the override is indicated by the producer. While it is technically possible to have multiple overrides for a request, that suggests a confusing user experience. Semantics: * unique * explicit * immediate",
            "DEPRECATED: This was never used in production and is replaced by HISTORICAL_LOCATION.",
            "A descriptor corresponding to some past location associated with the current request. This location may have come from a variety of sources (e.g., a history of queries) and the source of the location is indicated by the producer. There can be more than one historical location in a context. Historical locations should always have an associated timestamp. The original metadata for the location should be added via the historical_role and historical_producer fields. Semantics: * repeated * implicit * persistent",
            "A descriptor corresponding to a user-visible viewport (e.g., Maps viewport, Streetview viewport, mobile camera viewport). This viewport may have come from a variety of sources, indicated by the producer. We expect there to be only one viewport active (hence \"unique\" semantics). We assume that the user has explicitly accepted and is aware of the viewport (hence \"explicit\" semantics). The viewport is associated only with the current query (hence \"immediate\" semantics). Viewports are expressed via rect. Semantics: * unique * explicit * immediate",
            "A descriptor corresponding to a prediction of the future location of the user issuing the request. This location may have come from a variety of sources (e.g. calendar, user profile, etc) and the source of the location is indicated by the producer. There can be more than one future location in a context. Future locations should always have associated presence_interval:s. Semantics: * repeated * implicit * persistent",
            "A descriptor corresponding to an invalid location, e.g. rect is invalid in it. Producer is kept as the original producer, original role is lost. A location with this role should not be used in production. Semantics: * repeated",
            "Experimental device location produced by GmsCore, not to be used in any oolong policy. Only for quality check before switch to GmsCore as X-Geo header producer in AGSA. go/agsa-xgeo-integration-dd - AGSA XGeo Context Manager integration. * repeated",
            "Current location related data, without actual location information, e.g. ActivityRecord. Semantics: * unique * implicit * immediate",
            "A descriptor corresponding to the viewport that will be shown to the user after the request completes, such as a query 'tour eiffel', or a direction MTV to SFO. This viewport only appears together with the ADS_FINAL_VIEWPORT producer. We expect there to be only one at a time (hence \"unique\" semantics). We assume that the user has explicitly requested it and is aware of the viewport (hence \"explicit\" semantics). The viewport is associated only with the current query (hence \"immediate\" semantics). Viewports are expressed via rect. Semantics: * unique * explicit * immediate",
            "A descriptor corresponding to a viewport that will be used for GLS ad retrieval. On some surfaces (e.g. xGMM apps), the final viewport is expanded to improve ad retrieval for other ads. This larger viewport works poorly for GLS ad retrieval, so we will extract the original, unexpanded, final viewport as well. This viewport only appears together with the ADS_GLS_FINAL_VIEWPORT producer. We expect there to be only one at a time (\"unique\"). This viewport is the final displayed viewport (\"explicit\"). The viewport is associated only with the current query (\"immediate\"). Semantics: * unique * explicit * immediate",
            "A special enum value for representing a wildcard role (matches any role). This must never be used as the role for a descriptor."
          ],
          "type": "string"
        },
        "language": {
          "deprecated": true,
          "description": "The language used previously for query geocoding, set to the frontend language of the user during extraction. DO NOT USE THIS TO GET A USER'S LANGUAGE. INSTEAD, GET THE LANGUAGE FROM THE FrontendRequest OR THROUGH ANOTHER API! THIS FIELD WILL GO AWAY.",
          "type": "string"
        },
        "latlng": {
          "$ref": "LocationUnifiedLatLng",
          "description": "A latitude and longitude used to describe this location as a point."
        },
        "latlngSpan": {
          "$ref": "LocationUnifiedLatLng",
          "deprecated": true,
          "description": "The span of a bounding box whose center is latlng. Specifies the lengths of the sides of the box and is valid only if latlng is present. DEPRECATED(6/6/2012): b/5979511. Use 'rect' instead."
        },
        "levelFeatureId": {
          "$ref": "LocationUnifiedFeatureIdProto",
          "description": "A 128-bit feature ID for the (indoor) level/floor of this location. If present, the floor supplements other location attributes in this descriptor. For example, in shopping malls it is quite common that one store occupies rooms on multiple levels, connected with escalators. The user can be at the exact same lat/lng and at the same GAP store, but on different levels."
        },
        "levelNumber": {
          "description": "The number of this location's level relative to the ground floor. 0 means ground floor; -2 is two levels below ground; +0.5 is a mezzanine.",
          "format": "float",
          "type": "number"
        },
        "loc": {
          "description": "A string containing the location payload. The format of this string may depend on the producer but it should be otherwise be treated like a freeform, human-readable string (a query, a street address, city name, postal code, district name, country, etc.). Other, producer-specific formats include IP address, host domain, and squery. time zone. Note that for some producers there is no guarantee that the string contains a valid location (e.g., a query for [pizza]).",
          "type": "string"
        },
        "mid": {
          "description": "A 64-bit machine identifier of a geo feature in Freebase.",
          "format": "uint64",
          "type": "string"
        },
        "permissionGranularity": {
          "description": "The granularity of the location permissions that was present to get the device location that this location descriptor represents. Only relevant for device locations.",
          "enum": [
            "PERMISSION_GRANULARITY_UNKNOWN",
            "PERMISSION_GRANULARITY_COARSE",
            "PERMISSION_GRANULARITY_FINE"
          ],
          "enumDescriptions": [
            "",
            "The device location was retrieved with `coarse` permissions, meaning it will have a radius > 1.2 km. Note that this is *not* the common 3+1 anonymization, hence these are usually referred to as \"approximate\" in oolong.",
            "The device location was retrieved with `fine` permission, meaning the radius will be as precise as reported by the device."
          ],
          "type": "string"
        },
        "presenceInterval": {
          "description": "The presence intervals associated with the location. Required for FUTURE_LOCATION signals. This field should not be logged anywhere.",
          "items": {
            "$ref": "LocationUnifiedPresenceInterval"
          },
          "type": "array"
        },
        "producer": {
          "description": "The producer of this location.",
          "enum": [
            "UNKNOWN_PRODUCER",
            "LOGGED_IN_USER_SPECIFIED",
            "PREF_L_FIELD_ADDRESS",
            "IP_ADDRESS",
            "IP_ADDRESS_REALTIME",
            "GOOGLE_HOST_DOMAIN",
            "RQUERY",
            "SQUERY",
            "QUERY_LOCATION_OVERRIDE_PRODUCER",
            "QREF",
            "DEVICE_LOCATION",
            "LEGACY_NEAR_PARAM",
            "CARRIER_COUNTRY",
            "JURISDICTION_COUNTRY",
            "CLIENT_SPECIFIED_JURISDICTION_COUNTRY",
            "DECODED_FROM_UNKNOWN_ROLE_PRODUCER",
            "SHOWTIME_ONEBOX",
            "LOCAL_UNIVERSAL",
            "SEARCH_TOOLBELT",
            "MOBILE_FE_HISTORY",
            "GWS_MOBILE_HISTORY_ZWIEBACK",
            "MOBILE_SELECTED",
            "PARTNER",
            "WEB_SEARCH_RESULTS_PAGE_SHARED",
            "WEB_SEARCH_PREFERENCES_PAGE",
            "MAPS_FRONTEND",
            "PRODUCT_SEARCH_FRONTEND",
            "ADS_CRITERIA_ID",
            "MOBILE_APP",
            "QUERY_HISTORY_INFERRED",
            "QUERY_HISTORY_INFERRED_ALTERNATE",
            "GMAIL_THEME",
            "IGOOGLE",
            "CALENDAR",
            "SMS_SEARCH",
            "LEGACY_GL_PARAM",
            "LEGACY_PARTNER_GL_PARAM",
            "LEGACY_GL_COOKIE",
            "GWS_JURISDICTION_COUNTRY",
            "CIRCULARS_FRONTEND",
            "SHOPPING_SEARCH_API",
            "OZ_FRONTEND",
            "ADS_GEO_PARAM",
            "ADS_PARTNER_GEO_PARAM",
            "DEFAULT_LOCATION_OVERRIDE_PRODUCER",
            "VIEWPORT_PARAMS",
            "GAIA_LOCATION_HISTORY",
            "STICKINESS_PARAMS",
            "TURN_BY_TURN_NAVIGATION_REROUTE",
            "SNAP_TO_PLACE_IMPLICIT",
            "SNAP_TO_PLACE_EXPLICIT",
            "HULK_USER_PLACES_CONFIRMED",
            "HULK_USER_PLACES_INFERRED",
            "TACTILE_NEARBY_PARAM",
            "MAPS_ACTIVITY",
            "IP_ADDRESS_ALTERNATE",
            "DIRECTIONS_START_POINT",
            "SEARCH_ALONG_ROUTE",
            "SNAP_TO_ROUTE",
            "GOOGLE_MY_BUSINESS",
            "BAD_DEVICE_LOCATION",
            "GMM_QUANTIZED_DEVICE_LOCATION",
            "GWS_HISTORY_GAIA",
            "CONTEXT_MANAGER_FORECAST",
            "GMM_HEATMAP_AREA",
            "NEWS",
            "SHIPPING_ADDRESS",
            "DEVICE_CONTEXT",
            "TRAVEL_STATE_INTENT",
            "HULK_ROUTINES",
            "WILDCARD_PRODUCER",
            "LEGACY_TOOLBAR_HEADER",
            "LEGACY_MOBILE_FRONTEND_GLL",
            "LEGACY_MOBILE_FRONTEND_NEAR",
            "ABLATED_PRODUCER",
            "OOLONG_REALTIME_CACHE",
            "OOLONG_REALTIME_CACHE_ALTERNATE",
            "DIRECTIONS_WAYPOINT",
            "ADS_FINAL_VIEWPORT",
            "SEARCH_REGION_SETTINGS_COUNTRY",
            "ASSISTANT_DERIVED",
            "OOLONG_DEFAULT_LOCATION",
            "ADS_GLS_FINAL_VIEWPORT"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors.",
            "A location specified by a logged-in user (e.g., default location from Kansas). It is a freeform address string stored in loc.",
            "The user-specified default location contained in the L-field of a browser's PREF cookie. It is a freeform address string stored in loc.",
            "A location based on IP address. The IP address is stored in loc in dot-decimal (IPv4) or colon-hexadecimal (IPv6) format.",
            "This is the location that is derived from the realtime ipgeo index. This is a fresh version of ipgeo index which is available for a small subset of IPs.",
            "A location based on the domain of the Google server (e.g., google.co.uk) servicing the request. The domain name is stored in loc.",
            "The descriptor is based on a raw query (free-form). The query text is stored in loc.",
            "The descriptor is based on an squery and is stored as an squery in loc.",
            "The descriptor contains a location as a raw query in loc. It is geocoded and used to override the geocoding of the QUERY/RQUERY or QUERY/SQUERY descriptor. Only to be used for debugging purposes.",
            "This contains the location produced by qref module in qrewrite. Currently, the location is derived from the query and this will be only used with QUERY role.",
            "A location that came from determining the physical location of a device (mobile, laptop, desktop, etc.) via means such as GPS, cell network, or Wifi. Always corresponds to CURRENT_LOCATION. The accuracy of the location may be stored in the radius and/or confidence fields. NOTE: By definition, these data do not include locations collected without the user's awareness and/or consent. Users on some Google services may be notified of and consent to Google's collection and use of geographical information.",
            "The descriptor was generated by a legacy \"near\" param. It always corresponds to a USER_SPECIFIED_FOR_REQUEST. Occurrences should be replaced by Oolong-style parameters (e.g., muul/luul). Note that \"near\" params synthesized by Mobile Frontend from a lat/long are handled with LEGACY_MOBILE_FRONTEND_GLL.",
            "The 2-letter ISO-3166-alpha2 code for the country of the mobile carrier of the request. Always corresponds to CURRENT_LOCATION, and is stored in the loc parameter. DEPRECATED(b/109727016). Use LocationAttributesProto.carrier_ip_type.",
            "The descriptor was generated when mapping disputed areas to legally approved countries. It always corresponds to a DEFAULT_LOCATION role. It is used to geocode 2-letter ISO-3166-alpha2 country codes stored in the \"loc\" parameter.",
            "The 2-letter ISO-3166-alpha2 code for the jurisdiction country specified by the Google application (e.g. GMM getting the country code directly from the simcard). Use the producer with role=DEFAULT_LOCATION.",
            "The location was decoded from a uuld=l debug parameter based on anonymised Gaia logs that did not contain a role/producer pair.",
            "The descriptor was generated by the Showtime (movies) Onebox.",
            "A location used by any Local Search client (not just LU) to force a specific location interpretation. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "This descriptor by generated by the Google Search Toolbelt.",
            "A location found in the history of a user of the Mobile Frontend. Always corresponds to HISTORICAL_LOCATION, and has a correctly set historical_role and historical_producer.",
            "A location found in the history of a user of Mobile Search in GWS (Tornado). Always corresponds to HISTORICAL_LOCATION, and has a correctly set historical_role and historical_producer. DEPRECATED: replaced with the OOLONG_REALTIME_CACHE producer.",
            "A location selected by the user from a list presented by a mobile UI. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "A location passed to us by a partner UI. It typically corresponds to CURRENT_LOCATION (e.g., in an ad request to specify location targeting parameters) or USER_SPECIFIED_FOR_REQUEST.",
            "The location was generated by the shared UI on the web search results page, typically for setting a default location. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The location was generated by the UI on the web search preferences page. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "From Maps Frontend (MFE).",
            "From one of the Product Search frontends. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by a legacy \"gc\" param, and corresponds to the numerical ids assigned by the Ads team to various cities and regions. It always corresponds to a USER_SPECIFIED_FOR_REQUEST. The actual id will be stored in the loc field. At the present time, this producer is only used for internal tools and debugging.",
            "The descriptor was generated by a mobile application. Used by some Google Android apps and corresponds to a HISTORICAL_LOCATION.",
            "The descriptor was generated from the location inferred from web history. Always corresponds to HISTORICAL_LOCATION (for now---could have an INFERRED_LOCATION role in the future).",
            "Same as QUERY_HISTORY_INFERRED but only used for experiments controlled by Oolong team.",
            "The descriptor was generated by Gmail for location for weather. This is to support the Gmail themes with weather. It always corresponds to a DEFAULT_LOCATION.",
            "The descriptor was generated by iGoogle for getting weather data. It corresponds to USER_SPECIFIED_FOR_REQUEST in this case.",
            "The descriptor was generated by Calendar for getting weather data. It always corresponds to a DEFAULT_LOCATION.",
            "The descriptor was generated from the location inferred from phone number or the personalization settings of the device in SMS search. It always correspond to a DEFAULT_LOCATION.",
            "The descriptor was generated from the legacy 'gl' cgi param on a normal search request. It always corresponds to a CURRENT_LOCATION. ADS_GEO_PARAM will also be present if \"gr\" and/or \"gcs\" are present.",
            "The descriptor was generated from the legacy 'gl' cgi param sent as an override from a partner. It always corresponds to the CURRENT_LOCATION role. ADS_GEO_PARAM will also be present if \"gr\" and/or \"gcs\" are present.",
            "The descriptor was generated from a cookie that stores a previously set legacy 'gl' cgi param. It always corresponds to the CURRENT_LOCATION role.",
            "The jurisdiction country derived from the GWS FrontendRequest. Always corresponds to the CURRENT_LOCATION role.",
            "Override from one of the Circulars frontends. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by the Search API for Shopping based on a user supplied parameter. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by OZ frontend. It always corresponds to USER_SPECIFIED_FOR_REQUEST",
            "The descriptor generated for Ads. This is generated from gl, gr, gcs and gm parameters. If the gl=US, gr=US-CA and gcs=San+Francisco, then the location is set to \"San Francisco,CA,US\". If any parameter is missing, it is skipped from the final location string. For example, if gcs is missing above, the location would be \"CA,US\". This and LEGACY_GL_PARAM will be generated when gr/gcs are present. Always corresponds to the CURRENT_LOCATION role.",
            "The descriptor generated by GWS for Ads for partner requests. This is generated from gl, gr, gcs and gm parameters passed from partners. If the gl=US, gr=US-CA and gcs=San+Francisco, then the location is set to \"San Francisco,CA,US\". If any parameter is missing, it is skipped from the final location string. For example, if gcs is missing above, the location would be \"CA,US\". This and LEGACY_PARTNER_GL_PARAM will be generated when gr/gcs are present. Always corresponds to the CURRENT_LOCATION role.",
            "Overrides all other default locations. It is a freeform address string. It always corresponds to the DEFAULT_LOCATION role. It is intended for testing only. NOTE: Please talk to oolong-team before using this producer. It should be used for one-off overrides only.",
            "Location specified by viewport CGI parameters sll, sspn.",
            "Location extracted from Happy Hour (signed-in user). Will be used with HISTORICAL_LOCATION role.",
            "Descriptor generated from stickiness params feature id.",
            "Location determined by a turn-by-turn-navigation client triggered by a reroute event. A location of this producer should additionally specify a semantic with LocationSemantic members to differentiate them among each other.",
            "Location containing a feature ID determined by HULK realtime snap-to-place. The latlng and timestamp will correspond to the device location at the point the snap-to-place request was made. The confidence value is the confidence of that feature according to the snap-to-place response. This will usually be used with the CURRENT_LOCATION role, although might also be a HISTORICAL_LOCATION in cases where we are expressing a series of recent snap-to-place results.",
            "Location containing a feature ID determined by HULK realtime snap-to-place as in SNAP_TO_PLACE_IMPLICIT, but which was subsequently confirmed by the user. As in SNAP_TO_PLACE_IMPLICIT the confidence value will reflect the value returned by the snap-to-place response, but backends may choose to ignore that value and assume the confidence is 100% since the user has explicitly chosen to interact with the place (the ambiguity is worth capturing though since the UI flow will not necessarily constitute an actual confirmation of a user's presence in a place). This will usually be used with the CURRENT_LOCATION role, although might also be a HISTORICAL_LOCATION in cases where we are expressing a series of recent snap-to-place results.",
            "Location extracted from HappyHour which correspond to user's home and work locations. These locations are fetched from HulkUserPlaces HappyHour object (go/hulk-in-happyhour). This will be used with role=DEFAULT_LOCATION and LocationSemantic will indicate whether this location is home or work. AdWords will be the first client of this data. These locations are confirmed by the user. DEPRECATED: No longer used in production.",
            "Similar to the above producer, except that these locations are inferred by happyhour and are not confirmed by the user. Two different producers are being used for confirmed and inferred locations as their use might have different privacy implications. Design doc: go/homeworktargeting DEPRECATED: No longer used in production.",
            "The location extracted from a search nearby request in Tactile.",
            "Location determined by Maps Activity in GMM client, corresponding to a previous location of the user for which nearby places are requested. This will be used with role=USER_SPECIFIED_FOR_REQUEST.",
            "This descriptor is to only be used for experiments controlled by ipgeo team. During experimentation or ramping up launches, when this is provided in addition to IP_ADDRESS, this one is guaranteed to contain the result of the baseline ip index until the launch is at 100 % for both search and ads. Note that the definition of baseline may change depending on the product that uses it. For example, in search it may contain the old index whereas in Ads it may contain the experimental index. Contact the ipgeo-team for more details.",
            "This descriptor is intended for a client to pass an offset used to anonymize all pii coordinates in a SearchAlongRouteContext or EnrouteContext. Anonymized coordinates are set as relative to DIRECTIONS_START_POINT rather than as absolute locations. This should be used with role = USER_SPECIFIED_FOR_REQUEST.",
            "This producer indicates the location is from the search-along-route system. This producer is not intended to be used in a raw LocationResult; rather it is a descriptor for use with downstream processed locations (such as LocationRankingTargetLocation).",
            "This producer returns the best guess for the user location as projected onto a specific route that the user is following. Users using driving navigation most often follow the route they are being told. On occasion they deviate, and sometimes it is not clear whether they have deviated or not. To represent both possibilities, Google Maps for Mobile sends both (a) the user location snapped to the road network and (b) the user location snapped to the specific route the user is being told to follow. The former has DEVICE_LOCATION producer and the latter has SNAP_TO_ROUTE producer.",
            "This descriptor was generated from Google My Business location as a lat/lng. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "This is a device location that has been rejected for some reason. It is only kept in the location context so we can analyze them in logs.",
            "This is a device location that has been quantized on device for privacy purposes, for use by NBN in GMM backends. Consult with pwg-geo@ and oolong-team@ before using this producer.",
            "A location found in the history of a gaia user in GWS. Similar to GWS_MOBILE_HISTORY_ZWIEBACK, but works only for gaia users. Differs from GAIA_LOCATION_HISTORY - it is extracted from user search requests (not from user location reports on Android) and stored in Kansas (not in HappyHour). DEPRECATED: replaced with the OOLONG_REALTIME_CACHE producer.",
            "A FUTURE_LOCATION signal originating from the user location forecast producer in Context Manager: go/context-manager.",
            "A HISTORICAL_LOCATION region collected on device over time: go/gmm-terroir. DEPRECATED(2018-02-20): b/124457814.",
            "The descriptor was generated by the Google News UI. Always corresponds to USER_SPECIFIED_FOR_REQUEST.",
            "The descriptor was generated by the user's preferred delivery address configured in Google Shopping Express. go/shipping-address",
            "Information about the device, without actual location data, e.g. ActivityRecord.",
            "A FUTURE_LOCATION signal produced by travel state intent: go/travel-triggering.",
            "A frequently visited place of a user, see go/hulk-routines-implementation. For Location History users only. Experimental, consult with oolong-team@ before using this producer.",
            "A special enum value for representing a wildcard producer (matches any producer). This must never be used as the producer for a descriptor.",
            "The descriptor was generated by Toolbar and passed via the legacy X_TOOLBAR_LOCATION header. It always corresponds to a CURRENT_LOCATION.",
            "The descriptor was generated by Mobile Frontend and passed via the legacy \"gll\" and \"near\" params. It always corresponds to a CURRENT_LOCATION. The \"gll\" parameter appears in latlng (and, if applicable latlng_span) and if there's a \"near\" parameter, it appears in the loc field. Note that other uses of \"gll\" are not covered by this producer. DEPRECATED(finnegan): As of 2010/03/26. This will be renamed eventually.",
            "The descriptor was generated by Mobile Frontend and passed via the legacy \"near\" param (without \"gll\"). This has different semantics from those of LEGACY_NEAR_PARAM. It always corresponds to a CURRENT_LOCATION. DEPRECATED(finnegan): As of 2010/03/26. This will be renamed eventually.",
            "A result that was ablated for an experiment.",
            "Location coming from Oolong location cache (go/ort-cache-dd).",
            "Same as OOLONG_REALTIME_CACHE but only used for experiments controlled by Oolong team.",
            "Location coming from an internal superroot call trying to resolve one directions waypoint in the context of a known one. This will be used inside DirectionsSearch flow in superroot before sending a request to the WebPlusLocal node in superroot.",
            "Viewport derived in Superroot after organic results are available.",
            "Location from the Search Region Settings in Search Settings (stored in the Zwieback cookie). Always combined with the DEFAULT_LOCATION role. Search uses this setting to determine the jurisdiction region (for signed-in and signed-out traffic), but does so on the GWS side and sends only the output of its logic as a GWS_JURISDICTION_COUNTRY result to Oolong Service. Thus, it does not need to use this producer. Conversely, for Assistant traffic, the jurisdiction region is determined in LES from the various input signals (including this one). Prioritization between the various signals for Assistant is described in go/assistant-region and implemented in google3/googledata/location/unified/location_service/client_configuration.textproto.",
            "A location that originates in assistant. The location is contained in a LocationDescriptor across assistant. The source of the location is unknown but it is not a DEVICE_LOCATION. go/as-oolong-launch",
            "A location indicated by the user as their default to be used for the current location.",
            "Viewport override for GLS ad retrieval."
          ],
          "type": "string"
        },
        "provenance": {
          "description": "Extra information about how this descriptor was obtained. Provenance is intended for logging non-semantic details about a descriptor (e.g., whether it was passed using a particular parameter or stored in a particular backend). It should *never* be used as a criterion for selection by a policy or backend (use role/producer instead). This is for bookkeeping only. You don't want this field. Really.",
          "enum": [
            "UNREMARKABLE",
            "TOOLBAR",
            "MOBILE_FE",
            "LEGACY_MOBILE_FRONTEND_GLL_PARAM",
            "MAPS_FRONTEND_IL_DEBUG_IP",
            "LEGACY_MOBILE_FRONTEND_NEAR_PARAM",
            "GWS_MOBILE_CLIENT",
            "GWS_MOBILE_CLIENT_ESSENTIAL_ONLY",
            "XFF_HEADER",
            "XGEO_HEADER",
            "LEGACY_GEO_POSITION_HEADER",
            "ASSISTANT_SETTINGS_FOR_CURRENT_DEVICE",
            "ASSISTANT_DEVICE_PROPERTIES",
            "EVAL_UNIQUE_SELECTED_USER_LOCATION",
            "EVAL_BASE_UNIQUE_SELECTED_USER_LOCATION",
            "EVAL_EXP_UNIQUE_SELECTED_USER_LOCATION",
            "PERSONAL_LOCATION_MODEL_QUERY_ONLY"
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value. Nothing interesting about the descriptor's provenance.",
            "Descriptor came from the Google Toolbar.",
            "Descriptor came from the Mobile Frontend",
            "Descriptor came via from Mobile Frontend via the legacy \"gll\" param.",
            "Descriptor came from the Maps Frontend il parameter, with a type of ip.",
            "Descriptor came via from Mobile Frontend via the legacy \"near\" param.",
            "Descriptor came from GWS via the client library.",
            "Essential-only mode version of GWS_MOBILE_CLIENT.",
            "Descriptor came from X-Forwarded-For HTTP Header.",
            "Descriptor came from X-Geo HTTP header or an app-internal flow that retrieves location in an X-Geo equivalent way.",
            "Descriptor came from legacy Geo-Position HTTP header.",
            "Descriptor came from the Assistant settings for the current device (see also go/opa-settings).",
            "Descriptor came from the Assistatn DeviceProperties.location_descriptor field. This is used by some client surfaces (e.g. KaiOS).",
            "DO NOT use the following three without consulting with oolong-team. They are used by Evals to force a given location to be the chosen one.",
            "",
            "",
            "INTERNAL ONLY DO NOT use the following values without first consulting oolong-team@. These should be considered internal details of Oolong's business logic and generally should not be used by clients. Indicates a PLM that was built using query (or query-like) inputs only."
          ],
          "type": "string"
        },
        "radius": {
          "description": "The radius within which one standard deviation (or 68%) of possible locations lie, assuming a normal distribution around latlng. This radius is normally seen in the UI of mobile maps as the blue 'accuracy circle', although the interpretation (e.g. 1sd or 2sd) may vary by platform. Units must be in mm.",
          "format": "float",
          "type": "number"
        },
        "rect": {
          "$ref": "LocationUnifiedLatLngRect",
          "description": "A viewport or bounds depending on role/producer. For example, when role is VIEWPORT this field represents a viewport. 'latlng' and 'rect' are mutually exclusive."
        },
        "role": {
          "description": "The role of this location.",
          "enum": [
            "UNKNOWN_ROLE",
            "CURRENT_LOCATION",
            "DEFAULT_LOCATION",
            "QUERY",
            "USER_SPECIFIED_FOR_REQUEST",
            "HISTORICAL_QUERY",
            "HISTORICAL_LOCATION",
            "VIEWPORT",
            "FUTURE_LOCATION",
            "INVALID_LOCATION",
            "EXPERIMENTAL_LOCATION",
            "CURRENT_CONTEXT",
            "FINAL_VIEWPORT",
            "GLS_FINAL_VIEWPORT",
            "WILDCARD_ROLE"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors. A descriptor with this role is invalid and should be ignored.",
            "The location is the device's current, physical location. Semantics: * unique * implicit * immediate",
            "A user-specified default location. The suggested interpretation is as a literal default; in the absence of better information or a reasonable understanding of the user's intent, use the default location. Semantics: * unique * explicit * persistent",
            "A descriptor corresponding to the query in a request (if any). A query may or may not contain location information but a descriptor is created and geocoding attempted in case there is one. The query is specified in the loc field and can take two forms, the raw query or an squery. The form is indicated by the corresponding producer (RQUERY or SQUERY). Semantics: * unique * explicit * immediate",
            "A user-specified location specific to this request but not part of a query. These typically come from the user entering an overriding location in some separate UI field and submitting a request (e.g, overriding the location of weather results or setting a new default location). The source of the override is indicated by the producer. While it is technically possible to have multiple overrides for a request, that suggests a confusing user experience. Semantics: * unique * explicit * immediate",
            "DEPRECATED: This was never used in production and is replaced by HISTORICAL_LOCATION.",
            "A descriptor corresponding to some past location associated with the current request. This location may have come from a variety of sources (e.g., a history of queries) and the source of the location is indicated by the producer. There can be more than one historical location in a context. Historical locations should always have an associated timestamp. The original metadata for the location should be added via the historical_role and historical_producer fields. Semantics: * repeated * implicit * persistent",
            "A descriptor corresponding to a user-visible viewport (e.g., Maps viewport, Streetview viewport, mobile camera viewport). This viewport may have come from a variety of sources, indicated by the producer. We expect there to be only one viewport active (hence \"unique\" semantics). We assume that the user has explicitly accepted and is aware of the viewport (hence \"explicit\" semantics). The viewport is associated only with the current query (hence \"immediate\" semantics). Viewports are expressed via rect. Semantics: * unique * explicit * immediate",
            "A descriptor corresponding to a prediction of the future location of the user issuing the request. This location may have come from a variety of sources (e.g. calendar, user profile, etc) and the source of the location is indicated by the producer. There can be more than one future location in a context. Future locations should always have associated presence_interval:s. Semantics: * repeated * implicit * persistent",
            "A descriptor corresponding to an invalid location, e.g. rect is invalid in it. Producer is kept as the original producer, original role is lost. A location with this role should not be used in production. Semantics: * repeated",
            "Experimental device location produced by GmsCore, not to be used in any oolong policy. Only for quality check before switch to GmsCore as X-Geo header producer in AGSA. go/agsa-xgeo-integration-dd - AGSA XGeo Context Manager integration. * repeated",
            "Current location related data, without actual location information, e.g. ActivityRecord. Semantics: * unique * implicit * immediate",
            "A descriptor corresponding to the viewport that will be shown to the user after the request completes, such as a query 'tour eiffel', or a direction MTV to SFO. This viewport only appears together with the ADS_FINAL_VIEWPORT producer. We expect there to be only one at a time (hence \"unique\" semantics). We assume that the user has explicitly requested it and is aware of the viewport (hence \"explicit\" semantics). The viewport is associated only with the current query (hence \"immediate\" semantics). Viewports are expressed via rect. Semantics: * unique * explicit * immediate",
            "A descriptor corresponding to a viewport that will be used for GLS ad retrieval. On some surfaces (e.g. xGMM apps), the final viewport is expanded to improve ad retrieval for other ads. This larger viewport works poorly for GLS ad retrieval, so we will extract the original, unexpanded, final viewport as well. This viewport only appears together with the ADS_GLS_FINAL_VIEWPORT producer. We expect there to be only one at a time (\"unique\"). This viewport is the final displayed viewport (\"explicit\"). The viewport is associated only with the current query (\"immediate\"). Semantics: * unique * explicit * immediate",
            "A special enum value for representing a wildcard role (matches any role). This must never be used as the role for a descriptor."
          ],
          "type": "string"
        },
        "semantic": {
          "description": "Some producers may additionally specify semantics explaining the meaning of a location, in particular to differentiate several locations with the same producer.",
          "items": {
            "enum": [
              "SEMANTIC_UNKNOWN",
              "SEMANTIC_REROUTE_SOURCE",
              "SEMANTIC_REROUTE_PROPOSED",
              "SEMANTIC_REROUTE_TAKEN",
              "SEMANTIC_HOME",
              "SEMANTIC_WORK",
              "SEMANTIC_ONBOARD_TRANSIT",
              "SEMANTIC_MAPS_SEARCH",
              "SEMANTIC_FREQUENT_PLACE",
              "SEMANTIC_OTHER"
            ],
            "enumDescriptions": [
              "THIS VALUE MUST BE THE FIRST IN THIS ENUM. Default value used to identify unset fields including those resulting from enum values unknown to an out-dated binary. This should be used only to check for errors.",
              "A descriptor corresponding to an already traveled location on a user's route as part of reroute information. The location producer of these should be TURN_BY_TURN_NAVIGATION_REROUTE.",
              "A descriptor corresponding to a not traveled location on a user's route (before a reroute event) as part of reroute information. The location producer of these should be TURN_BY_TURN_NAVIGATION_REROUTE.",
              "A descriptor corresponding to an actually traveled location (in contrast to a supposed-to travel location) as part of reroute information. The location producer of these should be TURN_BY_TURN_NAVIGATION_REROUTE.",
              "A descriptor corresponding to the maps aliased location.",
              "",
              "A descriptor corresponding to a location of a user who is riding on a transit vehicle.",
              "user searched for this place",
              "user frequently visits this place",
              "other maps alias icon"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "semanticPlace": {
          "description": "If there are multiple semantic places, then the first place is the finest, then come the parent hierarchy. This field should not be logged anywhere.",
          "items": {
            "$ref": "LocationUnifiedSemanticPlace"
          },
          "type": "array"
        },
        "timestamp": {
          "description": "A timestamp associated with this location expressed as the number of microseconds since 00:00:00 Jan-1-1970 UTC. If not set, assumed to be \"now\" or irrelevant. Use this field to indicate when this location has been acquired (e.g. by requesting location from the device).",
          "format": "int64",
          "type": "string"
        },
        "visibleNetwork": {
          "deprecated": true,
          "description": "A list of visible networks that describe the location and can geocoded by GLS. This field should not be logged anywhere.",
          "items": {
            "$ref": "LocationUnifiedVisibleNetwork"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationResult": {
      "description": "All information about a single location within a context. This includes the descriptor, which can be thought of as a kind of \"query\" that minimally specifies the location, and rest (i.e., geocoding data, policy annotations, etc.). A LocationResult typically starts with just a descriptor and the rest is added later via lookups. If necessary, persistent locations can be stored as a pre-geocoded LocationResult to avoid the extra work. Next Available Tag: 14",
      "id": "LocationUnifiedLocationResult",
      "properties": {
        "alternateAnnotations": {
          "description": "Additional sets of annotations from other oolong policies.",
          "items": {
            "$ref": "LocationUnifiedAnnotationSet"
          },
          "type": "array"
        },
        "annotations": {
          "description": "The annotations that have been applied to this result for use in production.",
          "items": {
            "$ref": "LocationUnifiedLocationAnnotation"
          },
          "type": "array"
        },
        "defaultBlockingData": {
          "$ref": "DefaultBlockingDataProto",
          "description": "Information about whether the feature hierarchy contains default-blocked features."
        },
        "desc": {
          "$ref": "LocationUnifiedLocationDescriptor",
          "description": "The descriptor for this result. Once added, descriptors should be considered immutable. Any additional information should be included elsewhere in the result."
        },
        "displayable": {
          "description": "Flag to indicate this result has human-readable names for display.",
          "type": "boolean"
        },
        "extraData": {
          "$ref": "LocationUnifiedLocationResultExtraData"
        },
        "featureRefs": {
          "description": "The feature hierarchy for this location result, if using the new feature-pool format instead of les_response.",
          "items": {
            "$ref": "LocationUnifiedFeatureReference"
          },
          "type": "array"
        },
        "geocoded": {
          "description": "True indicates that this result has geographical information like a lat/long, bounding box, etc.). The minimum is a lat/long. False only indicates that no such data is present and does NOT explain the reason (e.g., geocoding hasn't been attempted, geocoding timed out, the descriptor does not refer to a location, etc.).",
          "type": "boolean"
        },
        "geocodingReason": {
          "description": "Explains the specific reason for the value of the geocoded field, if any. This can be used to determine whether a descriptor needs to be geocoded. Used for making runtime decisions about whether to attempt geocoding.",
          "enum": [
            "DEFAULT_REASON",
            "NO_GEOCODING_RESULTS",
            "RPC_FAILED"
          ],
          "enumDescriptions": [
            "No reason is required to explain the value of the geocoded field. For geocoded = true, geocoding data is available. For geocoded = false, geocoding has not been attempted.",
            "Geocoding was attempted but returned no results for the descriptor. This usually means that the descriptor does not refer to a recognized location (e.g., the query [pizza]). Only valid for geocoded = false.",
            "One or more geocoding RPCs failed."
          ],
          "type": "string"
        },
        "lesResponse": {
          "$ref": "LocationExtractorLocationExtractionResponse",
          "description": "WARNING: Do not reference this field directly check go/oolong-usage on how to access the values present in this proto or contact oolong-team@google.com if you don't see what you need."
        },
        "nonstandardData": {
          "$ref": "MessageSet",
          "description": "Allow pipelines to associate arbitrary data (e.g., specialized geo identifiers) with a result. Chiefly intended to pass custom data around backends after standard geocoding and policy execution. Oolong libraries will generally ignore such data but may strip it to guard against cache fragmentation. Using this to pass data from frontends to backends before geocoding is not recommended and at your own risk. This field will carry AnonymizedBounds data which will be used for logging purposes."
        },
        "policyResult": {
          "$ref": "LocationUnifiedPolicyResult",
          "description": "Result data computed by the policy annotation."
        },
        "sourceDescription": {
          "description": "Enum describing what this result was based on (e.g. location reported by the end user's phone). Present only if the LocationContext was produced by OolongService and this result has the USFUL annotation.",
          "enum": [
            "SOURCE_DESCRIPTION_UNSPECIFIED",
            "FROM_YOUR_INTERNET_ADDRESS",
            "FROM_YOUR_LOCATION_HISTORY",
            "BASED_ON_YOUR_LOCATION_HISTORY",
            "FROM_YOUR_DEVICE",
            "BASED_ON_YOUR_PAST_ACTIVITY",
            "FROM_YOUR_PLACES_HOME",
            "FROM_YOUR_PLACES_WORK"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedLocationResultExtraData": {
      "description": "Includes data that is included only for small subset of results. Next Available Tag: 4",
      "id": "LocationUnifiedLocationResultExtraData",
      "properties": {
        "featureDiff": {
          "description": "Result caused a feature diff",
          "type": "boolean"
        },
        "interpretationData": {
          "$ref": "LocationUnifiedInterpretationData",
          "description": "For query results."
        },
        "ipblockinfo": {
          "$ref": "IPBlockInfoProto",
          "description": "Information about an ip block, like range, speed etc. This could be the only thing present in an empty result."
        }
      },
      "type": "object"
    },
    "LocationUnifiedOolongFeature": {
      "description": "A featurelet corresponds to a single Mapfacts feature. These messages contain only the base data, without anything added by the Oolong policy (like trimming annotations or confidences). Next available tag: 11 LINT.IfChange",
      "id": "LocationUnifiedOolongFeature",
      "properties": {
        "additionalData": {
          "$ref": "MessageSet",
          "description": "A field to attach additional data about the feature. For example, the location extraction server uses this field to include the ads criteria id of the featurelet if available. As specified by MessageSet, all types within the set must be unique. Using the changelist number where the message was created is a good method of ensuring uniqueness."
        },
        "areaRank": {
          "description": "Copy of FeatureProto->RankDetailsProto->area_rank",
          "format": "float",
          "type": "number"
        },
        "center": {
          "$ref": "GeostorePointProto",
          "description": "Latitude and longitude of the feature center."
        },
        "establishmentType": {
          "description": "This field contains original feature's establishment type if it had one.",
          "enum": [
            "TYPE_ANY",
            "TYPE_UNDEFINED",
            "TYPE_DEPRECATED_AVIATION",
            "TYPE_BUSINESS",
            "TYPE_TRAVEL_SERVICE",
            "TYPE_LODGING",
            "TYPE_HOTEL",
            "TYPE_RESORT",
            "TYPE_MOTEL",
            "TYPE_HOSTEL",
            "TYPE_GUESTHOUSE",
            "TYPE_VACATION_RENTAL",
            "TYPE_GAS_STATION",
            "TYPE_REST_AREA",
            "TYPE_CASH_MACHINE",
            "TYPE_CAR_RENTAL",
            "TYPE_CAR_REPAIR",
            "TYPE_TAXI_STAND",
            "TYPE_TRAVEL_AGENT",
            "TYPE_BICYCLE_RENTAL_POINT",
            "TYPE_ELECTRIC_VEHICLE_CHARGING_STATION",
            "TYPE_SHOPPING",
            "TYPE_GROCERY",
            "TYPE_ANTIQUES",
            "TYPE_APPAREL",
            "TYPE_GIFTS",
            "TYPE_JEWELRY",
            "TYPE_SPORTING_GOODS",
            "TYPE_VEHICLE",
            "TYPE_SHOPPING_CENTER",
            "TYPE_SUPERMARKET",
            "TYPE_FAIRGROUNDS",
            "TYPE_MARKET",
            "TYPE_PRODUCE_MARKET",
            "TYPE_FARMERS_MARKET",
            "TYPE_LIQUOR_STORE",
            "TYPE_SOUVENIR_SHOP",
            "TYPE_INDUSTRIAL",
            "TYPE_CONSTRUCTION",
            "TYPE_BUILDING_MATERIAL",
            "TYPE_SECURITY_PRODUCTS",
            "TYPE_MECHANICAL",
            "TYPE_TEXTILE",
            "TYPE_CHEMICAL",
            "TYPE_METAL",
            "TYPE_TRANSPORTATION",
            "TYPE_FREIGHT",
            "TYPE_AVIATION",
            "TYPE_COURIER",
            "TYPE_MOVING",
            "TYPE_PACKAGING",
            "TYPE_RAIL",
            "TYPE_PUBLIC_TRANSIT",
            "TYPE_WAREHOUSE",
            "TYPE_DEFENSE",
            "TYPE_AGRICULTURE",
            "TYPE_PLANTATION",
            "TYPE_PLANT_NURSERY",
            "TYPE_DESIGN",
            "TYPE_UTILITIES",
            "TYPE_POWER_PLANT",
            "TYPE_SEWAGE_TREATMENT_PLANT",
            "TYPE_WATER_TREATMENT_PLANT",
            "TYPE_SUBSTATION",
            "TYPE_MANUFACTURING",
            "TYPE_BIOTECH",
            "TYPE_MATERIALS",
            "TYPE_MINING",
            "TYPE_QUARRY",
            "TYPE_TANNERY",
            "TYPE_OIL_REFINERY",
            "TYPE_ADVERTISING_MARKETING",
            "TYPE_LEGAL",
            "TYPE_FAMILY_LAW",
            "TYPE_IP_LAW",
            "TYPE_LABOR_LAW",
            "TYPE_PERSONAL_INJURY_LAW",
            "TYPE_CRIMINAL_LAW",
            "TYPE_PERSONAL_FINANCE",
            "TYPE_LIFE_INSURANCE",
            "TYPE_LENDING",
            "TYPE_ACCOUNTING",
            "TYPE_INVESTING",
            "TYPE_BANKING",
            "TYPE_HEALTH",
            "TYPE_HEALTH_EQUIPMENT",
            "TYPE_NURSING",
            "TYPE_HEALTH_INSURANCE",
            "TYPE_HEALTH_FACILITY",
            "TYPE_DIAGNOSTIC_CENTER",
            "TYPE_HEALTH_RESOURCES",
            "TYPE_NUTRITION",
            "TYPE_VISION",
            "TYPE_COUNSELING",
            "TYPE_MASSAGE",
            "TYPE_BLOOD_BANK",
            "TYPE_HEARING",
            "TYPE_HOME_GARDEN",
            "TYPE_INTERIOR_DECOR",
            "TYPE_DOMESTIC_SERVICES",
            "TYPE_APPLIANCES",
            "TYPE_PEST_CONTROL",
            "TYPE_GARDENING",
            "TYPE_ELECTRONICS",
            "TYPE_COMPUTER",
            "TYPE_COMPUTER_HARDWARE",
            "TYPE_COMPUTER_SECURITY",
            "TYPE_COMPUTER_SOFTWARE",
            "TYPE_COMPUTER_SUPPORT",
            "TYPE_AUDIO_DEVICES",
            "TYPE_VIDEO_DEVICES",
            "TYPE_REAL_ESTATE",
            "TYPE_OFFICE_SERVICES",
            "TYPE_ENTERTAINMENT",
            "TYPE_GAMES",
            "TYPE_CASINO",
            "TYPE_LOTTO",
            "TYPE_VIDEO",
            "TYPE_CLUBS",
            "TYPE_DISCOTHEQUE",
            "TYPE_ANIMATION",
            "TYPE_MODELING",
            "TYPE_HUMOR",
            "TYPE_MOVIES",
            "TYPE_MOVIE_RENTAL",
            "TYPE_MOVIE_THEATER",
            "TYPE_MUSIC",
            "TYPE_RADIO",
            "TYPE_TV",
            "TYPE_BAR",
            "TYPE_PRINT_MEDIA",
            "TYPE_ADULT",
            "TYPE_SEXUAL_SERVICES",
            "TYPE_ANIMALS",
            "TYPE_PETS",
            "TYPE_FISHERY",
            "TYPE_ARTS",
            "TYPE_BOOKS",
            "TYPE_PERFORMING_ARTS",
            "TYPE_GALLERY",
            "TYPE_AUTOMOTIVE",
            "TYPE_PARTS",
            "TYPE_AUTO_FINANCE",
            "TYPE_AUTO_INSURANCE",
            "TYPE_RV",
            "TYPE_MOTORCYCLES",
            "TYPE_CARS",
            "TYPE_TRUCKS_SUVS",
            "TYPE_LICENSING",
            "TYPE_MAINTENANCE",
            "TYPE_PERSONAL_CARE",
            "TYPE_BODY_ART",
            "TYPE_COSMETICS",
            "TYPE_FITNESS",
            "TYPE_YOGA_CENTER",
            "TYPE_GYM",
            "TYPE_HAIR_CARE",
            "TYPE_SPA",
            "TYPE_BEAUTY_SALON",
            "TYPE_CORPORATE_EVENTS",
            "TYPE_HUMAN_RESOURCES",
            "TYPE_FOOD_AND_DRINK",
            "TYPE_BEVERAGE",
            "TYPE_RECIPES",
            "TYPE_COOKWARE",
            "TYPE_CULINARY",
            "TYPE_RETAIL",
            "TYPE_RESTAURANT",
            "TYPE_COFFEE",
            "TYPE_BAKERY",
            "TYPE_FOOD_CENTER",
            "TYPE_TEA",
            "TYPE_CAFE",
            "TYPE_WINERY",
            "TYPE_BREWERY",
            "TYPE_FAST_FOOD",
            "TYPE_FOOD_DELIVERY",
            "TYPE_INTERNET",
            "TYPE_WEB_DESIGN",
            "TYPE_WEB_HOSTING",
            "TYPE_WEB_SERVICES",
            "TYPE_LIFESTYLE",
            "TYPE_PHOTO_VIDEO",
            "TYPE_ACTIVITIES",
            "TYPE_BOATING",
            "TYPE_CYCLING",
            "TYPE_EQUESTRIAN",
            "TYPE_FISHING",
            "TYPE_HIKING",
            "TYPE_HUNTING",
            "TYPE_SWIMMING",
            "TYPE_GOLF",
            "TYPE_GOLF_COURSE",
            "TYPE_BASEBALL",
            "TYPE_BASKETBALL",
            "TYPE_HOCKEY",
            "TYPE_MOTOR_SPORTS",
            "TYPE_WINTER_SPORTS",
            "TYPE_FOOTBALL",
            "TYPE_SOCCER",
            "TYPE_ICE_SKATING",
            "TYPE_BOXING",
            "TYPE_CRICKET",
            "TYPE_ROWING",
            "TYPE_RUGBY",
            "TYPE_RACQUET_SPORTS",
            "TYPE_ROCK_CLIMBING",
            "TYPE_REFERENCES",
            "TYPE_MAPS",
            "TYPE_TIME",
            "TYPE_SCIENTIFIC_EQUIPMENT",
            "TYPE_TELECOMMUNICATIONS",
            "TYPE_EVENT_VENUE",
            "TYPE_BANQUET_HALL",
            "TYPE_CONFERENCE_HALL",
            "TYPE_WEDDING_HALL",
            "TYPE_EXHIBITION_HALL",
            "TYPE_COMMUNITY_CENTER",
            "TYPE_AUDITORIUM",
            "TYPE_FUNCTION_HALL",
            "TYPE_CONCERT_HALL",
            "TYPE_AMPHITHEATER",
            "TYPE_LAUNDRY",
            "TYPE_LAUNDROMAT",
            "TYPE_DRY_CLEANER",
            "TYPE_MORTUARY",
            "TYPE_REPAIR_AND_MAINTENANCE",
            "TYPE_GOVERNMENT",
            "TYPE_BORDER_CROSSING",
            "TYPE_CITY_HALL",
            "TYPE_COURTHOUSE",
            "TYPE_EMBASSY",
            "TYPE_LIBRARY",
            "TYPE_PRISON",
            "TYPE_TAX_OFFICE",
            "TYPE_PROSECUTORS_OFFICE",
            "TYPE_CONGRESS",
            "TYPE_TOWN_COUNCIL",
            "TYPE_CAPITOL_BUILDING",
            "TYPE_VOTING_FACILITY",
            "TYPE_CHECKPOINT",
            "TYPE_SCHOOL",
            "TYPE_UNIVERSITY",
            "TYPE_ORPHANAGE",
            "TYPE_KINDERGARTEN",
            "TYPE_DAYCARE",
            "TYPE_ACADEMY",
            "TYPE_TRADE_SCHOOL",
            "TYPE_SKILL_INSTRUCTION",
            "TYPE_EMERGENCY",
            "TYPE_HOSPITAL",
            "TYPE_PHARMACY",
            "TYPE_POLICE",
            "TYPE_FIRE",
            "TYPE_DOCTOR",
            "TYPE_DENTIST",
            "TYPE_VETERINARIAN",
            "TYPE_FIRST_AID",
            "TYPE_CIVIL_DEFENSE",
            "TYPE_TOURIST_DESTINATION",
            "TYPE_ECO_TOURIST_DESTINATION",
            "TYPE_BIRD_WATCHING",
            "TYPE_NATURE_RESERVE",
            "TYPE_MUSEUM",
            "TYPE_VISITOR_CENTER",
            "TYPE_OBSERVATION_DECK",
            "TYPE_OBSERVATORY",
            "TYPE_SCENIC_POINT",
            "TYPE_ZOO",
            "TYPE_AQUARIUM",
            "TYPE_AMUSEMENT_PARK",
            "TYPE_MONUMENT",
            "TYPE_PALACE",
            "TYPE_FORT",
            "TYPE_TOWER",
            "TYPE_LIGHTHOUSE",
            "TYPE_TEMPLE",
            "TYPE_CHURCH",
            "TYPE_GURUDWARA",
            "TYPE_HINDU_TEMPLE",
            "TYPE_MOSQUE",
            "TYPE_SYNAGOGUE",
            "TYPE_BUDDHIST_TEMPLE",
            "TYPE_JAIN_TEMPLE",
            "TYPE_BAHAI_TEMPLE",
            "TYPE_SHINTO_TEMPLE",
            "TYPE_MORMON_TEMPLE",
            "TYPE_SPORTS_COMPLEX",
            "TYPE_STADIUM",
            "TYPE_BOWLING",
            "TYPE_BADMINTON",
            "TYPE_TENNIS",
            "TYPE_TABLE_TENNIS",
            "TYPE_PARK",
            "TYPE_LOCAL_PARK",
            "TYPE_NATIONAL_PARK",
            "TYPE_US_NATIONAL_PARK",
            "TYPE_US_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_FOREST",
            "TYPE_NATIONAL_GRASSLAND",
            "TYPE_NATIONAL_PRESERVE",
            "TYPE_NATIONAL_RECREATION_AREA",
            "TYPE_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_HISTORIC_AREA",
            "TYPE_NATIONAL_SCENIC_AREA",
            "TYPE_NATIONAL_SCENIC_ROADWAY_AREA",
            "TYPE_NATIONAL_SCENIC_RIVER_AREA",
            "TYPE_PROVINCIAL_PARK",
            "TYPE_PROVINCIAL_FOREST",
            "TYPE_CAMPGROUNDS",
            "TYPE_WILDERNESS_AREA",
            "TYPE_WILDLIFE_AREA",
            "TYPE_BOTANICAL_GARDEN",
            "TYPE_GARDEN",
            "TYPE_ARBORETUM",
            "TYPE_MARINE_PROTECTED_AREA",
            "TYPE_AIRPORT",
            "TYPE_TARMAC",
            "TYPE_HELIPORT",
            "TYPE_SEAPLANE_BASE",
            "TYPE_MILITARY_AIRBASE",
            "TYPE_CEMETERY",
            "TYPE_MILITARY",
            "TYPE_ENCLOSED_TRAFFIC_AREA",
            "TYPE_PARKING",
            "TYPE_OFF_ROAD_AREA",
            "TYPE_POST_OFFICE",
            "TYPE_HOUSING_DEVELOPMENT",
            "TYPE_BRIDGE",
            "TYPE_ARCHAEOLOGICAL",
            "TYPE_HISTORICAL",
            "TYPE_RUINS",
            "TYPE_TUNNEL",
            "TYPE_RESIDENTIAL_DWELLING",
            "TYPE_DETACHED_DWELLING",
            "TYPE_ATTACHED_DWELLING",
            "TYPE_APARTMENT",
            "TYPE_GATED_COMMUNITY",
            "TYPE_RETIREMENT_HOME",
            "TYPE_TOLL_BOOTH",
            "TYPE_CULTURAL",
            "TYPE_CULTURAL_CENTER",
            "TYPE_OVERPASS",
            "TYPE_REST_ROOM",
            "TYPE_PUBLIC_PHONE",
            "TYPE_PHONE_BOOTH",
            "TYPE_MANNED_PCO",
            "TYPE_RESEARCH_INSTITUTE",
            "TYPE_NON_GOVERNMENTAL_ORGANIZATION",
            "TYPE_OFFICE_PARK",
            "TYPE_MEDITATION_CENTER",
            "TYPE_RELIGIOUS",
            "TYPE_MONASTERY",
            "TYPE_ASHRAM",
            "TYPE_PAGODA",
            "TYPE_MISSION",
            "TYPE_PILGRIM_DESTINATION",
            "TYPE_SOCIAL_SERVICE",
            "TYPE_RANGER_STATION",
            "TYPE_TRANSIT_STATION",
            "TYPE_BUS_STATION",
            "TYPE_TRAMWAY_STATION",
            "TYPE_TRAIN_STATION",
            "TYPE_SUBWAY_STATION",
            "TYPE_FERRY_TERMINAL",
            "TYPE_CABLE_CAR_STATION",
            "TYPE_GONDOLA_LIFT_STATION",
            "TYPE_FUNICULAR_STATION",
            "TYPE_HORSE_CARRIAGE_STATION",
            "TYPE_MONORAIL_STATION",
            "TYPE_SEAPORT",
            "TYPE_NATURAL_FEATURE",
            "TYPE_ELEVATED",
            "TYPE_PEAK"
          ],
          "enumDescriptions": [
            "ABSTRACT",
            "Can be used for features where no establishment information is available. For example, if an importer generates a TYPE_ESTABLISHMENT_BUILDING feature, but source data does not have any information on the actual purpose of the building, the importer should use TYPE_UNDEFINED for establishment type.",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Note: 0xF213F is reserved to extend TYPE_INDUSTRIAL",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "0xF6F is reserved and any new types should start with 0xF6F1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "State parks, county parks, city parks, wilderness areas. This also includes underwater preserves, wild and scenic rivers, etc. Should we have things like baseball diamonds?",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Wildlife management area. This includes preservation areas for fish, game, and birds.",
            "",
            "",
            "",
            "",
            "",
            "An airport is a location where aircraft such as fixed-wing aircraft, helicopters, and blimps takeoff and land. NOTE: TYPE_TARMAC establishment type has been deprecated in favor of TYPE_TARMAC feature type. Once all data is modeled using the new feature type, the entry below should be removed.",
            "DEPRECATED",
            "A heliport is a small airport suitable only for use by helicopters.",
            "A seaplane base is a special airport suitable for seaplanes.",
            "An airbase (sometimes referred to correctly as an airfield, military airport, or Royal Air Force Station or Air Force Station) is a military airfield that provides basing and support of military aircraft.",
            "",
            "",
            "The term \"enclosed traffic area\" is used extensively in Europe. It generally refers to a parking lot or other similar area through which traffic passes but are not generally considered to be a road. Another example is a piazza in an Italian town.",
            "Establishment TYPE_PARKING is used for parking lots or garages. The actual feature type can be TYPE_ESTABLISHMENT_GROUNDS or TYPE_ESTABLISHMENT_BUILDING to distinguish between those.",
            "",
            "",
            "In some country (like China), there will have a small area of housing development. Normally covers one or more city blocks.",
            "In the Australian data we get bridges as POIs effectively. We'd like to include them so we can mapsearch for \"Sydney Harbour Bridge\" and others. Many other data sets have bridges modeled directly as segments, and so don't require this.",
            "",
            "In some countries historical objects are well known and important.",
            "",
            "Feature must be TYPE_ESTABLISHMENT_GROUNDS.",
            "These types, when used with appropriate feature type (TYPE_ESTABLISHMENT_BUILDING, TYPE_ESTABLISHMENT_GROUNDS) can refer to a single building or a residential area (respectively).",
            "",
            "",
            "All multi-unit housing such as duplex, condominium, apartment belongs to this.",
            "",
            "",
            "In Korea most toll booths have their own names, and are often used as reference points. If an importer generates TYPE_TOLL_BOOTH establishment features with exact positions and names, then mapsearch will index them. Also this can be used to render them.",
            "",
            "",
            "An overpass, or flyover is a structure that passes over another road or railway.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Hierarchy of transit station types. See go/transit-schema for more details.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "featureId": {
          "$ref": "GeostoreFeatureIdProto",
          "description": "The GeoStore Feature ID for this feature. This value is also used as key into the feature pool from FeatureReference's."
        },
        "kgReference": {
          "$ref": "GeostoreKnowledgeGraphReferenceProto",
          "description": "The reference to an entity in the KnowledgeGraph."
        },
        "name": {
          "description": "Each Featurelet includes the list of names that are associated with the corresponding GeoStore Feature.",
          "items": {
            "$ref": "GeostoreNameProto"
          },
          "type": "array"
        },
        "populationRank": {
          "description": "Copy of FeatureProto->RankDetailsProto->population_rank",
          "format": "float",
          "type": "number"
        },
        "rect": {
          "$ref": "GeostoreRectProto",
          "description": "The bounding box of this feature."
        },
        "type": {
          "description": "The GeoStore Feature type.",
          "enum": [
            "TYPE_ANY",
            "TYPE_TRANSPORTATION",
            "TYPE_ROUTE",
            "TYPE_DEPRECATED_HIGHWAY_DO_NOT_USE",
            "TYPE_HIGHWAY",
            "TYPE_HIGHWAY_1",
            "TYPE_HIGHWAY_2",
            "TYPE_HIGHWAY_3",
            "TYPE_HIGHWAY_4",
            "TYPE_HIGHWAY_5",
            "TYPE_HIGHWAY_6",
            "TYPE_HIGHWAY_7",
            "TYPE_HIGHWAY_8",
            "TYPE_HIGHWAY_9",
            "TYPE_BICYCLE_ROUTE",
            "TYPE_TRAIL",
            "TYPE_SEGMENT",
            "TYPE_ROAD",
            "TYPE_RAILWAY",
            "TYPE_STANDARD_TRACK",
            "TYPE_JR_TRACK",
            "TYPE_NARROW_TRACK",
            "TYPE_MONORAIL_TRACK",
            "TYPE_SUBWAY_TRACK",
            "TYPE_LIGHT_RAIL_TRACK",
            "TYPE_BROAD_TRACK",
            "TYPE_HIGH_SPEED_RAIL",
            "TYPE_TROLLEY_TRACK",
            "TYPE_FERRY",
            "TYPE_FERRY_BOAT",
            "TYPE_FERRY_TRAIN",
            "TYPE_VIRTUAL_SEGMENT",
            "TYPE_INTERSECTION",
            "TYPE_TRANSIT",
            "TYPE_TRANSIT_STATION",
            "TYPE_BUS_STATION",
            "TYPE_TRAMWAY_STATION",
            "TYPE_TRAIN_STATION",
            "TYPE_SUBWAY_STATION",
            "TYPE_FERRY_TERMINAL",
            "TYPE_AIRPORT",
            "TYPE_AIRPORT_CIVIL",
            "TYPE_AIRPORT_MILITARY",
            "TYPE_AIRPORT_MIXED",
            "TYPE_HELIPORT",
            "TYPE_SEAPLANE_BASE",
            "TYPE_AIRSTRIP",
            "TYPE_CABLE_CAR_STATION",
            "TYPE_GONDOLA_LIFT_STATION",
            "TYPE_FUNICULAR_STATION",
            "TYPE_SPECIAL_STATION",
            "TYPE_HORSE_CARRIAGE_STATION",
            "TYPE_MONORAIL_STATION",
            "TYPE_SEAPORT",
            "TYPE_TRANSIT_STOP",
            "TYPE_TRANSIT_TRIP",
            "TYPE_TRANSIT_DEPARTURE",
            "TYPE_TRANSIT_LEG",
            "TYPE_TRANSIT_LINE",
            "TYPE_TRANSIT_AGENCY_DEPRECATED_VALUE",
            "TYPE_TRANSIT_TRANSFER",
            "TYPE_SEGMENT_PATH",
            "TYPE_ROAD_SIGN",
            "TYPE_INTERSECTION_GROUP",
            "TYPE_PATHWAY",
            "TYPE_RESTRICTION_GROUP",
            "TYPE_TOLL_CLUSTER",
            "TYPE_POLITICAL",
            "TYPE_COUNTRY",
            "TYPE_ADMINISTRATIVE_AREA",
            "TYPE_ADMINISTRATIVE_AREA1",
            "TYPE_US_STATE",
            "TYPE_GB_COUNTRY",
            "TYPE_JP_TODOUFUKEN",
            "TYPE_ADMINISTRATIVE_AREA2",
            "TYPE_GB_FORMER_POSTAL_COUNTY",
            "TYPE_GB_TRADITIONAL_COUNTY",
            "TYPE_ADMINISTRATIVE_AREA3",
            "TYPE_ADMINISTRATIVE_AREA4",
            "TYPE_ADMINISTRATIVE_AREA5",
            "TYPE_ADMINISTRATIVE_AREA6",
            "TYPE_ADMINISTRATIVE_AREA7",
            "TYPE_ADMINISTRATIVE_AREA8",
            "TYPE_ADMINISTRATIVE_AREA9",
            "TYPE_COLLOQUIAL_AREA",
            "TYPE_RESERVATION",
            "TYPE_LOCALITY",
            "TYPE_GB_POST_TOWN",
            "TYPE_JP_GUN",
            "TYPE_JP_SHIKUCHOUSON",
            "TYPE_JP_SUB_SHIKUCHOUSON",
            "TYPE_COLLOQUIAL_CITY",
            "TYPE_SUBLOCALITY",
            "TYPE_US_BOROUGH",
            "TYPE_GB_DEPENDENT_LOCALITY",
            "TYPE_JP_OOAZA",
            "TYPE_JP_KOAZA",
            "TYPE_JP_GAIKU",
            "TYPE_GB_DOUBLE_DEPENDENT_LOCALITY",
            "TYPE_JP_CHIBAN",
            "TYPE_JP_EDABAN",
            "TYPE_SUBLOCALITY1",
            "TYPE_SUBLOCALITY2",
            "TYPE_SUBLOCALITY3",
            "TYPE_SUBLOCALITY4",
            "TYPE_SUBLOCALITY5",
            "TYPE_NEIGHBORHOOD",
            "TYPE_CONSTITUENCY",
            "TYPE_DESIGNATED_MARKET_AREA",
            "TYPE_SCHOOL_DISTRICT",
            "TYPE_LAND_PARCEL",
            "TYPE_DISPUTED_AREA",
            "TYPE_POLICE_JURISDICTION",
            "TYPE_STATISTICAL_AREA",
            "TYPE_CONSTITUENCY_FUTURE",
            "TYPE_PARK",
            "TYPE_GOLF_COURSE",
            "TYPE_LOCAL_PARK",
            "TYPE_NATIONAL_PARK",
            "TYPE_US_NATIONAL_PARK",
            "TYPE_US_NATIONAL_MONUMENT",
            "TYPE_NATIONAL_FOREST",
            "TYPE_PROVINCIAL_PARK",
            "TYPE_PROVINCIAL_FOREST",
            "TYPE_CAMPGROUNDS",
            "TYPE_HIKING_AREA",
            "TYPE_BUSINESS",
            "TYPE_GOVERNMENT",
            "TYPE_BORDER_CROSSING",
            "TYPE_CITY_HALL",
            "TYPE_COURTHOUSE",
            "TYPE_EMBASSY",
            "TYPE_LIBRARY",
            "TYPE_SCHOOL",
            "TYPE_UNIVERSITY",
            "TYPE_EMERGENCY",
            "TYPE_HOSPITAL",
            "TYPE_PHARMACY",
            "TYPE_POLICE",
            "TYPE_FIRE",
            "TYPE_DOCTOR",
            "TYPE_DENTIST",
            "TYPE_VETERINARIAN",
            "TYPE_TRAVEL_SERVICE",
            "TYPE_LODGING",
            "TYPE_RESTAURANT",
            "TYPE_GAS_STATION",
            "TYPE_PARKING",
            "TYPE_POST_OFFICE",
            "TYPE_REST_AREA",
            "TYPE_CASH_MACHINE",
            "TYPE_CAR_RENTAL",
            "TYPE_CAR_REPAIR",
            "TYPE_SHOPPING",
            "TYPE_GROCERY",
            "TYPE_TOURIST_DESTINATION",
            "TYPE_ECO_TOURIST_DESTINATION",
            "TYPE_BIRD_WATCHING",
            "TYPE_FISHING",
            "TYPE_HUNTING",
            "TYPE_NATURE_RESERVE",
            "TYPE_TEMPLE",
            "TYPE_CHURCH",
            "TYPE_GURUDWARA",
            "TYPE_HINDU_TEMPLE",
            "TYPE_MOSQUE",
            "TYPE_SYNAGOGUE",
            "TYPE_STADIUM",
            "TYPE_BAR",
            "TYPE_MOVIE_RENTAL",
            "TYPE_COFFEE",
            "TYPE_GOLF",
            "TYPE_BANK",
            "TYPE_DOODLE",
            "TYPE_GROUNDS",
            "TYPE_AIRPORT_GROUNDS",
            "TYPE_BUILDING_GROUNDS",
            "TYPE_CEMETERY",
            "TYPE_HOSPITAL_GROUNDS",
            "TYPE_INDUSTRIAL",
            "TYPE_MILITARY",
            "TYPE_SHOPPING_CENTER",
            "TYPE_SPORTS_COMPLEX",
            "TYPE_UNIVERSITY_GROUNDS",
            "TYPE_DEPRECATED_TARMAC",
            "TYPE_ENCLOSED_TRAFFIC_AREA",
            "TYPE_PARKING_LOT",
            "TYPE_PARKING_GARAGE",
            "TYPE_OFF_ROAD_AREA",
            "TYPE_BORDER",
            "TYPE_BUILDING",
            "TYPE_GEOCODED_ADDRESS",
            "TYPE_NATURAL_FEATURE",
            "TYPE_TERRAIN",
            "TYPE_SAND",
            "TYPE_BEACH",
            "TYPE_DUNE",
            "TYPE_ROCKY",
            "TYPE_ICE",
            "TYPE_GLACIER",
            "TYPE_BUILT_UP_AREA",
            "TYPE_VEGETATION",
            "TYPE_SHRUBBERY",
            "TYPE_WOODS",
            "TYPE_AGRICULTURAL",
            "TYPE_GRASSLAND",
            "TYPE_TUNDRA",
            "TYPE_DESERT",
            "TYPE_SALT_FLAT",
            "TYPE_WATER",
            "TYPE_OCEAN",
            "TYPE_BAY",
            "TYPE_BIGHT",
            "TYPE_LAGOON",
            "TYPE_SEA",
            "TYPE_STRAIT",
            "TYPE_INLET",
            "TYPE_FJORD",
            "TYPE_LAKE",
            "TYPE_SEASONAL_LAKE",
            "TYPE_RESERVOIR",
            "TYPE_POND",
            "TYPE_RIVER",
            "TYPE_RAPIDS",
            "TYPE_DISTRIBUTARY",
            "TYPE_CONFLUENCE",
            "TYPE_WATERFALL",
            "TYPE_SPRING",
            "TYPE_GEYSER",
            "TYPE_HOT_SPRING",
            "TYPE_SEASONAL_RIVER",
            "TYPE_WADI",
            "TYPE_ESTUARY",
            "TYPE_WETLAND",
            "TYPE_WATER_NAVIGATION",
            "TYPE_FORD",
            "TYPE_CANAL",
            "TYPE_HARBOR",
            "TYPE_CHANNEL",
            "TYPE_REEF",
            "TYPE_REEF_FLAT",
            "TYPE_REEF_GROWTH",
            "TYPE_REEF_EXTENT",
            "TYPE_REEF_ROCK_SUBMERGED",
            "TYPE_IRRIGATION",
            "TYPE_DAM",
            "TYPE_DRINKING_WATER",
            "TYPE_CURRENT",
            "TYPE_WATERING_HOLE",
            "TYPE_TECTONIC",
            "TYPE_WATERING_HOLE_DEPRECATED",
            "TYPE_VOLCANO",
            "TYPE_LAVA_FIELD",
            "TYPE_FISSURE",
            "TYPE_FAULT",
            "TYPE_LAND_MASS",
            "TYPE_CONTINENT",
            "TYPE_ISLAND",
            "TYPE_ATOLL",
            "TYPE_OCEAN_ROCK_EXPOSED",
            "TYPE_CAY",
            "TYPE_PENINSULA",
            "TYPE_ISTHMUS",
            "TYPE_ELEVATED",
            "TYPE_PEAK",
            "TYPE_NUNATAK",
            "TYPE_SPUR",
            "TYPE_PASS",
            "TYPE_PLATEAU",
            "TYPE_RIDGE",
            "TYPE_RAVINE",
            "TYPE_CRATER",
            "TYPE_KARST",
            "TYPE_CLIFF",
            "TYPE_VISTA",
            "TYPE_DIGITAL_ELEVATION_MODEL",
            "TYPE_UPLAND",
            "TYPE_TERRACE",
            "TYPE_SLOPE",
            "TYPE_CONTOUR_LINE",
            "TYPE_PAN",
            "TYPE_UNSTABLE_HILLSIDE",
            "TYPE_MOUNTAIN_RANGE",
            "TYPE_UNDERSEA",
            "TYPE_SUBMARINE_SEAMOUNT",
            "TYPE_SUBMARINE_RIDGE",
            "TYPE_SUBMARINE_GAP",
            "TYPE_SUBMARINE_PLATEAU",
            "TYPE_SUBMARINE_DEEP",
            "TYPE_SUBMARINE_VALLEY",
            "TYPE_SUBMARINE_BASIN",
            "TYPE_SUBMARINE_SLOPE",
            "TYPE_SUBMARINE_CLIFF",
            "TYPE_SUBMARINE_PLAIN",
            "TYPE_SUBMARINE_FRACTURE_ZONE",
            "TYPE_CAVE",
            "TYPE_ROCK",
            "TYPE_ARCHIPELAGO",
            "TYPE_POSTAL",
            "TYPE_POSTAL_CODE",
            "TYPE_POSTAL_CODE_PREFIX",
            "TYPE_PREMISE",
            "TYPE_SUB_PREMISE",
            "TYPE_SUITE",
            "TYPE_POST_TOWN",
            "TYPE_POSTAL_ROUND",
            "TYPE_META_FEATURE",
            "TYPE_DATA_SOURCE",
            "TYPE_LOCALE",
            "TYPE_TIMEZONE",
            "TYPE_BUSINESS_CHAIN",
            "TYPE_PHONE_NUMBER_PREFIX",
            "TYPE_PHONE_NUMBER_AREA_CODE",
            "TYPE_BUSINESS_CORRIDOR",
            "TYPE_ADDRESS_TEMPLATE",
            "TYPE_TRANSIT_AGENCY",
            "TYPE_FUTURE_GEOMETRY",
            "TYPE_EVENT",
            "TYPE_EARTHQUAKE",
            "TYPE_HURRICANE",
            "TYPE_WEATHER_CONDITION",
            "TYPE_TRANSIENT",
            "TYPE_ENTRANCE",
            "TYPE_CARTOGRAPHIC",
            "TYPE_HIGH_TENSION",
            "TYPE_SKI_TRAIL",
            "TYPE_SKI_LIFT",
            "TYPE_SKI_BOUNDARY",
            "TYPE_WATERSHED_BOUNDARY",
            "TYPE_TARMAC",
            "TYPE_WALL",
            "TYPE_PICNIC_AREA",
            "TYPE_PLAY_GROUND",
            "TYPE_TRAIL_HEAD",
            "TYPE_GOLF_TEEING_GROUND",
            "TYPE_GOLF_PUTTING_GREEN",
            "TYPE_GOLF_ROUGH",
            "TYPE_GOLF_SAND_BUNKER",
            "TYPE_GOLF_FAIRWAY",
            "TYPE_GOLF_HOLE",
            "TYPE_DEPRECATED_GOLF_SHOP",
            "TYPE_CAMPING_SITE",
            "TYPE_DESIGNATED_BARBECUE_PIT",
            "TYPE_DESIGNATED_COOKING_AREA",
            "TYPE_CAMPFIRE_PIT",
            "TYPE_WATER_FOUNTAIN",
            "TYPE_LITTER_RECEPTACLE",
            "TYPE_LOCKER_AREA",
            "TYPE_ANIMAL_ENCLOSURE",
            "TYPE_CARTOGRAPHIC_LINE",
            "TYPE_ESTABLISHMENT",
            "TYPE_ESTABLISHMENT_GROUNDS",
            "TYPE_ESTABLISHMENT_BUILDING",
            "TYPE_ESTABLISHMENT_POI",
            "TYPE_ESTABLISHMENT_SERVICE",
            "TYPE_CELESTIAL",
            "TYPE_ROAD_MONITOR",
            "TYPE_PUBLIC_SPACES_AND_MONUMENTS",
            "TYPE_STATUE",
            "TYPE_TOWN_SQUARE",
            "TYPE_LEVEL",
            "TYPE_COMPOUND",
            "TYPE_COMPOUND_GROUNDS",
            "TYPE_COMPOUND_BUILDING",
            "TYPE_COMPOUND_SECTION",
            "TYPE_TERMINAL_POINT",
            "TYPE_REGULATED_AREA",
            "TYPE_LOGICAL_BORDER",
            "TYPE_GCONCEPT_ONLY",
            "TYPE_DO_NOT_USE_RESERVED_TO_CATCH_GENERATED_FILES",
            "TYPE_UNKNOWN"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false
          ],
          "enumDescriptions": [
            "ABSTRACT",
            "ABSTRACT",
            "A route is any section of road (or rails, etc.) that has a name. This includes city streets as well as highways. Road segments can belong to multiple routes (e.g. El Camino, CA-82).",
            "DEPRECATED",
            "ABSTRACT",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "A designated bicycle route, whose segments may consist of any combination of bicycle paths, bicycle lanes, or city streets.",
            "A designated trail, which may consist of paved walkways, dirt paths, fire road, streets or highways, etc.",
            "ABSTRACT",
            "",
            "Railroads use several different incompatible track types.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Tracks for streetcars, cable-cars, etc. Ferries are services that are part of the road network but are not roads. They typically involve fares and scheduled departure times.",
            "ABSTRACT",
            "The vast majority of ferries are ferry boats.",
            "Also called a \"car transport\", a ferry train is a rail service that carries passengers and their vehicles across undrivable terrain. The Channel Tunnel (\"Chunnel\") is the most famous example, but they are also common in the Alps where they connect neighboring valleys otherwise separated by impassable mountains.",
            "Any plausible 1-dimensional path through a 2+ dimensional space, for the purposes of making graph-search-based routing possible. Such segments can be used to model paths through parking lots, squares, floors of buildings and other areas.",
            "An intersection consists of a collection of segments that terminate at the same location. This is topological definition: it may not match what a typical user would think of as an \"intersection\". See TYPE_INTERSECTION_GROUP, below, for more information. Each segment terminating at an intersection has an \"endpoint type\" that specifies how that segment is terminated: stop sign, yield sign, three-way light, etc.",
            "ABSTRACT",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "A transit line is a collection of transit legs, associated with some invariant properties of the trips that run over the legs. See also transitline.proto",
            "TYPE_TRANSIT_AGENCY was moved to 0xC91. This deprecated enum value still exists for debugging purposes only.",
            "DEPRECATED",
            "ABSTRACT",
            "Road sign features have names, point geometry, etc. They also have segment_path data (see below) which lists the segments that refer to the sign. See segment.proto for the reference from the segment to the road sign.",
            "Our TYPE_INTERSECTION feature, above, models the point where one or more segments terminate. This is topological definition: it may not match what a typical user would think of as an \"intersection\". Consider the intersections where Hayes, Market, Larkin, and 9th Street meet near (37.77765, -122.41638) in San Francisco. Most people would probably consider this a single feature, even though we model it as four separate TYPE_INTERSECTION features. This TYPE_INTERSECTION_GROUP is used to model the user's concept of a complex intersection.",
            "RESERVED",
            "A restriction group describes a set of segment restrictions that belong together and have a name or an associated event. See also restriction_group.proto",
            "DEPRECATED",
            "ABSTRACT",
            "",
            "ABSTRACT",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "e.g. Silicon Valley",
            "A reservation is a region collectively held or governed by indigenous people and officially recognized by the country’s government at the federal or state level. A reservation may be fully contained within an administrative feature or partially contained within two or more. These regions are referred to by different categorical names depending on country and even by state, including but not limited to: “Indian Reservations”, “Indian Reserves”, “Land Claim Settlement Lands”, “Indian Lands”, “Treaty Lands”, “Indigenous Territories”, etc. A reservation is not a historic indigenous territory boundary or a region which has applied for land rights but has not yet received official recognition.",
            "",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "An entity widely considered to be a city, that may itself be made up of smaller political entities, some of which are cities/towns/villages themselves. For example, the colloquial view of Sydney, Australia actually comprises many smaller cities, but is regarded as a city itself. This type is not suitable for modeling official metro-/micropolitan or other statistical areas.",
            "ABSTRACT",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Designated Market Areas (or DMAs) are used by marketing and ratings companies (such as the Nielsen Media Research company) to describe geographical regions (such as the greater New York metropolitan area) that are covered by a set of television stations. (See http://www.schooldata.com/pdfs/DMA.pdf) In the United States, DMAs should have a DMA numeric ID name, tagged with the FLAG_DESIGNATED_MARKET_AREA_ID flag.",
            "",
            "",
            "Eventually we'll have more data for disputed areas (e.g., who makes claims on the area, who has de facto control, etc.). For the moment, we just define a type so we can simply mark areas as disputed.",
            "Boundaries representing the jurisdiction of a particular police station.",
            "An area used for aggregating statistical data, eg, a census region. Note that TYPE_STATISTICAL_AREA has a third nibble so we can add an abstract parent above it later if need be at 0x2E1 (and rename TYPE_STATISTICAL_AREA as TYPE_STATISTICAL_AREA1).",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "A line representing the boundary between two features. See border.proto for details.",
            "DEPRECATED",
            "An association of a point with an address, with no other information.",
            "ABSTRACT",
            "Expanses of land that share common surface attributes. These areas would look more or less uniform from a high altitude.",
            "",
            "",
            "",
            "",
            "",
            "",
            "Terrain that looks populated.",
            "Terrain that is covered in vegetation.",
            "",
            "",
            "",
            "",
            "",
            "",
            "A flat expanse of salt left by the evaporation of a body of salt water.",
            "Features can be TYPE_WATER if we don't have enough information to properly type the body of water. TYPE_WATER is also used as the type for child features that compose a TYPE_RIVER feature.",
            "One of the large salt-water bodies that covers most of the globe.",
            "An ocean subdivision formed by a coastal indentation. Includes coves and gulfs.",
            "An open body of water formed by a slight coastal indentation.",
            "",
            "An ocean subdivision more or less confined by land and islands.",
            "A long narrow ocean subdivision. Includes sounds.",
            "",
            "",
            "An inland body of standing water.",
            "A lake that dries up part of the year.",
            "An artificial body of water, possibly created by a dam, often used for irrigation or house use.",
            "",
            "An inland body of moving water, or parts associated with it in which there is little or no current (backwater).",
            "",
            "A branch which flows away from the main river. Includes deltas.",
            "A place where two or more rivers join.",
            "",
            "A place where ground water flows naturally out of the ground.",
            "",
            "",
            "A river that dries up part of the year.",
            "A dry riverbed that occasionally receives flashfloods.",
            "A place at the end of a river where fresh and salt water mix. Includes tidal creeks and limans.",
            "Land that is usually flooded. Includes bogs, marshes, flats, moors, and swamps.",
            "",
            "A shallow place where water may be waded through.",
            "A narrow passage used by boats. Normally artificial.",
            "A deep place near a shore where ships commonly drop anchor.",
            "A deep part in a body of water that is suitable for navigation. Includes narrows.",
            "Rocks, coral, sandbars, or other features beneath the surface of the water that pose a hazard to passing ships. Includes shoals.",
            "A relatively shallow zone of the back reef located closest to the shore, that may be exposed at low tide.",
            "A small section of rocks, coral, sandbars, or other features beneath the surface of the water that forms part of a reef.",
            "The full extent of the reef complex.",
            "A submerged rock in the water.",
            "Man-made (and sometimes natural) channels used to move water. This type was used for both dam structures and water that is hold back by dams. We should use TYPE_COMPOUND_BUILDING for dam structures and TYPE_RESERVOIR for water.",
            "DEPRECATED",
            "",
            "Includes overfalls.",
            "A natural depression filled with water where animals come to drink.",
            "This type is incorrectly under TYPE_TECTONIC instead of TYPE_WATER. This was a mistake and is now fixed. See TYPE_WATERING_HOLE for the replacement.",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "An exposed rock in the water.",
            "A small, low-elevation, sandy island formed on the surface of coral reefs",
            "A stretch of land projecting into water. Includes capes and spits.",
            "A strip of land connecting two larger land masses, such as continents.",
            "Features that are notable for being high (or low), or for having sudden changes in elevation. These features might have an \"elevation\" extension to specify the actual elevation. See ElevationProto for more information.",
            "Elevations that have a distinctive peak.",
            "A peak or ridge of a mountain that extends through a glacier.",
            "A subsidiary peak of a mountain.",
            "A route over an otherwise difficult to traverse feature. Includes saddle.",
            "Elevations that are flat on top. Includes mesas and buttes.",
            "A ridge is a geographical feature consisting of a chain of mountains or hills that form a continuous elevated crest with a single ridgeline for some distance.",
            "Steep declines usually carved by erosion. Includes valleys, canyons, ditches, and gorges.",
            "Depressions causes by impact, explosion, and sometimes sink-holes.",
            "Topography formed on limestone and gypsum by dissolution with sinkholes, caves, etc.",
            "A vertical or nearly vertical slope. Includes escarpments.",
            "An elevated place that is notable for having a good view. Raster digital elevation data. This is not a type to be used by providers or consumed by clients.",
            "RESERVED",
            "Land along streams higher than the alluvial plain or stream terrace.",
            "",
            "Land not so steep as a cliff, but changing elevation. Includes slides.",
            "All the points on the polygon are at the same elevation.",
            "A near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool.",
            "",
            "A series of mountains or hills ranged in a line and connected by high ground. Mountain ranges usually consist of many smaller ridges. For example, the Himalayas, the Andes. the Alps, etc.",
            "Features that are notable for being high (or low), or for having sudden changes in elevation. These features might have an \"elevation\" extension to specify the actual elevation. See ElevationProto for more information.",
            "includes peaks, ranges, and spurs",
            "",
            "includes saddles",
            "",
            "",
            "includes trenches and troughs",
            "",
            "",
            "",
            "",
            "",
            "Don't use 0xA7. Use 8 bits for additional types under TYPE_NATURAL_FEATURE, so we don't run out of space. The following are miscellaneous natural features that don't fit any of the categories above.",
            "",
            "A feature representing a group or chain of islands. ",
            "ABSTRACT",
            "This is the type for postal codes which are complete and independent enough that there should be a feature for them (e.g. US 5-digit ZIP codes). For even more detailed suffixes that further subdivide a postal code (such as the +4 component in US ZIP codes), store the information in a TYPE_POSTAL_CODE_SUFFIX address component. When a range or set of postal codes share the same geographical area, e.g. because a precise subdivision does not exist or this subdivision is unknown, this type is used for each individual postal code.",
            "A prefix portion of a postal code which does not meet the requirements for TYPE_POSTAL_CODE, but which is useful to search for, for example UK outcodes.",
            "DEPRECATED",
            "DEPRECATED This is deprecated and we want to use TYPE_COMPOUND_SECTION instead.",
            "DEPRECATED",
            "The term \"post town\" is used for a locality-like-entity that is only used for postal addresses.",
            "DEPRECATED",
            "ABSTRACT",
            "Every data source used in constructing a data repository has a corresponding feature that provides more information about that data source. The extra information is stored in the optional data_source field below.",
            "A locale feature provides region specific conventions such as preferred language and formatting details for time, date, and currency values. Locales aren't necessary defined by physical geographic features, so they are classified as meta-features.",
            "A timezone feature is used to specify the region covering an international timezone. When a point is covered by multiple timezone features, the most specific one can be used to compute the local time at this point. Most specific implies a much smaller region or the one that is closer to the center. A feature's timezone can be specified in the repeated related_timezone field.",
            "A business chain feature is used to represent a chain, e.g. Starbucks, McDonald's, etc. Other features representing specific stores/franchises of this chain may refer to one such feature via RELATION_MEMBER_OF_CHAIN. This is not strictly reserved to commercial chains but can also be used to model organizations such as the Red Cross or the United Nations.",
            "A phone number prefix feature is used to specify the region where phone numbers (typically fixed-line numbers) must begin with a certain prefix. Any phone number prefix down to any level of granularity could be represented by this type.",
            "A phone number area code is a prefix which also coincides with the area code, or national destination code, of a particular region.",
            "A Business Corridor is a dense cluster of semantically similar establishments. TYPE_BUSINESS_CORRIDOR features are distinguished from TYPE_COLLOQUIAL_AREA features because the corridors are not under the political hierarchy, are allowed to be nameless, and may not correspond to well-known real world locations. For more details, see go/geo-corridors-schema.",
            "An address template feature provides region-specific conventions for structuring addresses. These features aren't necessarily defined by physical geographic features, so they are classified as meta-features.",
            "A transit agency operates a number of lines, typically all in the same city, region or country. See also transitagency.proto",
            "A feature whose geometry is planned to replace the geometry on another feature.",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "DEPRECATED",
            "RESERVED",
            "A portal of entry or exit to another feature. Examples: - Subway station entrance. - Parking lot entrance.",
            "Cartographic features are used to capture real-world objects for which there is no current desire to model any specific attributes. These are only useful to make the map tiles look pretty.",
            "DEPRECATED",
            "Also see skitrail.proto",
            "Also see skilift.proto",
            "Also see skiboundary.proto",
            "",
            "Starting with TYPE_TARMAC, we use longer IDs, so that we can expand the number of feature types under TYPE_CARTOGRAPHIC.",
            "Use TYPE_COMPOUND_GROUND and appropriate gcids for the next two.",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "Sub-types within a golf course.",
            "",
            "",
            "",
            "",
            "Use TYPE_ESTABLISHMENT_POI and gcid:golf_shop for golf shops instead.",
            "DEPRECATED",
            "DEPRECATED",
            "",
            "",
            "",
            "",
            "",
            "",
            "Subtype within a zoo - a cage or fenced-off or otherwise delineated area containing animals.",
            "A line for a cartographic detail. For example the international date line. Such features should have polyline geometry.",
            "ABSTRACT This type is being replaced by TYPE_COMPOUND_GROUNDS. For further details, see go/compounds-v2",
            "DEPRECATED This type has been replaced by TYPE_COMPOUND_BUILDING. For further details, see go/oyster-compounds",
            "DEPRECATED",
            "An establishment that has a physical location. Note that it *may* also have a service area (e.g. a restaurant that offers both dine-in and delivery). This type of business is also known as a \"hybrid\" Service Area Business. Establishment POIs can be referenced by TYPE_COMPOUND features using the RELATION_PRIMARILY_OCCUPIED_BY. This is the reciprocal relation of the RELATION_OCCUPIES.",
            "NOTE(tcain): Using value 0xD441, since we could find ourselves with a need to differentiate service areas from online-only at this level in the future, but still benefit from being able to group those under a common parent, disjoint from TYPE_ESTABLISHMENT_POI.",
            "The root of types of features that are in the sky, rather than on the earth. There will eventually be a hierarchy of types here.",
            "Features responsible for monitoring traffic on roads (usually for speed). Includes cameras at particular points as well as monitors that cover larger spans. Features of this type should have a corresponding gcid that specifies the correct subtype (e.g. gcid:road_camera or gcid:speed_camera_zone). This type was originally named as TYPE_ROAD_CAMERA.",
            "ABSTRACT",
            "Note that this type does not distinguish the nature of the statue (religious, historical, memorial, tourist, ...).",
            "Open space used for events, gathering, or as market-place.",
            "A feature used to represent a logical level, e.g. floor.",
            "ABSTRACT",
            "e.g. campus, compound, parcel.",
            "e.g. single family dwelling, office building.",
            "e.g. suite, room, hallway, cubicle.",
            "A terminal point represents a good location for a user to meet a taxi, ridesharing vehicle, or general driver.",
            "An area controlled in some way by an authoritative source, such as a government-designated COVID containment zone or an area under government sanctions. Features of this type should have one or more gcids corresponding to their specific regulation, and client handling of these features may vary based on the type of regulation.",
            "A grouping of TYPE_BORDER features (\"border segments\"), which together represent a border between two features of the same type.",
            "A generic feature type for any geo-type that cannot be modeled under existing feature types. No new feature type should be created within feature proto after this type.",
            "DEPRECATED",
            "A feature of completely unknown type. This should only be used when absolutely necessary. One example in which this type is useful is in the Chinese importer, which must heuristically segment addresses into components - it often does not know what types to make those components. Please note that the Oyster address formatter does not currently support address components of TYPE_UNKNOWN well."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedPersonalizedLocationAttributes": {
      "description": "*************************************************************************** PROTO BELOW IS FOR INTERNAL USE ONLY. IT MAY CHANGE WITHOUT NOTICE, SO EVERYONE OUTSIDE OF oolong-team@ IS STRONGLY DISCOURAGED FROM USING IT. CODE STILL DOING SO WILL BE BROKEN WITHOUT NOTICE. *************************************************************************** Internal Oolong-specific personalized location attributes. Next Id: 11.",
      "id": "LocationUnifiedPersonalizedLocationAttributes",
      "properties": {
        "anySupportingDays": {
          "description": "Number of days the location was supported by any 'physical presence'-like or 'explicit-interest'-like location.",
          "format": "int32",
          "type": "integer"
        },
        "eiDailyVisits": {
          "description": "Binary mask representing \"explicit-interest\" daily visits in the location. EVAL-ONLY, NEVER POPULATED IN PRODUCTION OR LOGS.",
          "format": "uint32",
          "type": "integer"
        },
        "ppDailyVisits": {
          "description": "Binary mask representing \"physical-presence\" daily visits in the location. EVAL-ONLY, NEVER POPULATED IN PRODUCTION OR LOGS.",
          "format": "uint32",
          "type": "integer"
        },
        "ppSupportingDays": {
          "description": "Number of days the location was supported by any 'physical presence'-like location.",
          "format": "int32",
          "type": "integer"
        },
        "ppSupportingWeeks": {
          "description": "Number of weeks the location was supported by any 'physical presence'-like location.",
          "format": "int32",
          "type": "integer"
        },
        "supportingPackedIpRanges": {
          "description": "IP ranges that the location was supported by.",
          "items": {
            "format": "byte",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationUnifiedPolicyResult": {
      "description": "PolicyResult contains all the data that is computed based on the classifier policy for a location.",
      "id": "LocationUnifiedPolicyResult",
      "properties": {
        "confidenceRects": {
          "items": {
            "$ref": "LocationUnifiedPolicyResultConfidenceRect"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocationUnifiedPolicyResultConfidenceRect": {
      "id": "LocationUnifiedPolicyResultConfidenceRect",
      "properties": {
        "confidence": {
          "description": "Confidence in the range [0, 100].",
          "format": "int32",
          "type": "integer"
        },
        "rect": {
          "$ref": "LocationUnifiedLatLngRect",
          "description": "The bounding box that we believe is certain with probability given by confidence."
        }
      },
      "type": "object"
    },
    "LocationUnifiedPresenceInterval": {
      "description": "Next ID: 4.",
      "id": "LocationUnifiedPresenceInterval",
      "properties": {
        "confidence": {
          "description": "Probability of presence as a percentage in [0, 100].",
          "format": "uint32",
          "type": "integer"
        },
        "durationSec": {
          "description": "Interval duration in seconds.",
          "format": "uint64",
          "type": "string"
        },
        "startOffsetSec": {
          "description": "Start of the interval as the number of seconds from the time of the location.",
          "format": "uint64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedSemanticPlace": {
      "description": "Semantic location information from HULK Next Id: 6",
      "id": "LocationUnifiedSemanticPlace",
      "properties": {
        "confidence": {
          "enum": [
            "UNKNOWN_CONFIDENCE",
            "LOW_CONFIDENCE",
            "MEDIUM_CONFIDENCE",
            "HIGH_CONFIDENCE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "featureId": {
          "$ref": "LocationUnifiedFeatureIdProto",
          "description": "The feature id of the semantic location POI"
        },
        "gconceptInstance": {
          "description": "Geo Ontology GConcept Instances of the semantic location",
          "items": {
            "$ref": "LocationUnifiedSemanticPlaceGConceptInstanceProto"
          },
          "type": "array"
        },
        "score": {
          "description": "The probability the user is at this place in [0 100].",
          "format": "float",
          "type": "number"
        },
        "source": {
          "enum": [
            "UNKNOWN",
            "HAPPY_HOUR",
            "HULK_REAL_TIME",
            "ANDROID_CONTEXT"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedSemanticPlaceGConceptInstanceProto": {
      "description": "A GConceptInstance (gcid), copied from geostore.GConceptInstanceProto. Copy is needed because - LocationDescriptor is used publicly, therefore should not have internal dependencies. - GConceptInstanceProto uses js_proto build rules which are incompatible with closure_js_proto_library rules.",
      "id": "LocationUnifiedSemanticPlaceGConceptInstanceProto",
      "properties": {
        "gconceptId": {
          "type": "string"
        },
        "prominence": {
          "enum": [
            "NON_PRIMARY",
            "PRIMARY"
          ],
          "enumDescriptions": [
            "not a prominent GConcept",
            "the most prominent GConcept"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedVisibleNetwork": {
      "description": "VisibleNetwork describes a location by providing the details of one of the networks visible at that location. GLS can be used to geocode a set of VisibleNetworks into a location, as explained in go/gls-in-gws. Currently only WiFi and cell networks are supported, but the message could be extended to support additional network types (e.g. bluetooth beacons, etc) in the future. Next Id: 5",
      "id": "LocationUnifiedVisibleNetwork",
      "properties": {
        "cell": {
          "$ref": "LocationUnifiedVisibleNetworkCell"
        },
        "connected": {
          "description": "True if the user's device is currently connected to the network.",
          "type": "boolean"
        },
        "timestampMs": {
          "description": "The timestamp of this network. That is when this network was detected, expressed as the number of milliseconds since unix epoch. If not set, assumed to be \"now\" or irrelevant.",
          "format": "int64",
          "type": "string"
        },
        "wifi": {
          "$ref": "LocationUnifiedVisibleNetworkWiFi"
        }
      },
      "type": "object"
    },
    "LocationUnifiedVisibleNetworkCell": {
      "description": "Definition derived from https://developers.google.com/maps/documentation/geolocation/intro#cell_tower_object Next Id: 9",
      "id": "LocationUnifiedVisibleNetworkCell",
      "properties": {
        "cellId": {
          "description": "For GSM, LTE and WCDMA networks, this field holds the cell ID of the network. For CDMA networks, this field holds the base station ID of the network.",
          "format": "int32",
          "type": "integer"
        },
        "locationAreaCode": {
          "description": "For GSM and WCDMA networks, this field holds the location area code of the network. For LTE networks, this field used to hold the tracking area code of the network, but this usage has been deprecated, and that value should now be provided through tracking_area_code. For CDMA networks, this field holds the network ID of the network.",
          "format": "int32",
          "type": "integer"
        },
        "mobileCountryCode": {
          "description": "The mobile country code of the network.",
          "format": "int32",
          "type": "integer"
        },
        "mobileNetworkCode": {
          "description": "The mobile network code of the network.",
          "format": "int32",
          "type": "integer"
        },
        "physicalCellId": {
          "description": "Only set for LTE networks for which this field holds the physical cell ID.",
          "format": "int32",
          "type": "integer"
        },
        "primaryScramblingCode": {
          "description": "Only set for WCDMA networks for which this field holds the primary scrambling code of the network.",
          "format": "int32",
          "type": "integer"
        },
        "trackingAreaCode": {
          "description": "Only set for LTE networks for which this field holds the tracking area code.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "UNKNOWN",
            "GSM",
            "LTE",
            "CDMA",
            "WCDMA"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationUnifiedVisibleNetworkWiFi": {
      "description": "Definition derived from https://developers.google.com/maps/documentation/geolocation/intro#wifi_access_point_object Next Id: 3",
      "id": "LocationUnifiedVisibleNetworkWiFi",
      "properties": {
        "bssid": {
          "description": "The BSSID of the network (i.e. MAC address of the access point).",
          "type": "string"
        },
        "levelDbm": {
          "description": "The signal level of the network in dBm (RSSI).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MapInfo": {
      "description": "Geo information used for rendering a map that shows the user's work location.",
      "id": "MapInfo",
      "properties": {
        "lat": {
          "description": "Latitude in degrees",
          "format": "double",
          "type": "number"
        },
        "locationUrl": {
          "$ref": "SafeUrlProto",
          "description": "URL to a view of a map centered on the user's work location in Campus Maps (for google.com) or Google Maps (external)."
        },
        "long": {
          "description": "Longitude in degrees",
          "format": "double",
          "type": "number"
        },
        "mapTile": {
          "description": "MapTiles for the area around a user's work location",
          "items": {
            "$ref": "MapTile"
          },
          "type": "array"
        },
        "zoom": {
          "description": "The zoom level of the map. A constant zoom value of 18 is used for now to match the zoom of the map shown on a Moma Teams Profile page",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MapTile": {
      "description": "Information used to render a map tile image in the proper location on a map.",
      "id": "MapTile",
      "properties": {
        "imageUrl": {
          "$ref": "SafeUrlProto",
          "description": "URL to an image file containing an office layout of the user's location for their organization, if one is available. For google.com, this image is from Corp Campus Maps."
        },
        "tileX": {
          "description": "Map tile x coordinate",
          "format": "double",
          "type": "number"
        },
        "tileY": {
          "description": "Map tile y coordinate",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "MatchRange": {
      "description": "Matched range of a snippet [start, end).",
      "id": "MatchRange",
      "properties": {
        "end": {
          "description": "End of the match in the snippet.",
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "description": "Starting position of the match in the snippet.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Media": {
      "description": "Media resource.",
      "id": "Media",
      "properties": {
        "resourceName": {
          "description": "Name of the media resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessageSet": {
      "description": "This is proto2's version of MessageSet.",
      "id": "MessageSet",
      "properties": {},
      "type": "object"
    },
    "Metadata": {
      "description": "Metadata of a matched search result.",
      "id": "Metadata",
      "properties": {
        "createTime": {
          "description": "The creation time for this document or object in the search result.",
          "format": "google-datetime",
          "type": "string"
        },
        "displayOptions": {
          "$ref": "ResultDisplayMetadata",
          "description": "Options that specify how to display a structured data search result."
        },
        "fields": {
          "description": "Indexed fields in structured data, returned as a generic named property.",
          "items": {
            "$ref": "NamedProperty"
          },
          "type": "array"
        },
        "mimeType": {
          "description": "Mime type of the search result.",
          "type": "string"
        },
        "objectType": {
          "description": "Object type of the search result.",
          "type": "string"
        },
        "owner": {
          "$ref": "Person",
          "description": "Owner (usually creator) of the document or object of the search result."
        },
        "source": {
          "$ref": "Source",
          "description": "The named source for the result, such as Gmail."
        },
        "thumbnailUrl": {
          "description": "The thumbnail URL of the result.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last modified date for the object in the search result. If not set in the item, the value returned here is empty. When `updateTime` is used for calculating freshness and is not set, this value defaults to 2 years from the current time.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Metaline": {
      "description": "A metaline is a list of properties that are displayed along with the search result to provide context.",
      "id": "Metaline",
      "properties": {
        "properties": {
          "description": "The list of displayed properties for the metaline. The maximum number of properties is 5.",
          "items": {
            "$ref": "DisplayedProperty"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Name": {
      "description": "A person's name.",
      "id": "Name",
      "properties": {
        "displayName": {
          "description": "The read-only display name formatted according to the locale specified by the viewer's account or the `Accept-Language` HTTP header.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NamedProperty": {
      "description": "A typed name-value pair for structured data. The type of the value should be the same as the registered type for the `name` property in the object definition of `objectType`.",
      "id": "NamedProperty",
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "dateValues": {
          "$ref": "DateValues"
        },
        "doubleValues": {
          "$ref": "DoubleValues"
        },
        "enumValues": {
          "$ref": "EnumValues"
        },
        "htmlValues": {
          "$ref": "HtmlValues"
        },
        "integerValues": {
          "$ref": "IntegerValues"
        },
        "name": {
          "description": "The name of the property. This name should correspond to the name of the property that was registered for object definition in the schema. The maximum allowable length for this property is 256 characters.",
          "type": "string"
        },
        "objectValues": {
          "$ref": "ObjectValues"
        },
        "textValues": {
          "$ref": "TextValues"
        },
        "timestampValues": {
          "$ref": "TimestampValues"
        }
      },
      "type": "object"
    },
    "NetStatsProto": {
      "id": "NetStatsProto",
      "properties": {
        "bandaidBandwidthKbps": {
          "$ref": "BandWidthRangeKbps"
        },
        "bandwidthKbps": {
          "format": "int32",
          "type": "integer"
        },
        "gfeBandwidthKbps": {
          "$ref": "BandWidthRangeKbps"
        },
        "videostatsBandwidthKbps": {
          "$ref": "BandWidthRangeKbps"
        }
      },
      "type": "object"
    },
    "ObjectDefinition": {
      "description": "The definition for an object within a data source.",
      "id": "ObjectDefinition",
      "properties": {
        "name": {
          "description": "The name for the object, which then defines its type. Item indexing requests should set the objectType field equal to this value. For example, if *name* is *Document*, then indexing requests for items of type Document should set objectType equal to *Document*. Each object definition must be uniquely named within a schema. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The maximum length is 256 characters.",
          "type": "string"
        },
        "options": {
          "$ref": "ObjectOptions",
          "description": "The optional object-specific options."
        },
        "propertyDefinitions": {
          "description": "The property definitions for the object. The maximum number of elements is 1000.",
          "items": {
            "$ref": "PropertyDefinition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ObjectDisplayOptions": {
      "description": "The display options for an object.",
      "id": "ObjectDisplayOptions",
      "properties": {
        "metalines": {
          "description": "Defines the properties that are displayed in the metalines of the search results. The property values are displayed in the order given here. If a property holds multiple values, all of the values are displayed before the next properties. For this reason, it is a good practice to specify singular properties before repeated properties in this list. All of the properties must set is_returnable to true. The maximum number of metalines is 3.",
          "items": {
            "$ref": "Metaline"
          },
          "type": "array"
        },
        "objectDisplayLabel": {
          "description": "The user friendly label to display in the search result to indicate the type of the item. This is OPTIONAL; if not provided, an object label isn't displayed on the context line of the search results. The maximum length is 64 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ObjectOptions": {
      "description": "The options for an object.",
      "id": "ObjectOptions",
      "properties": {
        "displayOptions": {
          "$ref": "ObjectDisplayOptions",
          "description": "The options that determine how the object is displayed in the Cloud Search results page."
        },
        "freshnessOptions": {
          "$ref": "FreshnessOptions",
          "description": "The freshness options for an object."
        },
        "suggestionFilteringOperators": {
          "description": "Operators that can be used to filter suggestions. For Suggest API, only operators mentioned here will be honored in the FilterOptions. Only TEXT and ENUM operators are supported. NOTE: \"objecttype\", \"type\" and \"mimetype\" are already supported. This property is to configure schema specific operators. Even though this is an array, only one operator can be specified. This is an array for future extensibility. Operators mapping to multiple properties within the same object are not supported. If the operator spans across different object types, this option has to be set once for each object definition.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ObjectPropertyOptions": {
      "description": "The options for object properties.",
      "id": "ObjectPropertyOptions",
      "properties": {
        "subobjectProperties": {
          "description": "The properties of the sub-object. These properties represent a nested object. For example, if this property represents a postal address, the subobjectProperties might be named *street*, *city*, and *state*. The maximum number of elements is 1000.",
          "items": {
            "$ref": "PropertyDefinition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ObjectValues": {
      "description": "List of object values.",
      "id": "ObjectValues",
      "properties": {
        "values": {
          "items": {
            "$ref": "StructuredDataObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "OptInStatus": {
      "description": "The status and eligibility information for a single feature.",
      "id": "OptInStatus",
      "properties": {
        "eligibility": {
          "description": "If the user is ineligible, they should not be opted in!",
          "enum": [
            "UNKNOWN_ELIGIBILITY",
            "ELIGIBLE",
            "INELIGIBLE_DASHER",
            "INELIGIBLE_GEO",
            "INELIGIBLE_UNICORN",
            "INELIGIBLE_OTHER"
          ],
          "enumDescriptions": [
            "Default value.",
            "The user is eligible.",
            "Ineligible due to Dasher restriction.",
            "Ineligible due to geo (country or territory) restriction.",
            "Ineligible due to Unicorn underage child account.",
            "Ineligible for some other reason."
          ],
          "type": "string"
        },
        "optedIn": {
          "description": "If the user is ineligible, they should not be opted in!",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PeoplePromotionCard": {
      "id": "PeoplePromotionCard",
      "properties": {
        "people": {
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PeopleSuggestion": {
      "description": "This field contains information about the person being suggested.",
      "id": "PeopleSuggestion",
      "properties": {
        "person": {
          "$ref": "Person",
          "description": "Suggested person. All fields of the person object might not be populated."
        }
      },
      "type": "object"
    },
    "Person": {
      "description": "Object to represent a person.",
      "id": "Person",
      "properties": {
        "emailAddresses": {
          "description": "The person's email addresses",
          "items": {
            "$ref": "EmailAddress"
          },
          "type": "array"
        },
        "name": {
          "description": "The resource name of the person to provide information about. See [`People.get`](https://developers.google.com/people/api/rest/v1/people/get) from the Google People API.",
          "type": "string"
        },
        "obfuscatedId": {
          "description": "Obfuscated ID of a person.",
          "type": "string"
        },
        "personNames": {
          "description": "The person's name",
          "items": {
            "$ref": "Name"
          },
          "type": "array"
        },
        "phoneNumbers": {
          "description": "The person's phone numbers",
          "items": {
            "$ref": "PhoneNumber"
          },
          "type": "array"
        },
        "photos": {
          "description": "A person's read-only photo. A picture shown next to the person's name to help others recognize the person in search results.",
          "items": {
            "$ref": "Photo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PersonCore": {
      "description": "Information for rendering a person. NEXT ID: 37",
      "id": "PersonCore",
      "properties": {
        "addressMeAs": {
          "description": "Instructions for how to address this person (e.g. custom pronouns). For google.com this is a set of pronouns from a defined list of options.",
          "type": "string"
        },
        "adminTo": {
          "description": "People the profile owner is an admin to. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "admins": {
          "description": "The profile owner's admins in no particular order. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "availabilityStatus": {
          "enum": [
            "UNKNOWN",
            "OUT_OF_OFFICE",
            "OUTSIDE_WORKING_HOURS",
            "AVAILABLE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "birthday": {
          "$ref": "Date",
          "description": "Person birthday."
        },
        "calendarUrl": {
          "$ref": "SafeUrlProto",
          "description": "The URL to open the profile owner's primary calendar."
        },
        "chatUrl": {
          "$ref": "SafeUrlProto",
          "description": "The URL to start a chat conversation with the profile owner. For google.com this is a Hangouts URL."
        },
        "costCenter": {
          "description": "Person's cost center as a string, e.g. \"926: Googler Apps\".",
          "type": "string"
        },
        "department": {
          "description": "The person's Organization department, e.g. \"People Operations\". For google.com this is usually called \"area\".",
          "type": "string"
        },
        "directReports": {
          "description": "A subset of the profile owner's direct reports. The number of entities here may be less than total_direct_reports_count, because typically ProfileResponse does not include all the person's reports, if there are too many to retrieve efficiently. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "dottedLineManagers": {
          "description": "The profile owner's direct dotted line managers in no particular order. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "dottedLineReports": {
          "description": "A subset of the profile owner's dotted-line reports. The number of entities here may be less than total_dlr_count. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "emails": {
          "description": "E-mail addresses of the person. The primary or preferred email should be first.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "employeeId": {
          "description": "Person's employee number (external ID of type \"organization\") For google.com this is the badge number (e.g. 2 for Larry Page).",
          "type": "string"
        },
        "fingerprint": {
          "description": "A fingerprint used by PAPI to reliably determine if a resource has changed Externally it is used as part of the etag.",
          "type": "string"
        },
        "ftePermille": {
          "description": "Full-time equivalent (in ‰) (e.g. 800 for a person who's working 80%).",
          "format": "int64",
          "type": "string"
        },
        "geoLocation": {
          "$ref": "MapInfo"
        },
        "gmailUrl": {
          "type": "string"
        },
        "jobTitle": {
          "description": "Profile owner's job title (e.g. \"Software Engineer\"). For google.com this is the Workday preferred job title.",
          "type": "string"
        },
        "keywordTypes": {
          "description": "List of keys to use from the map 'keywords'.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keywords": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom keywords the domain admin has added.",
          "type": "object"
        },
        "links": {
          "description": "Custom links the profile owner has added.",
          "items": {
            "$ref": "EnterpriseTopazFrontendTeamsLink"
          },
          "type": "array"
        },
        "location": {
          "description": "Detailed desk location within the company. For google.com this is the desk location code (e.g. \"DE-MUC-ARP-6T2-6T2C0C\") if the person has a desk.",
          "type": "string"
        },
        "managers": {
          "description": "The profile owner's management chain from top to bottom, where managers[0] is the CEO, manager[N-2] is the person's manager's manager and managers[N-1] is the person's direct manager. Note that not all fields of these PersonCores will be set, in particular, relationships will be empty.",
          "items": {
            "$ref": "PersonCore"
          },
          "type": "array"
        },
        "mission": {
          "description": "Custom mission statement the profile owner has added.",
          "type": "string"
        },
        "name": {
          "description": "Human-readable Unicode display name.",
          "type": "string"
        },
        "officeLocation": {
          "description": "Office/building identifier within the company. For google.com this is the office code (e.g. \"DE-MUC-ARP\").",
          "type": "string"
        },
        "personId": {
          "description": "The person's obfuscated Gaia ID.",
          "type": "string"
        },
        "phoneNumbers": {
          "items": {
            "$ref": "EnterpriseTopazFrontendTeamsPersonCorePhoneNumber"
          },
          "type": "array"
        },
        "photoUrl": {
          "$ref": "SafeUrlProto",
          "description": "Person photo."
        },
        "postalAddress": {
          "description": "Postal address of office/building.",
          "type": "string"
        },
        "totalDirectReportsCount": {
          "description": "Total count of the profile owner's direct reports.",
          "format": "int32",
          "type": "integer"
        },
        "totalDlrCount": {
          "description": "Total count of the profile owner's dotted-line reports.",
          "format": "int32",
          "type": "integer"
        },
        "totalFteCount": {
          "description": "The sum of all profile owner's reports and their own full-time-equivalents in ‰ (e.g. 1800 if one report is working 80% and profile owner 100%).",
          "format": "int64",
          "type": "string"
        },
        "username": {
          "description": "External ID of type \"login_id\" for the profile. For google.com this is the username/LDAP.",
          "type": "string"
        },
        "waldoComeBackTime": {
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneNumber": {
      "description": "A person's Phone Number",
      "id": "PhoneNumber",
      "properties": {
        "phoneNumber": {
          "description": "The phone number of the person.",
          "type": "string"
        },
        "type": {
          "enum": [
            "OTHER",
            "MOBILE",
            "OFFICE"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Photo": {
      "description": "A person's photo.",
      "id": "Photo",
      "properties": {
        "url": {
          "description": "The URL of the photo.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PollItemsRequest": {
      "id": "PollItemsRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "limit": {
          "description": "Maximum number of items to return. The maximum value is 100 and the default value is 20.",
          "format": "int32",
          "type": "integer"
        },
        "queue": {
          "description": "Queue name to fetch items from. If unspecified, PollItems will fetch from 'default' queue. The maximum length is 100 characters.",
          "type": "string"
        },
        "statusCodes": {
          "description": "Limit the items polled to the ones with these statuses.",
          "items": {
            "enum": [
              "CODE_UNSPECIFIED",
              "ERROR",
              "MODIFIED",
              "NEW_ITEM",
              "ACCEPTED"
            ],
            "enumDescriptions": [
              "Input-only value. Used with Items.list to list all items in the queue, regardless of status.",
              "Error encountered by Cloud Search while processing this item. Details of the error are in repositoryError.",
              "Item has been modified in the repository, and is out of date with the version previously accepted into Cloud Search.",
              "Item is known to exist in the repository, but is not yet accepted by Cloud Search. An item can be in this state when Items.push has been called for an item of this name that did not exist previously.",
              "API has accepted the up-to-date data of this item."
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PollItemsResponse": {
      "id": "PollItemsResponse",
      "properties": {
        "items": {
          "description": "Set of items from the queue available for connector to process. These items have the following subset of fields populated: version metadata.hash structured_data.hash content.hash payload status queue",
          "items": {
            "$ref": "Item"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Principal": {
      "description": "Reference to a user, group, or domain.",
      "id": "Principal",
      "properties": {
        "groupResourceName": {
          "description": "This principal is a group identified using an external identity. The name field must specify the group resource name with this format: identitysources/{source_id}/groups/{ID}",
          "type": "string"
        },
        "gsuitePrincipal": {
          "$ref": "GSuitePrincipal",
          "description": "This principal is a Google Workspace user, group or domain."
        },
        "userResourceName": {
          "description": "This principal is a user identified using an external identity. The name field must specify the user resource name with this format: identitysources/{source_id}/users/{ID}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProcessingError": {
      "id": "ProcessingError",
      "properties": {
        "code": {
          "description": "Error code indicating the nature of the error.",
          "enum": [
            "PROCESSING_ERROR_CODE_UNSPECIFIED",
            "MALFORMED_REQUEST",
            "UNSUPPORTED_CONTENT_FORMAT",
            "INDIRECT_BROKEN_ACL",
            "ACL_CYCLE"
          ],
          "enumDescriptions": [
            "Input only value. Use this value in Items.",
            "Item's ACL, metadata, or content is malformed or in invalid state. FieldViolations contains more details on where the problem is.",
            "Countent format is unsupported.",
            "Items with incomplete ACL information due to inheriting other items with broken ACL or having groups with unmapped descendants.",
            "ACL inheritance graph formed a cycle."
          ],
          "type": "string"
        },
        "errorMessage": {
          "description": "The description of the error.",
          "type": "string"
        },
        "fieldViolations": {
          "description": "In case the item fields are invalid, this field contains the details about the validation errors.",
          "items": {
            "$ref": "FieldViolation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProminentEntity": {
      "description": "prominent_entity(ies) field encodes the main subject(entities) which the client wants to bias the query into. For a Mini-App, it'll be the main entities in the current Mini-App page. It provides finer-granularity contexts on top of the “mode” field. Note that when QueryBiasingContext is passed to server through ClientDiscourseContext, the prominent_entity should NOT be set and the corresponding information will be merged from ClientDiscourseContext.entity field at the server side.",
      "id": "ProminentEntity",
      "properties": {
        "mid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PropertyDefinition": {
      "description": "The definition of a property within an object.",
      "id": "PropertyDefinition",
      "properties": {
        "booleanPropertyOptions": {
          "$ref": "BooleanPropertyOptions"
        },
        "datePropertyOptions": {
          "$ref": "DatePropertyOptions"
        },
        "displayOptions": {
          "$ref": "PropertyDisplayOptions",
          "description": "The options that determine how the property is displayed in the Cloud Search results page if it's specified to be displayed in the object's display options."
        },
        "doublePropertyOptions": {
          "$ref": "DoublePropertyOptions"
        },
        "enumPropertyOptions": {
          "$ref": "EnumPropertyOptions"
        },
        "htmlPropertyOptions": {
          "$ref": "HtmlPropertyOptions"
        },
        "integerPropertyOptions": {
          "$ref": "IntegerPropertyOptions"
        },
        "isFacetable": {
          "description": "Indicates that the property can be used for generating facets. Cannot be true for properties whose type is object. IsReturnable must be true to set this option. Only supported for boolean, enum, integer, and text properties.",
          "type": "boolean"
        },
        "isRepeatable": {
          "description": "Indicates that multiple values are allowed for the property. For example, a document only has one description but can have multiple comments. Cannot be true for properties whose type is a boolean. If set to false, properties that contain more than one value cause the indexing request for that item to be rejected.",
          "type": "boolean"
        },
        "isReturnable": {
          "description": "Indicates that the property identifies data that should be returned in search results via the Query API. If set to *true*, indicates that Query API users can use matching property fields in results. However, storing fields requires more space allocation and uses more bandwidth for search queries, which impacts performance over large datasets. Set to *true* here only if the field is needed for search results. Cannot be true for properties whose type is an object.",
          "type": "boolean"
        },
        "isSortable": {
          "description": "Indicates that the property can be used for sorting. Cannot be true for properties that are repeatable. Cannot be true for properties whose type is object. IsReturnable must be true to set this option. Only supported for boolean, date, double, integer, and timestamp properties.",
          "type": "boolean"
        },
        "isSuggestable": {
          "description": "Indicates that the property can be used for generating query suggestions.",
          "type": "boolean"
        },
        "isWildcardSearchable": {
          "description": "Indicates that users can perform wildcard search for this property. Only supported for Text properties. IsReturnable must be true to set this option. In a given datasource maximum of 5 properties can be marked as is_wildcard_searchable. For more details, see [Define object properties](https://developers.google.com/cloud-search/docs/guides/schema-guide#properties)",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the property. Item indexing requests sent to the Indexing API should set the property name equal to this value. For example, if name is *subject_line*, then indexing requests for document items with subject fields should set the name for that field equal to *subject_line*. Use the name as the identifier for the object property. Once registered as a property for an object, you cannot re-use this name for another property within that object. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The maximum length is 256 characters.",
          "type": "string"
        },
        "objectPropertyOptions": {
          "$ref": "ObjectPropertyOptions"
        },
        "textPropertyOptions": {
          "$ref": "TextPropertyOptions"
        },
        "timestampPropertyOptions": {
          "$ref": "TimestampPropertyOptions"
        }
      },
      "type": "object"
    },
    "PropertyDisplayOptions": {
      "description": "The display options for a property.",
      "id": "PropertyDisplayOptions",
      "properties": {
        "displayLabel": {
          "description": "The user friendly label for the property that is used if the property is specified to be displayed in ObjectDisplayOptions. If provided, the display label is shown in front of the property values when the property is part of the object display options. For example, if the property value is '1', the value by itself may not be useful context for the user. If the display name given was 'priority', then the user sees 'priority : 1' in the search results which provides clear context to search users. This is OPTIONAL; if not given, only the property values are displayed. The maximum length is 64 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProxyClassificationProto": {
      "description": "The enums in ProxyClassificationProto have the same values as in Neustar's data, plus a NONE value, corresponding to empty value in the Neustar's data. See Neustar's IP Intelligence GeoPoint Data Glossary (https://ipintelligence.neustar.biz/portal/home#downloads) for a more detailed description of the meaning of the values. In the data as of January 2016, if the IP address is classified as a proxy, the four fields anonymizer_status, proxy_type, proxy_level and proxy_last_detected_s are all present and set to a value different from NONE; otherwise the enum fields are not set or set to the corresponding NONE constant and proxy_last_detected_s is not set.",
      "id": "ProxyClassificationProto",
      "properties": {
        "anonymizerStatus": {
          "description": "WARNING: these fields are coming from a third party. Please consider using only privacy_proxy_operator. Before adding any new usage of this data, please talk to zszami@ and ipgeo-team@.",
          "enum": [
            "NONE",
            "ACTIVE",
            "SUSPECT",
            "INACTIVE",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "This is not a proxy or it is unknown what status it has.",
            "The anonymizer tested positive within the last month when the data were generated.",
            "The anonymizer tested positive within the 3 months, but not last month when the data were generated.",
            "The anonymizer tested positive within the last six months, but not in the last 3 months when the data were generated.",
            "An anonymizer that is not publicly accessible and as such, cannot be routinely tested with automated tools. E.g. commercial VPN services. Unlike the classifications ACTIVE/SUSPECT/INACTIVE, classification as PRIVATE gives no guarantees about the age of last proxy detection (proxy_last_detected_s) - it can be older than 6 months."
          ],
          "type": "string"
        },
        "hostingFacility": {
          "type": "boolean"
        },
        "privacyProxyOperator": {
          "description": "Operator of a privacy proxy, e.g. Google One (PPN) or Apple Private Relay. Mapping maintained by Google, does not include data from Neustar. If in doubt, use privacy_proxy_operator == NONE and != NONE to check for privacy proxies.",
          "enum": [
            "NONE",
            "UNKNOWN_PRIVACY_PROXY",
            "GOOGLE_PPN",
            "APPLE_PRIVATE_RELAY",
            "GOOGLE_IP_PROTECTION",
            "CLOUDFLARE_WARP"
          ],
          "enumDescriptions": [
            "This IP is not matched to any privacy proxy feeds maintained by IPGeo. Currently, proxy_type == PRIVACY_PROXY and privacy_proxy_operator = NONE may occur as the former field may also be filled by Neustar (3rd party), while this field is a google maintained datasource.",
            "Privacy proxy, but we don't know any specific operator.",
            "Values below may not be populated, most clients really should rely on ==NONE or !=NONE and have general messaging around privacy proxies.",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "proxyLastDetectedS": {
          "description": "In seconds since the Epoch.",
          "format": "int64",
          "type": "string"
        },
        "proxyLevel": {
          "enum": [
            "NONE",
            "ANONYMOUS",
            "DISTORTING",
            "ELITE",
            "TRANSPARENT"
          ],
          "enumDescriptions": [
            "This is not a proxy or it is unknown what level it has.",
            "The proxy obscures the end user’s IP address and does not conceal that it is a proxy. The following information is provided in the HTTP header: REMOTE_ADDR = Proxy IP Address HTTP_VIA = Proxy IP Address HTTP_X_FORWARDED_FOR = Proxy IP Address",
            "The proxy obscures the end user’s IP address and does not conceal that it is a proxy. However, the end user’s IP address is replaced with a random IP address, thus there is a degree of subterfuge. The following information is provided in the HTTP header: REMOTE_ADDR = Proxy IP Address HTTP_VIA = Proxy IP Address HTTP_X_FORWARDED_FOR = Random IP Address",
            "The proxy obscures the end user’s IP address and conceals that it is a proxy. The proxy appears to be an actual end user as all HTTP header fields are configured to appear as if a proxy is not in use: REMOTE_ADDR = Proxy IP Address HTTP_VIA = Not Determined HTTP_X_FORWARDED_FOR = Not Determined",
            "The proxy does not obscure the end user’s IP address, nor does it conceal that it is a proxy. These proxies are typically used for information cashing and to provide joint access to Internet for multiple computers. The following information is provided in the HTTP header: REMOTE_ADDR = Proxy IP Address HTTP_VIA = Proxy IP Address HTTP_X_FORWARDED_FOR = End User IP Address"
          ],
          "type": "string"
        },
        "proxyType": {
          "enum": [
            "NONE",
            "HTTP",
            "SERVICE",
            "SOCKS",
            "SOCKS_HTTP",
            "TOR",
            "UNKNOWN",
            "WEB",
            "PRIVACY_PROXY"
          ],
          "enumDescriptions": [
            "This is not a proxy or it is unknown what type it has.",
            "The proxy uses the HTTP protocol and has open ports which are accessible by any Internet user.",
            "The proxy is operated by an organization (often for profit) that provides access to subscribers as a service. The proxy is one of an array of proxies (often internationally distributed) that are part of a Virtual Private Network (VPN) that subscribers connect to by installing an application.",
            "The proxy uses the SOCKet Secure (SOCKS) protocol and has open ports which are accessible by any Internet user.",
            "The proxy has both the HTTP and SOCKS protocols setup and has open ports which are accessible by any Internet user.",
            "The proxy is part of the onion router (Tor) network.",
            "The proxy’s type could not be determined. (Doesn't occur in the data as of January 2016).",
            "The proxy operates through the use of an Internet web browser. Users navigate to the web proxy website, enter the URL of the site they actually wish to visit, and the contents of the requested URL are returned by the web proxy website within the browser.",
            "Privacy proxies are IPs leveraged by Privacy Proxy Service Providers to add additional privacy protections for end users. End user traffic is proxied through an IP, masking the end user's IP. Users do not have the ability to control the IP their traffic is proxied through or change the country from which their IP is originating. However, user traffic may be generalized to a different postal code, city, state, or region. An example for a privacy proxy is Apple Private Relay."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PushItem": {
      "description": "Represents an item to be pushed to the indexing queue.",
      "id": "PushItem",
      "properties": {
        "contentHash": {
          "description": "Content hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
          "type": "string"
        },
        "metadataHash": {
          "description": "The metadata hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
          "type": "string"
        },
        "payload": {
          "description": "Provides additional document state information for the connector, such as an alternate repository ID and other metadata. The maximum length is 8192 bytes.",
          "format": "byte",
          "type": "string"
        },
        "queue": {
          "description": "Queue to which this item belongs. The `default` queue is chosen if this field is not specified. The maximum length is 512 characters.",
          "type": "string"
        },
        "repositoryError": {
          "$ref": "RepositoryError",
          "description": "Populate this field to store Connector or repository error details. This information is displayed in the Admin Console. This field may only be populated when the Type is REPOSITORY_ERROR."
        },
        "structuredDataHash": {
          "description": "Structured data hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
          "type": "string"
        },
        "type": {
          "description": "The type of the push operation that defines the push behavior.",
          "enum": [
            "UNSPECIFIED",
            "MODIFIED",
            "NOT_MODIFIED",
            "REPOSITORY_ERROR",
            "REQUEUE"
          ],
          "enumDescriptions": [
            "Default UNSPECIFIED. Specifies that the push operation should not modify ItemStatus",
            "Indicates that the repository document has been modified or updated since the previous update call. This changes status to MODIFIED state for an existing item. If this is called on a non existing item, the status is changed to NEW_ITEM.",
            "Item in the repository has not been modified since the last update call. This push operation will set status to ACCEPTED state.",
            "Connector is facing a repository error regarding this item. Change status to REPOSITORY_ERROR state. Item is unreserved and rescheduled at a future time determined by exponential backoff.",
            "Call push with REQUEUE only for items that have been reserved. This action unreserves the item and resets its available time to the wall clock time."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PushItemRequest": {
      "id": "PushItemRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "item": {
          "$ref": "PushItem",
          "description": "Item to push onto the queue."
        }
      },
      "type": "object"
    },
    "QueryActivity": {
      "description": "Details about a user's query activity.",
      "id": "QueryActivity",
      "properties": {
        "query": {
          "description": "User input query to be logged/removed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QueryBiasingContext": {
      "deprecated": true,
      "description": "The message encapsulates the relevant query biasing contexts from a particular client, e.g. an individual Mini-App or an individual Mini-App page. Next id: 3",
      "id": "QueryBiasingContext",
      "properties": {
        "mode": {
          "description": "Specifies the mode to bias the queries from the client into. The mode value should be coming from the Mode enum.",
          "format": "int32",
          "type": "integer"
        },
        "prominentEntity": {
          "items": {
            "$ref": "ProminentEntity"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "QueryCountByStatus": {
      "id": "QueryCountByStatus",
      "properties": {
        "count": {
          "format": "int64",
          "type": "string"
        },
        "statusCode": {
          "description": "This represents the http status code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "QueryInterpretation": {
      "id": "QueryInterpretation",
      "properties": {
        "interpretationType": {
          "enum": [
            "NONE",
            "BLEND",
            "REPLACE"
          ],
          "enumDescriptions": [
            "Neither the natural language interpretation, nor a broader version of the query is used to fetch the search results.",
            "The results from original query are blended with other results. The reason for blending these other results with the results from original query is populated in the 'Reason' field below.",
            "The results from original query are replaced. The reason for replacing the results from original query is populated in the 'Reason' field below."
          ],
          "type": "string"
        },
        "interpretedQuery": {
          "description": "The interpretation of the query used in search. For example, queries with natural language intent like \"email from john\" will be interpreted as \"from:john source:mail\". This field will not be filled when the reason is NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for interpretation of the query. This field will not be UNSPECIFIED if the interpretation type is not NONE.",
          "enum": [
            "UNSPECIFIED",
            "QUERY_HAS_NATURAL_LANGUAGE_INTENT",
            "NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY"
          ],
          "enumDescriptions": [
            "",
            "Natural language interpretation of the query is used to fetch the search results.",
            "Query and document terms similarity is used to selectively broaden the query to retrieve additional search results since enough results were not found for the user query. Interpreted query will be empty for this case."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "QueryInterpretationConfig": {
      "description": "Default options to interpret user query.",
      "id": "QueryInterpretationConfig",
      "properties": {
        "forceDisableSupplementalResults": {
          "description": "Set this flag to disable supplemental results retrieval, setting a flag here will not retrieve supplemental results for queries associated with a given search application. If this flag is set to True, it will take precedence over the option set at Query level. For the default value of False, query level flag will set the correct interpretation for supplemental results.",
          "type": "boolean"
        },
        "forceVerbatimMode": {
          "description": "Enable this flag to turn off all internal optimizations like natural language (NL) interpretation of queries, supplemental results retrieval, and usage of synonyms including custom ones. If this flag is set to True, it will take precedence over the option set at Query level. For the default value of False, query level flag will set the correct interpretation for verbatim mode.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "QueryInterpretationOptions": {
      "description": "Options to interpret user query.",
      "id": "QueryInterpretationOptions",
      "properties": {
        "disableNlInterpretation": {
          "description": "Flag to disable natural language (NL) interpretation of queries. Default is false, Set to true to disable natural language interpretation. NL interpretation only applies to predefined datasources.",
          "type": "boolean"
        },
        "disableSupplementalResults": {
          "description": "Use this flag to disable supplemental results for a query. Supplemental results setting chosen at SearchApplication level will take precedence if set to True.",
          "type": "boolean"
        },
        "enableVerbatimMode": {
          "description": "Enable this flag to turn off all internal optimizations like natural language (NL) interpretation of queries, supplemental result retrieval, and usage of synonyms including custom ones. Nl interpretation will be disabled if either one of the two flags is true.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "QueryItem": {
      "description": "Information relevant only to a query entry.",
      "id": "QueryItem",
      "properties": {
        "isSynthetic": {
          "description": "True if the text was generated by means other than a previous user search.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "QueryOperator": {
      "description": "The definition of a operator that can be used in a Search/Suggest request.",
      "id": "QueryOperator",
      "properties": {
        "displayName": {
          "description": "Display name of the operator",
          "type": "string"
        },
        "enumValues": {
          "description": "Potential list of values for the opeatror field. This field is only filled when we can safely enumerate all the possible values of this operator.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "greaterThanOperatorName": {
          "description": "Indicates the operator name that can be used to isolate the property using the greater-than operator.",
          "type": "string"
        },
        "isFacetable": {
          "description": "Can this operator be used to get facets.",
          "type": "boolean"
        },
        "isRepeatable": {
          "description": "Indicates if multiple values can be set for this property.",
          "type": "boolean"
        },
        "isReturnable": {
          "description": "Will the property associated with this facet be returned as part of search results.",
          "type": "boolean"
        },
        "isSortable": {
          "description": "Can this operator be used to sort results.",
          "type": "boolean"
        },
        "isSuggestable": {
          "description": "Can get suggestions for this field.",
          "type": "boolean"
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name that can be used to isolate the property using the less-than operator.",
          "type": "string"
        },
        "objectType": {
          "description": "The name of the object corresponding to the operator. This field is only filled for schema-specific operators, and is unset for common operators.",
          "type": "string"
        },
        "operatorName": {
          "description": "The name of the operator.",
          "type": "string"
        },
        "type": {
          "description": "The type of the operator.",
          "enum": [
            "UNKNOWN",
            "INTEGER",
            "DOUBLE",
            "TIMESTAMP",
            "BOOLEAN",
            "ENUM",
            "DATE",
            "TEXT",
            "HTML"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuerySource": {
      "description": "List of sources that the user can search using the query API.",
      "id": "QuerySource",
      "properties": {
        "displayName": {
          "description": "Display name of the data source.",
          "type": "string"
        },
        "operators": {
          "description": "List of all operators applicable for this source.",
          "items": {
            "$ref": "QueryOperator"
          },
          "type": "array"
        },
        "shortName": {
          "description": "A short name or alias for the source. This value can be used with the 'source' operator.",
          "type": "string"
        },
        "source": {
          "$ref": "Source",
          "description": "The name of the source"
        }
      },
      "type": "object"
    },
    "QuerySuggestion": {
      "description": "This field does not contain anything as of now and is just used as an indicator that the suggest result was a phrase completion.",
      "id": "QuerySuggestion",
      "properties": {},
      "type": "object"
    },
    "RemoveActivityRequest": {
      "description": "Remove Logged Activity Request.",
      "id": "RemoveActivityRequest",
      "properties": {
        "requestOptions": {
          "$ref": "RequestOptions",
          "description": "Request options, such as the search application and clientId."
        },
        "userActivity": {
          "$ref": "UserActivity",
          "description": "User Activity containing the data to be deleted."
        }
      },
      "type": "object"
    },
    "RemoveActivityResponse": {
      "description": "Remove Logged Activity Response. will return an empty response for now. Will be revisited in later phases.",
      "id": "RemoveActivityResponse",
      "properties": {},
      "type": "object"
    },
    "RepositoryError": {
      "description": "Errors when the connector is communicating to the source repository.",
      "id": "RepositoryError",
      "properties": {
        "errorMessage": {
          "description": "Message that describes the error. The maximum allowable length of the message is 8192 characters.",
          "type": "string"
        },
        "httpStatusCode": {
          "description": "Error codes. Matches the definition of HTTP status codes.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of error.",
          "enum": [
            "UNKNOWN",
            "NETWORK_ERROR",
            "DNS_ERROR",
            "CONNECTION_ERROR",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "SERVER_ERROR",
            "QUOTA_EXCEEDED",
            "SERVICE_UNAVAILABLE",
            "CLIENT_ERROR"
          ],
          "enumDescriptions": [
            "Unknown error.",
            "Unknown or unreachable host.",
            "DNS problem, such as the DNS server is not responding.",
            "Cannot connect to the repository server.",
            "Failed authentication due to incorrect credentials.",
            "Service account is not authorized for the repository.",
            "Repository server error.",
            "Quota exceeded.",
            "Server temporarily unavailable.",
            "Client-related error, such as an invalid request from the connector to the repository server."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestOptions": {
      "description": "Shared request options for all RPC methods.",
      "id": "RequestOptions",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Debug options of the request"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For translations. Set this field using the language set in browser or for the page. In the event that the user's language preference is known, set this field to the known user language. When specified, the documents in search results are biased towards the specified language. The Suggest API uses this field as a hint to make better third-party autocomplete predictions.",
          "type": "string"
        },
        "searchApplicationId": {
          "description": "The ID generated when you create a search application using the [admin console](https://support.google.com/a/answer/9043922).",
          "type": "string"
        },
        "timeZone": {
          "description": "Current user's time zone id, such as \"America/Los_Angeles\" or \"Australia/Sydney\". These IDs are defined by [Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/) project, and currently available in the file [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml). This field is used to correctly interpret date and time queries. If this field is not specified, the default time zone (UTC) is used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResetSearchApplicationRequest": {
      "id": "ResetSearchApplicationRequest",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      },
      "type": "object"
    },
    "ResponseDebugInfo": {
      "description": "Debugging information about the response.",
      "id": "ResponseDebugInfo",
      "properties": {
        "formattedDebugInfo": {
          "description": "General debug info formatted for display.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestrictItem": {
      "description": "Information relevant only to a restrict entry. NextId: 12",
      "id": "RestrictItem",
      "properties": {
        "driveFollowUpRestrict": {
          "$ref": "DriveFollowUpRestrict"
        },
        "driveLocationRestrict": {
          "$ref": "DriveLocationRestrict"
        },
        "driveMimeTypeRestrict": {
          "$ref": "DriveMimeTypeRestrict",
          "description": "Drive Types."
        },
        "driveTimeSpanRestrict": {
          "$ref": "DriveTimeSpanRestrict"
        },
        "searchOperator": {
          "description": "The search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResultCounts": {
      "description": "Result count information",
      "id": "ResultCounts",
      "properties": {
        "sourceResultCounts": {
          "description": "Result count information for each source with results.",
          "items": {
            "$ref": "SourceResultCount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResultDebugInfo": {
      "description": "Debugging information about the result.",
      "id": "ResultDebugInfo",
      "properties": {
        "formattedDebugInfo": {
          "description": "General debug info formatted for display.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResultDisplayField": {
      "description": "Display Fields for Search Results",
      "id": "ResultDisplayField",
      "properties": {
        "label": {
          "description": "The display label for the property.",
          "type": "string"
        },
        "operatorName": {
          "description": "The operator name of the property.",
          "type": "string"
        },
        "property": {
          "$ref": "NamedProperty",
          "description": "The name value pair for the property."
        }
      },
      "type": "object"
    },
    "ResultDisplayLine": {
      "description": "The collection of fields that make up a displayed line",
      "id": "ResultDisplayLine",
      "properties": {
        "fields": {
          "items": {
            "$ref": "ResultDisplayField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResultDisplayMetadata": {
      "id": "ResultDisplayMetadata",
      "properties": {
        "metalines": {
          "description": "The metalines content to be displayed with the result.",
          "items": {
            "$ref": "ResultDisplayLine"
          },
          "type": "array"
        },
        "objectTypeLabel": {
          "description": "The display label for the object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RetrievalImportance": {
      "id": "RetrievalImportance",
      "properties": {
        "importance": {
          "description": "Indicates the ranking importance given to property when it is matched during retrieval. Once set, the token importance of a property cannot be changed.",
          "enum": [
            "DEFAULT",
            "HIGHEST",
            "HIGH",
            "LOW",
            "NONE"
          ],
          "enumDescriptions": [
            "Treat the match like a body text match.",
            "Treat the match like a match against title of the item.",
            "Treat the match with higher importance than body text.",
            "Treat the match with lower importance than body text.",
            "Do not match against this field during retrieval. The property can still be used for operator matching, faceting, and suggest if desired."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RewrittenQueries": {
      "description": "The rewritten queries returned by Apps Search Query Understanding service.",
      "id": "RewrittenQueries",
      "properties": {
        "rewrittenQueries": {
          "items": {
            "$ref": "RewrittenQuery"
          },
          "type": "array"
        },
        "selectedQueryIndex": {
          "description": "The index of the selected query in `rewritten_queries` that is used by QAPI to call CSSR to get search results. If none of the queries were used (i.e. they all give empty search results), `selected_query_index` would default to -1.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RewrittenQuery": {
      "id": "RewrittenQuery",
      "properties": {
        "rewrittenQuery": {
          "type": "string"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "sortBy": {
          "enum": [
            "SORTBY_UNSUPPORTED",
            "SORTBY_RELEVANCY",
            "SORTBY_LATEST",
            "SORTBY_OLDEST",
            "SORTBY_LARGEST",
            "SORTBY_SMALLEST",
            "SORTBY_MODIFY_LATEST",
            "SORTBY_MODIFY_OLDEST",
            "SORTBY_VIEW_LATEST",
            "SORTBY_VIEW_OLDEST",
            "SORTBY_CREATE_LATEST",
            "SORTBY_CREATE_OLDEST"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SafeHtmlProto": {
      "description": "IMPORTANT: It is unsafe to accept this message from an untrusted source, since it's trivial for an attacker to forge serialized messages that don't fulfill the type's safety contract -- for example, it could contain attacker controlled script. A system which receives a SafeHtmlProto implicitly trusts the producer of the SafeHtmlProto. So, it's generally safe to return this message in RPC responses, but generally unsafe to accept it in RPC requests.",
      "id": "SafeHtmlProto",
      "properties": {
        "privateDoNotAccessOrElseSafeHtmlWrappedValue": {
          "description": "IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at the top of .proto file for programming language packages with which to create or read this message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SafeUrlProto": {
      "description": "Message containing a string that is safe to use in URL contexts in DOM APIs and HTML documents, where the URL context does not refer to a resource that loads code.",
      "id": "SafeUrlProto",
      "properties": {
        "privateDoNotAccessOrElseSafeUrlWrappedValue": {
          "description": "IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at the top of .proto file for programming language packages with which to create or read this message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Schema": {
      "description": "The schema definition for a data source.",
      "id": "Schema",
      "properties": {
        "objectDefinitions": {
          "description": "The list of top-level objects for the data source. The maximum number of elements is 10.",
          "items": {
            "$ref": "ObjectDefinition"
          },
          "type": "array"
        },
        "operationIds": {
          "description": "IDs of the Long Running Operations (LROs) currently running for this schema. After modifying the schema, wait for operations to complete before indexing additional content.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ScoringConfig": {
      "description": "Scoring configurations for a source while processing a Search or Suggest request.",
      "id": "ScoringConfig",
      "properties": {
        "disableFreshness": {
          "description": "Whether to use freshness as a ranking signal. By default, freshness is used as a ranking signal. Note that this setting is not available in the Admin UI.",
          "type": "boolean"
        },
        "disablePersonalization": {
          "description": "Whether to personalize the results. By default, personal signals will be used to boost results.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SearchApplication": {
      "description": "SearchApplication",
      "id": "SearchApplication",
      "properties": {
        "dataSourceRestrictions": {
          "description": "Retrictions applied to the configurations. The maximum number of elements is 10.",
          "items": {
            "$ref": "DataSourceRestriction"
          },
          "type": "array"
        },
        "defaultFacetOptions": {
          "description": "The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.",
          "items": {
            "$ref": "FacetOptions"
          },
          "type": "array"
        },
        "defaultSortOptions": {
          "$ref": "SortOptions",
          "description": "The default options for sorting the search results"
        },
        "displayName": {
          "description": "Display name of the Search Application. The maximum length is 300 characters.",
          "type": "string"
        },
        "enableAuditLog": {
          "description": "Indicates whether audit logging is on/off for requests made for the search application in query APIs.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the Search Application. Format: searchapplications/{application_id}.",
          "type": "string"
        },
        "operationIds": {
          "description": "Output only. IDs of the Long Running Operations (LROs) currently running for this schema. Output only field.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "queryInterpretationConfig": {
          "$ref": "QueryInterpretationConfig",
          "description": "The default options for query interpretation"
        },
        "returnResultThumbnailUrls": {
          "description": "With each result we should return the URI for its thumbnail (when applicable)",
          "type": "boolean"
        },
        "scoringConfig": {
          "$ref": "ScoringConfig",
          "description": "Configuration for ranking results."
        },
        "sourceConfig": {
          "description": "Configuration for a sources specified in data_source_restrictions.",
          "items": {
            "$ref": "SourceConfig"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchApplicationQueryStats": {
      "description": "Search application level query stats per date",
      "id": "SearchApplicationQueryStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which query stats were calculated. Stats calculated on the next day close to midnight are returned."
        },
        "queryCountByStatus": {
          "items": {
            "$ref": "QueryCountByStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchApplicationSessionStats": {
      "id": "SearchApplicationSessionStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which session stats were calculated. Stats are calculated on the following day, close to midnight PST, and then returned."
        },
        "searchSessionsCount": {
          "description": "The count of search sessions on the day",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchApplicationUserStats": {
      "id": "SearchApplicationUserStats",
      "properties": {
        "date": {
          "$ref": "Date",
          "description": "The date for which session stats were calculated. Stats calculated on the next day close to midnight are returned."
        },
        "oneDayActiveUsersCount": {
          "description": "The count of unique active users in the past one day",
          "format": "int64",
          "type": "string"
        },
        "sevenDaysActiveUsersCount": {
          "description": "The count of unique active users in the past seven days",
          "format": "int64",
          "type": "string"
        },
        "thirtyDaysActiveUsersCount": {
          "description": "The count of unique active users in the past thirty days",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchItemsByViewUrlRequest": {
      "id": "SearchItemsByViewUrlRequest",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "pageToken": {
          "description": "The next_page_token value returned from a previous request, if any.",
          "type": "string"
        },
        "viewUrl": {
          "description": "Specify the full view URL to find the corresponding item. The maximum length is 2048 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchItemsByViewUrlResponse": {
      "id": "SearchItemsByViewUrlResponse",
      "properties": {
        "items": {
          "items": {
            "$ref": "Item"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchQualityMetadata": {
      "description": "Additional search quality metadata of the item.",
      "id": "SearchQualityMetadata",
      "properties": {
        "quality": {
          "description": "An indication of the quality of the item, used to influence search quality. Value should be between 0.0 (lowest quality) and 1.0 (highest quality). The default value is 0.0.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "SearchRequest": {
      "description": "The search API request.",
      "id": "SearchRequest",
      "properties": {
        "contextAttributes": {
          "description": "Context attributes for the request which will be used to adjust ranking of search results. The maximum number of elements is 10.",
          "items": {
            "$ref": "ContextAttribute"
          },
          "type": "array"
        },
        "dataSourceRestrictions": {
          "description": "The sources to use for querying. If not specified, all data sources from the current search application are used.",
          "items": {
            "$ref": "DataSourceRestriction"
          },
          "type": "array"
        },
        "facetOptions": {
          "items": {
            "$ref": "FacetOptions"
          },
          "type": "array"
        },
        "pageSize": {
          "description": "Maximum number of search results to return in one page. Valid values are between 1 and 100, inclusive. Default value is 10. Minimum value is 50 when results beyond 2000 are requested.",
          "format": "int32",
          "type": "integer"
        },
        "query": {
          "description": "The raw query string. See supported search operators in the [Narrow your search with operators](https://support.google.com/cloudsearch/answer/6172299)",
          "type": "string"
        },
        "queryInterpretationOptions": {
          "$ref": "QueryInterpretationOptions",
          "description": "Options to interpret the user query."
        },
        "requestOptions": {
          "$ref": "RequestOptions",
          "description": "Request options, such as the search application and user timezone."
        },
        "sortOptions": {
          "$ref": "SortOptions",
          "description": "The options for sorting the search results"
        },
        "start": {
          "description": "Starting index of the results.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SearchResponse": {
      "description": "The search API response.",
      "id": "SearchResponse",
      "properties": {
        "debugInfo": {
          "$ref": "ResponseDebugInfo",
          "description": "Debugging information about the response."
        },
        "errorInfo": {
          "$ref": "ErrorInfo",
          "description": "Error information about the response."
        },
        "facetResults": {
          "description": "Repeated facet results.",
          "items": {
            "$ref": "FacetResult"
          },
          "type": "array"
        },
        "hasMoreResults": {
          "description": "Whether there are more search results matching the query.",
          "type": "boolean"
        },
        "queryInterpretation": {
          "$ref": "QueryInterpretation",
          "description": "Query interpretation result for user query. Empty if query interpretation is disabled."
        },
        "resultCountEstimate": {
          "description": "The estimated result count for this query.",
          "format": "int64",
          "type": "string"
        },
        "resultCountExact": {
          "description": "The exact result count for this query.",
          "format": "int64",
          "type": "string"
        },
        "resultCounts": {
          "$ref": "ResultCounts",
          "description": "Expanded result count information."
        },
        "results": {
          "description": "Results from a search query.",
          "items": {
            "$ref": "SearchResult"
          },
          "type": "array"
        },
        "spellResults": {
          "description": "Suggested spelling for the query.",
          "items": {
            "$ref": "SpellResult"
          },
          "type": "array"
        },
        "structuredResults": {
          "description": "Structured results for the user query. These results are not counted against the page_size.",
          "items": {
            "$ref": "StructuredResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchResult": {
      "description": "Results containing indexed information for a document.",
      "id": "SearchResult",
      "properties": {
        "clusteredResults": {
          "description": "If source is clustered, provide list of clustered results. There will only be one level of clustered results. If current source is not enabled for clustering, this field will be empty.",
          "items": {
            "$ref": "SearchResult"
          },
          "type": "array"
        },
        "debugInfo": {
          "$ref": "ResultDebugInfo",
          "description": "Debugging information about this search result."
        },
        "metadata": {
          "$ref": "Metadata",
          "description": "Metadata of the search result."
        },
        "snippet": {
          "$ref": "Snippet",
          "description": "The concatenation of all snippets (summaries) available for this result."
        },
        "title": {
          "description": "Title of the search result.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the search result. The URL contains a Google redirect to the actual item. This URL is signed and shouldn't be changed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Snippet": {
      "description": "Snippet of the search result, which summarizes the content of the resulting page.",
      "id": "Snippet",
      "properties": {
        "matchRanges": {
          "description": "The matched ranges in the snippet.",
          "items": {
            "$ref": "MatchRange"
          },
          "type": "array"
        },
        "snippet": {
          "description": "The snippet of the document. May contain escaped HTML character that should be unescaped prior to rendering.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SortOptions": {
      "id": "SortOptions",
      "properties": {
        "operatorName": {
          "description": "The name of the operator corresponding to the field to sort on. The corresponding property must be marked as sortable.",
          "type": "string"
        },
        "sortOrder": {
          "description": "Ascending is the default sort order",
          "enum": [
            "ASCENDING",
            "DESCENDING"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Source": {
      "description": "Defines sources for the suggest/search APIs.",
      "id": "Source",
      "properties": {
        "name": {
          "description": "Source name for content indexed by the Indexing API.",
          "type": "string"
        },
        "predefinedSource": {
          "description": "Predefined content source for Google Apps.",
          "enum": [
            "NONE",
            "QUERY_HISTORY",
            "PERSON",
            "GOOGLE_DRIVE",
            "GOOGLE_GMAIL",
            "GOOGLE_SITES",
            "GOOGLE_GROUPS",
            "GOOGLE_CALENDAR",
            "GOOGLE_KEEP"
          ],
          "enumDescriptions": [
            "",
            "Suggests queries issued by the user in the past. Only valid when used with the suggest API. Ignored when used in the query API.",
            "Suggests people in the organization. Only valid when used with the suggest API. Results in an error when used in the query API.",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SourceConfig": {
      "description": "Configurations for a source while processing a Search or Suggest request.",
      "id": "SourceConfig",
      "properties": {
        "crowdingConfig": {
          "$ref": "SourceCrowdingConfig",
          "description": "The crowding configuration for the source."
        },
        "scoringConfig": {
          "$ref": "SourceScoringConfig",
          "description": "The scoring configuration for the source."
        },
        "source": {
          "$ref": "Source",
          "description": "The source for which this configuration is to be used."
        }
      },
      "type": "object"
    },
    "SourceCrowdingConfig": {
      "description": "Set search results crowding limits. Crowding is a situation in which multiple results from the same source or host \"crowd out\" other results, diminishing the quality of search for users. To foster better search quality and source diversity in search results, you can set a condition to reduce repetitive results by source.",
      "id": "SourceCrowdingConfig",
      "properties": {
        "numResults": {
          "description": "Maximum number of results allowed from a datasource in a result page as long as results from other sources are not exhausted. Value specified must not be negative. A default value is used if this value is equal to 0. To disable crowding, set the value greater than 100.",
          "format": "int32",
          "type": "integer"
        },
        "numSuggestions": {
          "description": "Maximum number of suggestions allowed from a source. No limits will be set on results if this value is less than or equal to 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SourceResultCount": {
      "description": "Per source result count information.",
      "id": "SourceResultCount",
      "properties": {
        "hasMoreResults": {
          "description": "Whether there are more search results for this source.",
          "type": "boolean"
        },
        "resultCountEstimate": {
          "description": "The estimated result count for this source.",
          "format": "int64",
          "type": "string"
        },
        "resultCountExact": {
          "description": "The exact result count for this source.",
          "format": "int64",
          "type": "string"
        },
        "source": {
          "$ref": "Source",
          "description": "The source the result count information is associated with."
        }
      },
      "type": "object"
    },
    "SourceScoringConfig": {
      "description": "Set the scoring configuration. This allows modifying the ranking of results for a source.",
      "id": "SourceScoringConfig",
      "properties": {
        "sourceImportance": {
          "description": "Importance of the source.",
          "enum": [
            "DEFAULT",
            "LOW",
            "HIGH"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpellResult": {
      "id": "SpellResult",
      "properties": {
        "suggestedQuery": {
          "description": "The suggested spelling of the query.",
          "type": "string"
        },
        "suggestedQueryHtml": {
          "$ref": "SafeHtmlProto",
          "description": "The sanitized HTML representing the spell corrected query that can be used in the UI. This usually has language-specific tags to mark up parts of the query that are spell checked."
        },
        "suggestionType": {
          "description": "Suggestion triggered for the current query.",
          "enum": [
            "SUGGESTION_TYPE_UNSPECIFIED",
            "NON_EMPTY_RESULTS_SPELL_SUGGESTION",
            "ZERO_RESULTS_FULL_PAGE_REPLACEMENT"
          ],
          "enumDescriptions": [
            "Default spell check type",
            "Spell suggestion without any results changed. The results are still shown for the original query (which has non zero / results) with a suggestion for spelling that would have results.",
            "Spell suggestion triggered when original query has no results. When the original query has no results, and spell suggestion has results we trigger results for the spell corrected query."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "StarlightConsistency": {
      "id": "StarlightConsistency",
      "properties": {
        "consistency": {
          "$ref": "MessageSet",
          "description": "Optional, data-source specific, data to help achieve consistency."
        },
        "timestampSec": {
          "description": "Timestamp of last write operation. By setting this value, a client requests to trigger a new fresh data acquisition if the fresh model is older than this timestamp.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "StartUploadItemRequest": {
      "description": "Start upload file request.",
      "id": "StartUploadItemRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StructuredDataObject": {
      "description": "A structured data object consisting of named properties.",
      "id": "StructuredDataObject",
      "properties": {
        "properties": {
          "description": "The properties for the object. The maximum number of elements is 1000.",
          "items": {
            "$ref": "NamedProperty"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StructuredResult": {
      "description": "Structured results that are returned as part of search request.",
      "id": "StructuredResult",
      "properties": {
        "person": {
          "$ref": "Person",
          "description": "Representation of a person"
        }
      },
      "type": "object"
    },
    "SuggestPersonalRerankDebugInfo": {
      "description": "Representation of user history for personal reranking. Debug only. Can be used for: 1) Manually entering the field to Suggest http debug GUI. 2) Sending protobuf using stubby tool. 3) Unit tests. 4) Offline analysis. Next ID to use: 3.",
      "id": "SuggestPersonalRerankDebugInfo",
      "properties": {
        "additionalInfo": {
          "$ref": "MessageSet",
          "description": "Can be used to store additional user history."
        },
        "userHistory": {
          "description": "The first query is considered to be the most recent query.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestRequest": {
      "description": "Request of suggest API.",
      "id": "SuggestRequest",
      "properties": {
        "dataSourceRestrictions": {
          "description": "The sources to use for suggestions. If not specified, the data sources are taken from the current search application. NOTE: Suggestions are only supported for the following sources: * Third-party data sources * PredefinedSource.PERSON * PredefinedSource.GOOGLE_DRIVE",
          "items": {
            "$ref": "DataSourceRestriction"
          },
          "type": "array"
        },
        "query": {
          "description": "Partial query for which autocomplete suggestions will be shown. For example, if the query is \"sea\", then the server might return \"season\", \"search\", \"seagull\" and so on.",
          "type": "string"
        },
        "requestOptions": {
          "$ref": "RequestOptions",
          "description": "Request options, such as the search application and user timezone."
        }
      },
      "type": "object"
    },
    "SuggestRequestDebugOptions": {
      "description": "Next ID to use: 13.",
      "id": "SuggestRequestDebugOptions",
      "properties": {
        "annotateWithSubtype": {
          "description": "Whether to add the subtype to the suggestion so it can be displayed in a side-by-side",
          "type": "boolean"
        },
        "debug": {
          "description": "Whether to enable debug info in SuggestResults.",
          "type": "boolean"
        },
        "disableBadwordFiltering": {
          "type": "boolean"
        },
        "disableHybridCache": {
          "description": "Whether to disable the hybrid cache.",
          "type": "boolean"
        },
        "disableKesemFiltering": {
          "type": "boolean"
        },
        "enableGetDataFromStarlightForPersonalSxs": {
          "description": "Whether to pull personal data from Starlight like Anima profile data for personal SxS eval.",
          "type": "boolean"
        },
        "enablePersonal": {
          "description": "Whether to add the user gaia_id to the request, so it can return personal suggestions.",
          "type": "boolean"
        },
        "freshMode": {
          "enum": [
            "ENABLE_FRESH",
            "DISABLE_FRESH",
            "FORCE_FRESH",
            "FORCE_FRESH_ONLY"
          ],
          "enumDescriptions": [
            "Activate fresh when supported - the usual case.",
            "Never return fresh completions.",
            "Always activate fresh completions.",
            "Always return only fresh completions."
          ],
          "type": "string"
        },
        "numResults": {
          "description": "Number of results to return. If 0, this options is ignored. Is NOT subject to the upper bound limit controlled by num_results_limit_max_override flag",
          "format": "int32",
          "type": "integer"
        },
        "sxs": {
          "type": "boolean"
        },
        "trace": {
          "enum": [
            "NONE",
            "ABBREVIATED_TRACE",
            "FULL_TRACE"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestResponse": {
      "description": "Response of the suggest API.",
      "id": "SuggestResponse",
      "properties": {
        "suggestResults": {
          "description": "List of suggestions.",
          "items": {
            "$ref": "SuggestResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestRestrict": {
      "id": "SuggestRestrict",
      "properties": {
        "name": {
          "description": "Name of the restrict, e.g. lang.",
          "type": "string"
        },
        "value": {
          "description": "Restrict value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestResult": {
      "description": "One suggestion result.",
      "id": "SuggestResult",
      "properties": {
        "peopleSuggestion": {
          "$ref": "PeopleSuggestion",
          "description": "This is present when the suggestion indicates a person. It contains more information about the person - like their email ID, name etc."
        },
        "querySuggestion": {
          "$ref": "QuerySuggestion",
          "description": "This field will be present if the suggested query is a word/phrase completion."
        },
        "source": {
          "$ref": "Source",
          "description": "The source of the suggestion."
        },
        "suggestedQuery": {
          "description": "The suggested query that will be used for search, when the user clicks on the suggestion",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestSuggestRequest": {
      "description": "Protos for the stubby interface. Next IDs to use: 37, 38, 39, 40, 43, 44, 46, 47, 48, 71, 77, 100.",
      "id": "SuggestSuggestRequest",
      "properties": {
        "requestdata": {
          "items": {
            "$ref": "SuggestSuggestRequestRequestData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestSuggestRequestRequestData": {
      "description": "A suggest request can ask for completions for one query only. For multiple request data an error is returned. Next IDs to use: 135.",
      "id": "SuggestSuggestRequestRequestData",
      "properties": {
        "DEPRECATEDInfiniteSuggest": {
          "description": "Whether to run in Infinite Suggest mode.",
          "type": "boolean"
        },
        "addedCharacterCount": {
          "description": "Number of sequentially added characters after a sequential deletion.",
          "format": "int32",
          "type": "integer"
        },
        "calc": {
          "description": "Enable calculator. Turning this field on will cause Complete Server to fill the SuggestResults.CalculatorSuggestion string field and it instead disables all the oneboxes (in SuggestResults.CompleteSuggestion.info), including the calculator onebox. Clients that are capable of rendering oneboxes should use the onebox calculator (and should leave this field turned off). When not specified, the default value of this field depends on the client. See suggestflow_state.cc: CommonInit().",
          "type": "boolean"
        },
        "cityId": {
          "description": "City location ID.",
          "format": "int32",
          "type": "integer"
        },
        "client": {
          "description": "The name of the requesting client (firefox, chrome, etc.).",
          "type": "string"
        },
        "clientInstanceId": {
          "description": "The client instance ID provided by AGSA. See http://go/client-instance-id",
          "type": "string"
        },
        "clientThumbnailDimensions": {
          "$ref": "SuggestSuggestRequestRequestDataClientThumbnailDimensions"
        },
        "complete": {
          "description": "Enable completion.",
          "type": "boolean"
        },
        "consistency": {
          "$ref": "StarlightConsistency",
          "description": "Allow sending read-after-write consistency data to Starlight."
        },
        "contextUrls": {
          "description": "Repeated list of URLs that we use to trigger context based suggestions (currently zero-prefix).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cookieInitTime": {
          "description": "cookie_init_time is typically set by GoogleCookie::initial_time()",
          "format": "int32",
          "type": "integer"
        },
        "country": {
          "description": "Requested country (us, uk, jp, cn, etc.).",
          "type": "string"
        },
        "countryByIp": {
          "description": "Country as determined by GeoIP.",
          "type": "string"
        },
        "cp": {
          "description": "Cursor position (for result-page requests).",
          "format": "int32",
          "type": "integer"
        },
        "dasherDomain": {
          "description": "The dasher domain of the searcher.",
          "format": "int64",
          "type": "string"
        },
        "debug": {
          "description": "Enable debug output.",
          "type": "boolean"
        },
        "debugOptions": {
          "$ref": "SuggestRequestDebugOptions"
        },
        "deletedCharacters": {
          "description": "Any sequentially deleted characters after the cursor position.",
          "type": "string"
        },
        "deviceOsVersion": {
          "type": "string"
        },
        "ds": {
          "description": "Requested dataset (i, m, yt, etc.).",
          "type": "string"
        },
        "enableVisualSuggest": {
          "description": "Whether to enable Visual Suggest. (Currently used for YouTube Suggest) Clients can opt to disable Visual Suggest based on current device specs and network conditions.",
          "type": "boolean"
        },
        "expid": {
          "description": "Experiment ID.",
          "type": "string"
        },
        "forceUserLocation": {
          "description": "Define the way to read data from the location context.",
          "type": "boolean"
        },
        "frozenClock": {
          "description": "Parameter frozen_clock in microseconds passed by SXS eval. This will be used as random number generator bit for consistent randomization for SXS tests.",
          "format": "int64",
          "type": "string"
        },
        "gaiaId": {
          "description": "Gaia ID for personal suggestions. Format is that of http://displayserver.corp.google.com/ Use ParseLeadingHex64Value in numbers.h to convert to an uint64",
          "type": "string"
        },
        "hourOfTheWeek": {
          "description": "Hour of the week (UTC).",
          "format": "int32",
          "type": "integer"
        },
        "includeAnswerData": {
          "description": "For each completion, annotate with: https://cs.corp.google.com/#piper///depot/google3/suggest/base/ answer.proto&l=15&rcl=53295698&pv=1 which is the probability that issuing the completion as a query will result in an answer being displayed to the user (live-result,one-box, etc.) If there is no answer type for which the probability is above zero, the completion will not be annotated.",
          "type": "boolean"
        },
        "includeLocalSignals": {
          "deprecated": true,
          "type": "boolean"
        },
        "includeWebrefAnnotations": {
          "description": "Annotate the suggestions with webref data.",
          "type": "boolean"
        },
        "ipAddress": {
          "description": "The user's ip address. Should NOT be used to override domain.",
          "type": "string"
        },
        "isConsole": {
          "description": "True only when using the CS debug console.",
          "type": "boolean"
        },
        "isDebugIp": {
          "description": "Set once by the server. Can be used for dog-fooding or tests.",
          "type": "boolean"
        },
        "isMobileDevice": {
          "description": "The following two fields, is_mobile_device and is_mobile_ux are used to denote whether the request comes from a mobile device or a device with mobile user experience. It's possible for a device type to be different than UX type since tablet devices could receive either mobile or desktop UX, as explained in go/ux-tier-logging.",
          "type": "boolean"
        },
        "isMobileUx": {
          "type": "boolean"
        },
        "isNonCorpDasherAccount": {
          "description": "For users who are using Google Apps for work (dasher) but are not internal users, we would like to turn off instant apps.",
          "type": "boolean"
        },
        "isRequestFromChina": {
          "description": "Indicates whether the request comes from china.",
          "type": "boolean"
        },
        "isUnicornAccount": {
          "description": "Whether the user's account is a Unicorn child account.",
          "type": "boolean"
        },
        "isUserInitiatedRequest": {
          "description": "This field should be set to false for requests that are generated due to something other than user interaction. For example: 0-prefix requests could be sent in the background (e.g. periodically) for updating a client side cache. On Android GSA, see http://go/android-0q-cache. Backends, such as Starlight, can then use this signal, e.g. for matters like load-shedding.",
          "type": "boolean"
        },
        "isVoiceQuery": {
          "description": "Whether the query was from voice search (set by Youtube LR)",
          "type": "boolean"
        },
        "lang": {
          "description": "Requested language (en, ru, iw, etc.).",
          "type": "string"
        },
        "latitude": {
          "description": "GPS coordinates of the mobile client in degrees, if known.",
          "format": "float",
          "type": "number"
        },
        "locationContext": {
          "$ref": "LocationUnifiedLocationContext",
          "description": "Oolong LocationContext (see http://goto/oolong)."
        },
        "locationId": {
          "description": "Region location ID.",
          "format": "int32",
          "type": "integer"
        },
        "logFlakyBackends": {
          "description": "If true, will log if there was any flaky backend in SuggestResponse.",
          "type": "boolean"
        },
        "longitude": {
          "format": "float",
          "type": "number"
        },
        "mapsMissPrefix": {
          "description": "State that overrides whether or not the maps fallback flow should run.",
          "type": "string"
        },
        "nav": {
          "description": "Enable navsuggest.",
          "type": "boolean"
        },
        "news": {
          "description": "Enable news.",
          "type": "boolean"
        },
        "numNavResults": {
          "description": "Upper limit of the number of navsuggest results to return.",
          "format": "int32",
          "type": "integer"
        },
        "numResultsLimit": {
          "description": "Number of suggestions to return. * In non Generic-Suggest clients, when set, this overrides the client configuration. Subject to upper bound limit controlled by num_results_limit_max_override flag. * In Generic-Suggest clients, when set, this caps the number of suggestions in addition to the client configuration. Ignores num_results_limit_max_override flag.",
          "format": "int32",
          "type": "integer"
        },
        "omniboxFocusType": {
          "description": "Chrome Omnibox focus type. This param is passed in \"oft\" CGI param.",
          "enum": [
            "INTERACTION_DEFAULT",
            "INTERACTION_FOCUS",
            "INTERACTION_CLOBBER"
          ],
          "enumDescriptions": [
            "The default value. This is used for any search requests without any special interaction annotation, including: normal omnibox searches, as-you-type omnibox suggestions, as well as non-omnibox searches.",
            "This search request is triggered by the user focusing the omnibox.",
            "This search request is triggered by the user deleting all of the omnibox permanent text at once, i.e. user is on \"https://example.com\", does Ctrl+L which selects the whole URL, then presses Backspace. Note that INTERACTION_CLOBBER applies in fairly limited circumstances. For example, the following cases do NOT qualify and are instead marked as INTERACTION_DEFAULT: - User deletes their own typed text. - User deletes the permanent text one character at a time. - User uses Cut (Ctrl+X) to delete the permanent text."
          ],
          "type": "string"
        },
        "omniboxInputType": {
          "description": "Chrome Omnibox input type. This param is passed in \"oit\" CGI param.",
          "enum": [
            "EMPTY",
            "UNKNOWN",
            "DEPRECATED_REQUESTED_URL",
            "URL",
            "QUERY",
            "DEPRECATED_FORCED_QUERY"
          ],
          "enumDescriptions": [
            "Empty input",
            "Valid input whose type cannot be determined",
            "DEPRECATED. Input autodetected as UNKNOWN, which the user wants to treat as an URL by specifying a desired_tld.",
            "Input autodetected as a URL",
            "Input autodetected as a query",
            "DEPRECATED. Input forced to be a query by an initial '?'"
          ],
          "type": "string"
        },
        "omniboxPageClassification": {
          "description": "Chrome Omnibox page classification. This param is passed in \"pgcl\" CGI param.",
          "enum": [
            "INVALID_SPEC",
            "NTP",
            "BLANK",
            "HOME_PAGE",
            "OTHER",
            "OBSOLETE_INSTANT_NTP",
            "SEARCH_RESULT_PAGE_DOING_SEARCH_TERM_REPLACEMENT",
            "INSTANT_NTP_WITH_OMNIBOX_AS_STARTING_FOCUS",
            "INSTANT_NTP_WITH_FAKEBOX_AS_STARTING_FOCUS",
            "SEARCH_RESULT_PAGE_NO_SEARCH_TERM_REPLACEMENT",
            "APP_HOME",
            "APP_SEARCH",
            "APP_MAPS",
            "SEARCH_BUTTON_AS_STARTING_FOCUS",
            "CHROMEOS_APP_LIST",
            "NTP_REALBOX",
            "ANDROID_SEARCH_WIDGET",
            "START_SURFACE_HOMEPAGE",
            "START_SURFACE_NEW_TAB",
            "ANDROID_SHORTCUTS_WIDGET",
            "NTP_ZPS_PREFETCH",
            "JOURNEYS",
            "SRP_ZPS_PREFETCH",
            "OTHER_ZPS_PREFETCH",
            "CONTEXTUAL_SEARCHBOX",
            "SEARCH_SIDE_PANEL_SEARCHBOX",
            "LENS_SIDE_PANEL_SEARCHBOX",
            "SEARCH_RESULT_PAGE_ON_CCT",
            "OTHER_ON_CCT"
          ],
          "enumDescriptions": [
            "BEGIN_GOOGLE_INTERNAL LINT.IfChange(omnibox_page_context) END_GOOGLE_INTERNAL An invalid URL; shouldn't happen.",
            "chrome://newtab/. For modern versions of Chrome, this is only reported when an extension is replacing the new tab page. Otherwise, new tab page interactions will be reported as NTP_REALBOX, INSTANT_NTP_WITH_FAKEBOX_AS_STARTING_FOCUS or INSTANT_NTP_WITH_OMNIBOX_AS_STARTING_FOCUS. For old versions of Chrome, this was reported for the default New Tab Page.",
            "about:blank.",
            "The user's home page. Note that if the home page is set to any of the new tab page versions or to about:blank, then we'll classify the page into those categories, not HOME_PAGE.",
            "The catch-all entry of everything not included somewhere else on this list.",
            "The instant new tab page. DEPRECATED on August 2, 2013.",
            "The user is on a search result page that does search term replacement. This means the search terms are shown in the omnibox instead of the URL. In other words: Query in Omnibox is Active for this SRP.",
            "The new tab page in which this omnibox interaction first started with the user having focus in the omnibox.",
            "The new tab page in which this omnibox interaction first started with the user having focus in the fakebox. This is replaced by NTP_REALBOX. DEPRECATED on Aug 17, 2020.",
            "The user is on a search result page that does not do search term replacement. This means the URL of the SRP is shown in the omnibox. In other words: Query in Omnibox is Inactive for this SRP.",
            "The user is on the home screen.",
            "The user is in the search app.",
            "The user is in the maps app.",
            "This omnibox interaction started with the user tapping the search button.",
            "This interaction started with the user focusing or typing in the search box of the ChromeOS app list (a.k.a., launcher).",
            "The new tab page in which this omnibox interaction started with the user having focus in the realbox.",
            "Android's Search Widget started directly from Launcher.",
            "Android's Start surface homepage. DEPRECATED on Jun 17, 2022.",
            "New Tab with Omnibox focused with Android's start surface finale enabled. DEPRECATED on Jun 17, 2022.",
            "Android's improved Search Widget with new suggestions.",
            "The New Tab Page zero-prefix suggestion prefetch. Used for prefetching suggestions and should never appear in an OmniboxEventProto or any of its derived histograms. (PageClassification enum is used in other places too, and not only OmniboxEventProto.)",
            "Used for Journeys requests in its landing page, side Panel or the NTP. Should never appear in an OmniboxEventProto or any of its derived histograms. (PageClassification enum is used in other places too, and not only OmniboxEventProto.)",
            "The Search Results Page zero-prefix suggestion prefetch. Used for prefetching suggestions and should never appear in an OmniboxEventProto or any of its derived histograms. (PageClassification enum is used in other places too, and not only OmniboxEventProto.)",
            "The catch-all zero-prefix suggestion prefetch for everything other than NTP and SRP. Used for prefetching suggestions and should never appear in an OmniboxEventProto or any of its derived histograms. (PageClassification enum is used in other places too, and not only OmniboxEventProto.)",
            "The searchbox in the lens overlay. BEGIN_GOOGLE_INTERNAL Used by the searchbox in the lens overlay (pre selection) which is contextual to the page. See go/chromnient-suggest-backend-integration for more details. END_GOOGLE_INTERNAL",
            "The searchbox in the search side panel. BEGIN_GOOGLE_INTERNAL Used by the search side panel searchbox (post text-selection) which may or may not be contextual to the page. See go/chromnient-suggest-backend-integration for more details. END_GOOGLE_INTERNAL",
            "The searchbox in the lens side panel. BEGIN_GOOGLE_INTERNAL Used by the lens side panel searchbox (post image-selection) which is multimodal. See go/chromnient-suggest-backend-integration for more details. END_GOOGLE_INTERNAL",
            "The user is visiting a search result page using Chrome Custom Tab. Equivalent of SEARCH_RESULT_PAGE_NO_SEARCH_TERM_REPLACEMENT for CCT.",
            "The user is visiting a non DSE web page using Chrome Custom Tab. Equivalent of OTHER for CCT."
          ],
          "type": "string"
        },
        "opaOpaqueToken": {
          "deprecated": true,
          "description": "The OPA opaque token provided by OPA. NOTE: Deprecated. Please use consistency.FootprintsVersionInfo.version_info.",
          "type": "string"
        },
        "optInContext": {
          "$ref": "ClientOptInContext",
          "description": "The opt-in context passed by GSA for App History suggestions. The opt-in context has a list of apps that should be excluded from the personalized App History suggestions. More details at: go/apphistory-suggestions."
        },
        "params": {
          "$ref": "MessageSet",
          "description": "Any additional SuggestRequest::RequestData params, like: RequestAndReferenceOverride (see experiments/suggest_experiment.proto): overrides the default client options; useful for enabling a feature on top of existing features defined for a given client. Person: extra params required by the people flow. MapsHeadRequestParams: extra params used by the maps head flow. OnFocusRequestParams: extra params used by on-focus request. SrDataForSuggestContextualizationRequestParams: extra params used by the SR for suggest context flow. MultimodalSuggestImageSignals: extra params used by Multimodal suggest flow."
        },
        "personalRerankDebugInfo": {
          "$ref": "SuggestPersonalRerankDebugInfo",
          "description": "The user debug info used in testing, offline analysis."
        },
        "prefId": {
          "deprecated": true,
          "description": "Deprecated.",
          "type": "string"
        },
        "previousQuery": {
          "description": "For result-page requests.",
          "type": "string"
        },
        "previousQuerySeconds": {
          "description": "Seconds since the previous_query was issued. Default value -1 means this field is not set in request.",
          "format": "int32",
          "type": "integer"
        },
        "previousVideoId": {
          "description": "Video id for the most recently watched Youtube Video on Android App. See go/pvideo-suggest for more details. Don't use this directly, instead use request_context->video_or_pvideo_id().",
          "type": "string"
        },
        "previousVideoSeconds": {
          "description": "Time in seconds since end of watch on the most recently watched Youtube Video on Android App.",
          "format": "int64",
          "type": "string"
        },
        "query": {
          "description": "Ask Google Suggest server for completions for this query.",
          "type": "string"
        },
        "queryBiasingContext": {
          "$ref": "QueryBiasingContext"
        },
        "referrer": {
          "description": "The HTTP request's referrer, it will be set for requests coming from web (desktop or mobile).",
          "type": "string"
        },
        "restrict": {
          "description": "Thirdparty restricted search.",
          "items": {
            "$ref": "SuggestRestrict"
          },
          "type": "array"
        },
        "runtimeData": {
          "$ref": "SuggestSuggestRequestRequestDataRuntimeData"
        },
        "selectionEnd": {
          "description": "End position of the user's selection (if any).",
          "format": "int32",
          "type": "integer"
        },
        "shouldPersonalize": {
          "description": "Specifies whether we should personalize Suggest results. Based on whether this field is set or not, we have the following interpretations: (1) this field is not set - we request a Kansas check to be done in PSuggest server (fall back to the user personalization settings) Note: this is the default behavior (2) this field is set to true - this forces personalization regardless Kansas settings (3) this field is set to false - this disables personalization (PSuggest flows are not invoked) Note: Originally, we planned to have Kansas check in GWS, however it turns out that Kansas is not on Suggest path and we were forced to implement this check in PSuggest server. See http://b/5265965 for more details.",
          "type": "boolean"
        },
        "siteRestrict": {
          "description": "Requests suggestions for query restricted to specified site. Should be a sitename (ex: 'youtube.com')",
          "type": "string"
        },
        "sourceLang": {
          "description": "The source language for dictionary/translate (en, ru, iw, etc.).",
          "type": "string"
        },
        "spell": {
          "description": "Enable spell correction.",
          "type": "boolean"
        },
        "spellingExperimentIds": {
          "deprecated": true,
          "description": "Deprecated: GWS Experiment Ids that are tagged for Spelling.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "startIndex": {
          "description": "If non-negative, determines the start index (starting at 0) for results: a value of '0' is a no-opt; and e.g. a value of '20' would skip the first 20 suggestions, returning results 21 - ?? (e.g. ?? = 30 if num_results_limit = 10). Currently, this is only used by PSuggest, and will be ignored by all other suggest backends.",
          "format": "int32",
          "type": "integer"
        },
        "suggestRequestId": {
          "description": "Request options, filled in a runtime.",
          "format": "int32",
          "type": "integer"
        },
        "suppressBolding": {
          "description": "Suppress fragment generation and bolding.",
          "type": "boolean"
        },
        "suppressPluspages": {
          "description": "Disables pluspage suggestions. This overrides client config. Intended for temporary UI state change as it happens when toolbar is activated.",
          "type": "boolean"
        },
        "targetLang": {
          "description": "The target language for dictionary/translate (en, ru, iw, etc.).",
          "type": "string"
        },
        "textAhead": {
          "description": "For querynation, this is the psychic completed part of the query. For example if the user has entered [cancun hote] in the searchbox and this completes to [cancun hotels], then text_ahead=\"ls\".",
          "type": "string"
        },
        "uncorrectedOriginalQuery": {
          "description": "Original query before it was refined or corrected (set by Youtube LR)",
          "type": "string"
        },
        "userAgent": {
          "description": "The user agent string, to be used temporarily within CompleteServer to accurately compute data volume estimate for additional events added to Sessions for Proxima (namely, go/search-metrics-and-triggering-proxima). ",
          "type": "string"
        },
        "userLocationFeatureId": {
          "description": "FeatureId associated with user location (from Oolong) as a string",
          "type": "string"
        },
        "userLocationResult": {
          "deprecated": true,
          "description": "Index of the result in location_context.results field that best describes the user location.",
          "format": "int32",
          "type": "integer"
        },
        "userPrefs": {
          "$ref": "SuggestSuggestRequestRequestDataUserPreferences"
        },
        "uuld": {
          "description": "Override the user location. Used for debugging.",
          "type": "string"
        },
        "videoId": {
          "description": "Video id for the currently watching Youtube Video. Don't use this directly, instead use request_context->video_or_pvideo_id().",
          "type": "string"
        },
        "visitorData": {
          "description": "Encrypted YouTube Visitor Data (see go/visitor-id-suggest). For privacy reasons, visitor_data can only be set in absence of gaia_id.",
          "type": "string"
        },
        "youtubeExternalChannelId": {
          "description": "External YouTube Channel ID for channel scoped suggestions. This ID is is passed through for creator features and is used to fetch channel personalized suggestions.",
          "type": "string"
        },
        "zwiebackId": {
          "description": "zwieback_id is set by GoogleCookie::uid() For SxS we override zwieback_id, please access through SuggestFlowUtils::GetZwiebackId(...).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestSuggestRequestRequestDataClientThumbnailDimensions": {
      "description": "The thumbnail dimensions as per client requirements. Next ID: 5",
      "id": "SuggestSuggestRequestRequestDataClientThumbnailDimensions",
      "properties": {
        "devicePixelRatio": {
          "format": "double",
          "type": "number"
        },
        "iconSizeInDp": {
          "format": "double",
          "type": "number"
        },
        "targetThumbnailHeight": {
          "format": "uint32",
          "type": "integer"
        },
        "targetThumbnailWidth": {
          "description": "Currently only used for YouTube Visual Suggest (go/ytandroid-visual-suggest).",
          "format": "uint32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SuggestSuggestRequestRequestDataRuntimeData": {
      "description": "Next ID: 2 TODO(b/237694378) Move this to ProcessedRequestContext.",
      "id": "SuggestSuggestRequestRequestDataRuntimeData",
      "properties": {
        "sanitizedRequestLanguage": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestSuggestRequestRequestDataUserPreferences": {
      "id": "SuggestSuggestRequestRequestDataUserPreferences",
      "properties": {
        "isTrendsDisabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TextOperatorOptions": {
      "description": "Used to provide a search operator for text properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "TextOperatorOptions",
      "properties": {
        "exactMatchWithOperator": {
          "description": "If true, the text value is tokenized as one atomic value in operator searches and facet matches. For example, if the operator name is \"genre\" and the value is \"science-fiction\" the query restrictions \"genre:science\" and \"genre:fiction\" doesn't match the item; \"genre:science-fiction\" does. Text value matching is case-sensitive and does not remove special characters. If false, the text is tokenized. For example, if the value is \"science-fiction\" the queries \"genre:science\" and \"genre:fiction\" matches the item.",
          "type": "boolean"
        },
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the text property. For example, if operatorName is *subject* and the property's name is *subjectLine*, then queries like *subject:<value>* show results only where the value of the property named *subjectLine* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any text properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TextPropertyOptions": {
      "description": "The options for text properties.",
      "id": "TextPropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "TextOperatorOptions",
          "description": "If set, describes how the property should be used as a search operator."
        },
        "retrievalImportance": {
          "$ref": "RetrievalImportance",
          "description": "Indicates the search quality importance of the tokens within the field when used for retrieval."
        }
      },
      "type": "object"
    },
    "TextValues": {
      "description": "List of text values.",
      "id": "TextValues",
      "properties": {
        "values": {
          "description": "The maximum allowable length for text values is 2048 characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ThirdPartyGenericCard": {
      "id": "ThirdPartyGenericCard",
      "properties": {
        "cardId": {
          "description": "Unique identifier for the card.",
          "type": "string"
        },
        "category": {
          "description": "Category that the card belongs to.",
          "type": "string"
        },
        "content": {
          "$ref": "Content",
          "description": "[Required] Card content."
        },
        "context": {
          "$ref": "Context",
          "description": "[Required] Context where the card should be triggered."
        },
        "isDismissible": {
          "description": "Whether the card can be dismissed.",
          "type": "boolean"
        },
        "priority": {
          "description": "Priority of the card, where 0 is the highest priority.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TimestampOperatorOptions": {
      "description": "Used to provide a search operator for timestamp properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.",
      "id": "TimestampOperatorOptions",
      "properties": {
        "greaterThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the timestamp property using the greater-than operator. For example, if greaterThanOperatorName is *closedafter* and the property's name is *closeDate*, then queries like *closedafter:<value>* show results only where the value of the property named *closeDate* is later than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "lessThanOperatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the timestamp property using the less-than operator. For example, if lessThanOperatorName is *closedbefore* and the property's name is *closeDate*, then queries like *closedbefore:<value>* show results only where the value of the property named *closeDate* is earlier than *<value>*. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        },
        "operatorName": {
          "description": "Indicates the operator name required in the query in order to isolate the timestamp property. For example, if operatorName is *closedon* and the property's name is *closeDate*, then queries like *closedon:<value>* show results only where the value of the property named *closeDate* matches *<value>*. By contrast, a search that uses the same *<value>* without an operator returns all items where *<value>* matches the value of any String properties or text within the content field for the item. The operator name can only contain lowercase letters (a-z). The maximum length is 32 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimestampPropertyOptions": {
      "description": "The options for timestamp properties.",
      "id": "TimestampPropertyOptions",
      "properties": {
        "operatorOptions": {
          "$ref": "TimestampOperatorOptions",
          "description": "If set, describes how the timestamp should be used as a search operator."
        }
      },
      "type": "object"
    },
    "TimestampValues": {
      "description": "List of timestamp values.",
      "id": "TimestampValues",
      "properties": {
        "values": {
          "items": {
            "format": "google-datetime",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnmappedIdentity": {
      "id": "UnmappedIdentity",
      "properties": {
        "externalIdentity": {
          "$ref": "Principal",
          "description": "The resource name for an external user."
        },
        "resolutionStatusCode": {
          "description": "The resolution status for the external identity.",
          "enum": [
            "CODE_UNSPECIFIED",
            "NOT_FOUND",
            "IDENTITY_SOURCE_NOT_FOUND",
            "IDENTITY_SOURCE_MISCONFIGURED",
            "TOO_MANY_MAPPINGS_FOUND",
            "INTERNAL_ERROR"
          ],
          "enumDescriptions": [
            "Input-only value. Used to list all unmapped identities regardless of status.",
            "The unmapped identity was not found in IDaaS, and needs to be provided by the user.",
            "The identity source associated with the identity was either not found or deleted.",
            "IDaaS does not understand the identity source, probably because the schema was modified in a non compatible way.",
            "The number of users associated with the external identity is too large.",
            "Internal error."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnreserveItemsRequest": {
      "id": "UnreserveItemsRequest",
      "properties": {
        "connectorName": {
          "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
          "type": "string"
        },
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "queue": {
          "description": "The name of a queue to unreserve items from.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateDataSourceRequest": {
      "id": "UpdateDataSourceRequest",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "source": {
          "$ref": "DataSource"
        },
        "updateMask": {
          "description": "Only applies to [`settings.datasources.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.datasources/patch). Update mask to control which fields to update. Example field paths: `name`, `displayName`. * If `update_mask` is non-empty, then only the fields specified in the `update_mask` are updated. * If you specify a field in the `update_mask`, but don't specify its value in the source, that field is cleared. * If the `update_mask` is not present or empty or has the value `*`, then all fields are updated.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateSchemaRequest": {
      "id": "UpdateSchemaRequest",
      "properties": {
        "debugOptions": {
          "$ref": "DebugOptions",
          "description": "Common debug options."
        },
        "schema": {
          "$ref": "Schema",
          "description": "The new schema for the source."
        },
        "validateOnly": {
          "description": "If true, the schema will be checked for validity, but will not be registered with the data source, even if valid.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "UploadItemRef": {
      "description": "Represents an upload session reference. This reference is created via upload method. This reference is valid for 30 days after its creation. Updating of item content may refer to this uploaded content via contentDataRef.",
      "id": "UploadItemRef",
      "properties": {
        "name": {
          "description": "The name of the content reference. The maximum length is 2048 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserActivity": {
      "description": "User's single or bulk query activity. This can be a logging query or deletion query.",
      "id": "UserActivity",
      "properties": {
        "queryActivity": {
          "$ref": "QueryActivity",
          "description": "Contains data which needs to be logged/removed."
        }
      },
      "type": "object"
    },
    "VPCSettings": {
      "id": "VPCSettings",
      "properties": {
        "project": {
          "description": "The resource name of the GCP Project to be used for VPC SC policy check. VPC security settings on this project will be honored for Cloud Search APIs after project_name has been updated through CustomerService. Format: projects/{project_id}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Value": {
      "description": "Definition of a single value with generic type.",
      "id": "Value",
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "dateValue": {
          "$ref": "Date"
        },
        "doubleValue": {
          "format": "double",
          "type": "number"
        },
        "integerValue": {
          "format": "int64",
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValueFilter": {
      "id": "ValueFilter",
      "properties": {
        "operatorName": {
          "description": "The `operator_name` applied to the query, such as *price_greater_than*. The filter can work against both types of filters defined in the schema for your data source: 1. `operator_name`, where the query filters results by the property that matches the value. 2. `greater_than_operator_name` or `less_than_operator_name` in your schema. The query filters the results for the property values that are greater than or less than the supplied value in the query.",
          "type": "string"
        },
        "value": {
          "$ref": "Value",
          "description": "The value to be compared with."
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "Cloud Search API",
  "version": "v1",
  "version_module": true
}