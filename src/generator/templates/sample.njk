{% if standalone %}
{% include "license.njk" %}

// THIS FILE IS AUTO-GENERATED

// {{ method.id }}
//
{% if method.description %}
// {{ method.description|cleanComments|safe|replace("\n", "\n // ") }}
{% endif %}
{% endif %}
// Before running the sample:
// - Enable the API at:
//   https://console.developers.google.com/apis/api/{{api.name}}.googleapis.com
// - Login into gcloud by running:
//   ```sh
//   $ gcloud auth application-default login
//   ```
// - Install the npm module by running:
//   ```sh
//   $ npm install googleapis
//   ```

const {google} = require('googleapis');
const {{api.name}} = google.{{api.name}}('{{api.version}}');

async function main() {
  const auth = new google.auth.GoogleAuth({
    // Scopes can be specified either as an array or as a single, space-delimited string.
    scopes: [
      {% for scope in method.scopes %}'{{scope}}',
      {% endfor %}
    ],
  });

  // Acquire an auth client, and bind it to all future calls
  const authClient = await auth.getClient();
  google.options({ auth: authClient });

  // Do the magic
  const res = await {{method.id}}({
    {% if method.parameters %}
    {% for pname, p in method.parameters|dictsort %}
    {% if p.description %} // {{ p.description|cleanComments|safe|replace('\n', '\n// ') }}{% endif %}

    {{ pname|cleanPropertyName|safe }}: {% if p.pattern %}'{{ p.pattern|unRegex }}'{% else %}'placeholder-value'{% endif %},
    {% endfor %}
    {% endif %}
    {% if method.request %}

    // Request body metadata
    requestBody: {
      // request body parameters
      // {{ requestExample | dump(2) | safe | replace('\n', '\n  // ') }}
    },
    {% elif method.supportsMediaUpload and method.mediaUpload.protocols.simple.multipart %}

    requestBody: {
      // request body parameters
    },
    {% endif %}
    {% if method.supportsMediaUpload %}
    media: {
      mimeType: 'placeholder-value',
      body: 'placeholder-value',
    },
    {% endif %}

  });
  console.log(res.data);

  {% if responseExample %}
  // Example response
  // {{ responseExample | dump(2) | safe | replace('\n', '\n  // ') }}
  {% endif %}
}

main().catch(e => {
  console.error(e);
  throw e;
});
