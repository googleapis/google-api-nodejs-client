on:
  push:
    branches:
      - main
  pull_request:
    types: [ assigned, opened, synchronize, reopened, labeled ]
name: ci
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18, 20]
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: node --version
      # The first installation step ensures that all of our production
      # dependencies work on the given Node.js version, this helps us find
      # dependencies that don't match our engines field:
      - run: npm install --production --engine-strict --ignore-scripts --no-package-lock
      # Clean up the production install, before installing dev/production:
      - run: rm -rf node_modules
      - run: npm install
      - run: npm test
        env:
          MOCHA_THROW_DEPRECATION: false
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 14
      - run: npm install
      - run: npm test
        env:
          MOCHA_THROW_DEPRECATION: false
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 14
      - run: npm install
      - run: npm run lint
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 14
      - run: npm install
      - run: npm run docs-test
